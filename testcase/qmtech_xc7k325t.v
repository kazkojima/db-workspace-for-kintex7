// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : qmtech_xc7k325t.v
// Device     : xc7k325tffg676-1
// LiteX sha1 : 133c15cc
// Date       : 2022-03-29 08:46:21
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module qmtech_xc7k325t (
	input  wire serial_rx,
	output reg  serial_tx,
	input  wire cpu_reset,
	input  wire clk50,
	output wire [13:0] ddram_a,
	output wire [2:0] ddram_ba,
	output wire ddram_ras_n,
	output wire ddram_cas_n,
	output wire ddram_we_n,
	output wire [1:0] ddram_dm,
	inout  wire [15:0] ddram_dq,
	inout  wire [1:0] ddram_dqs_p,
	inout  wire [1:0] ddram_dqs_n,
	output wire ddram_clk_p,
	output wire ddram_clk_n,
	output wire ddram_cke,
	output wire ddram_odt,
	output wire ddram_reset_n,
	input  wire eth_clocks_tx,
	input  wire eth_clocks_gtx,
	input  wire eth_clocks_rx,
	output wire eth_rst_n,
	inout  wire eth_mdio,
	output wire eth_mdc,
	input  wire eth_rx_dv,
	input  wire eth_rx_er,
	input  wire [7:0] eth_rx_data,
	output reg  eth_tx_en,
	output reg  eth_tx_er,
	output reg  [7:0] eth_tx_data,
	input  wire eth_col,
	input  wire eth_crs,
	output reg  user_led0,
	output reg  user_led1,
	output reg  user_led2,
	output reg  user_led3,
	output reg  user_led4,
	output wire [7:0] seven_seg0,
	output wire seven_seg_ctl0,
	output wire seven_seg_ctl1,
	output wire seven_seg_ctl2
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  basesoc_soc_rst = 1'd0;
wire basesoc_cpu_rst;
reg  [1:0] basesoc_reset_storage = 2'd0;
reg  basesoc_reset_re = 1'd0;
reg  [31:0] basesoc_scratch_storage = 32'd305419896;
reg  basesoc_scratch_re = 1'd0;
wire [31:0] basesoc_bus_errors_status;
wire basesoc_bus_errors_we;
reg  basesoc_bus_errors_re = 1'd0;
wire basesoc_bus_error;
reg  [31:0] basesoc_bus_errors = 32'd0;
wire basesoc_reset;
reg  [29:0] basesoc_idbus_adr = 30'd0;
reg  [31:0] basesoc_idbus_dat_w = 32'd0;
wire [31:0] basesoc_idbus_dat_r;
reg  [3:0] basesoc_idbus_sel = 4'd0;
reg  basesoc_idbus_cyc = 1'd0;
reg  basesoc_idbus_stb = 1'd0;
wire basesoc_idbus_ack;
reg  basesoc_idbus_we = 1'd0;
reg  [2:0] basesoc_idbus_cti = 3'd0;
reg  [1:0] basesoc_idbus_bte = 2'd0;
wire basesoc_idbus_err;
wire [31:0] basesoc_mbus_addr;
wire [31:0] basesoc_mbus_wdata;
wire [3:0] basesoc_mbus_wmask;
reg  [31:0] basesoc_mbus_rdata0 = 32'd0;
wire basesoc_mbus_rstrb;
reg  basesoc_mbus_rbusy = 1'd0;
reg  basesoc_mbus_wbusy = 1'd0;
reg  basesoc_latch = 1'd0;
reg  [31:0] basesoc_mbus_rdata1 = 32'd0;
wire [29:0] basesoc_basesoc_ram_bus_adr;
wire [31:0] basesoc_basesoc_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_ram_bus_sel;
wire basesoc_basesoc_ram_bus_cyc;
wire basesoc_basesoc_ram_bus_stb;
reg  basesoc_basesoc_ram_bus_ack = 1'd0;
wire basesoc_basesoc_ram_bus_we;
wire [2:0] basesoc_basesoc_ram_bus_cti;
wire [1:0] basesoc_basesoc_ram_bus_bte;
reg  basesoc_basesoc_ram_bus_err = 1'd0;
wire [14:0] basesoc_basesoc_adr;
wire [31:0] basesoc_basesoc_dat_r;
wire [29:0] basesoc_ram_bus_ram_bus_adr;
wire [31:0] basesoc_ram_bus_ram_bus_dat_w;
wire [31:0] basesoc_ram_bus_ram_bus_dat_r;
wire [3:0] basesoc_ram_bus_ram_bus_sel;
wire basesoc_ram_bus_ram_bus_cyc;
wire basesoc_ram_bus_ram_bus_stb;
reg  basesoc_ram_bus_ram_bus_ack = 1'd0;
wire basesoc_ram_bus_ram_bus_we;
wire [2:0] basesoc_ram_bus_ram_bus_cti;
wire [1:0] basesoc_ram_bus_ram_bus_bte;
reg  basesoc_ram_bus_ram_bus_err = 1'd0;
wire [10:0] basesoc_ram_adr;
wire [31:0] basesoc_ram_dat_r;
reg  [3:0] basesoc_ram_we = 4'd0;
wire [31:0] basesoc_ram_dat_w;
wire basesoc_tx_sink_valid;
reg  basesoc_tx_sink_ready = 1'd0;
wire basesoc_tx_sink_first;
wire basesoc_tx_sink_last;
wire [7:0] basesoc_tx_sink_payload_data;
reg  [7:0] basesoc_tx_data = 8'd0;
reg  [3:0] basesoc_tx_count = 4'd0;
reg  basesoc_tx_enable = 1'd0;
reg  basesoc_tx_tick = 1'd0;
reg  [31:0] basesoc_tx_phase = 32'd0;
reg  basesoc_rx_source_valid = 1'd0;
wire basesoc_rx_source_ready;
reg  basesoc_rx_source_first = 1'd0;
reg  basesoc_rx_source_last = 1'd0;
reg  [7:0] basesoc_rx_source_payload_data = 8'd0;
reg  [7:0] basesoc_rx_data = 8'd0;
reg  [3:0] basesoc_rx_count = 4'd0;
reg  basesoc_rx_enable = 1'd0;
reg  basesoc_rx_tick = 1'd0;
reg  [31:0] basesoc_rx_phase = 32'd0;
wire basesoc_rx_rx;
reg  basesoc_rx_rx_d = 1'd0;
reg  basesoc_uart_rxtx_re = 1'd0;
wire [7:0] basesoc_uart_rxtx_r;
reg  basesoc_uart_rxtx_we = 1'd0;
wire [7:0] basesoc_uart_rxtx_w;
wire basesoc_uart_txfull_status;
wire basesoc_uart_txfull_we;
reg  basesoc_uart_txfull_re = 1'd0;
wire basesoc_uart_rxempty_status;
wire basesoc_uart_rxempty_we;
reg  basesoc_uart_rxempty_re = 1'd0;
wire basesoc_uart_irq;
wire basesoc_uart_tx_status;
reg  basesoc_uart_tx_pending = 1'd0;
wire basesoc_uart_tx_trigger;
reg  basesoc_uart_tx_clear = 1'd0;
reg  basesoc_uart_tx_trigger_d = 1'd0;
wire basesoc_uart_rx_status;
reg  basesoc_uart_rx_pending = 1'd0;
wire basesoc_uart_rx_trigger;
reg  basesoc_uart_rx_clear = 1'd0;
reg  basesoc_uart_rx_trigger_d = 1'd0;
wire basesoc_uart_tx0;
wire basesoc_uart_rx0;
reg  [1:0] basesoc_uart_status_status = 2'd0;
wire basesoc_uart_status_we;
reg  basesoc_uart_status_re = 1'd0;
wire basesoc_uart_tx1;
wire basesoc_uart_rx1;
reg  [1:0] basesoc_uart_pending_status = 2'd0;
wire basesoc_uart_pending_we;
reg  basesoc_uart_pending_re = 1'd0;
reg  [1:0] basesoc_uart_pending_r = 2'd0;
wire basesoc_uart_tx2;
wire basesoc_uart_rx2;
reg  [1:0] basesoc_uart_enable_storage = 2'd0;
reg  basesoc_uart_enable_re = 1'd0;
wire basesoc_uart_txempty_status;
wire basesoc_uart_txempty_we;
reg  basesoc_uart_txempty_re = 1'd0;
wire basesoc_uart_rxfull_status;
wire basesoc_uart_rxfull_we;
reg  basesoc_uart_rxfull_re = 1'd0;
wire basesoc_uart_uart_sink_valid;
wire basesoc_uart_uart_sink_ready;
wire basesoc_uart_uart_sink_first;
wire basesoc_uart_uart_sink_last;
wire [7:0] basesoc_uart_uart_sink_payload_data;
wire basesoc_uart_uart_source_valid;
wire basesoc_uart_uart_source_ready;
wire basesoc_uart_uart_source_first;
wire basesoc_uart_uart_source_last;
wire [7:0] basesoc_uart_uart_source_payload_data;
wire basesoc_uart_tx_fifo_sink_valid;
wire basesoc_uart_tx_fifo_sink_ready;
reg  basesoc_uart_tx_fifo_sink_first = 1'd0;
reg  basesoc_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_uart_tx_fifo_sink_payload_data;
wire basesoc_uart_tx_fifo_source_valid;
wire basesoc_uart_tx_fifo_source_ready;
wire basesoc_uart_tx_fifo_source_first;
wire basesoc_uart_tx_fifo_source_last;
wire [7:0] basesoc_uart_tx_fifo_source_payload_data;
wire basesoc_uart_tx_fifo_re;
reg  basesoc_uart_tx_fifo_readable = 1'd0;
wire basesoc_uart_tx_fifo_syncfifo_we;
wire basesoc_uart_tx_fifo_syncfifo_writable;
wire basesoc_uart_tx_fifo_syncfifo_re;
wire basesoc_uart_tx_fifo_syncfifo_readable;
wire [9:0] basesoc_uart_tx_fifo_syncfifo_din;
wire [9:0] basesoc_uart_tx_fifo_syncfifo_dout;
reg  [4:0] basesoc_uart_tx_fifo_level0 = 5'd0;
reg  basesoc_uart_tx_fifo_replace = 1'd0;
reg  [3:0] basesoc_uart_tx_fifo_produce = 4'd0;
reg  [3:0] basesoc_uart_tx_fifo_consume = 4'd0;
reg  [3:0] basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart_tx_fifo_wrport_dat_r;
wire basesoc_uart_tx_fifo_wrport_we;
wire [9:0] basesoc_uart_tx_fifo_wrport_dat_w;
wire basesoc_uart_tx_fifo_do_read;
wire [3:0] basesoc_uart_tx_fifo_rdport_adr;
wire [9:0] basesoc_uart_tx_fifo_rdport_dat_r;
wire basesoc_uart_tx_fifo_rdport_re;
wire [4:0] basesoc_uart_tx_fifo_level1;
wire [7:0] basesoc_uart_tx_fifo_fifo_in_payload_data;
wire basesoc_uart_tx_fifo_fifo_in_first;
wire basesoc_uart_tx_fifo_fifo_in_last;
wire [7:0] basesoc_uart_tx_fifo_fifo_out_payload_data;
wire basesoc_uart_tx_fifo_fifo_out_first;
wire basesoc_uart_tx_fifo_fifo_out_last;
wire basesoc_uart_rx_fifo_sink_valid;
wire basesoc_uart_rx_fifo_sink_ready;
wire basesoc_uart_rx_fifo_sink_first;
wire basesoc_uart_rx_fifo_sink_last;
wire [7:0] basesoc_uart_rx_fifo_sink_payload_data;
wire basesoc_uart_rx_fifo_source_valid;
wire basesoc_uart_rx_fifo_source_ready;
wire basesoc_uart_rx_fifo_source_first;
wire basesoc_uart_rx_fifo_source_last;
wire [7:0] basesoc_uart_rx_fifo_source_payload_data;
wire basesoc_uart_rx_fifo_re;
reg  basesoc_uart_rx_fifo_readable = 1'd0;
wire basesoc_uart_rx_fifo_syncfifo_we;
wire basesoc_uart_rx_fifo_syncfifo_writable;
wire basesoc_uart_rx_fifo_syncfifo_re;
wire basesoc_uart_rx_fifo_syncfifo_readable;
wire [9:0] basesoc_uart_rx_fifo_syncfifo_din;
wire [9:0] basesoc_uart_rx_fifo_syncfifo_dout;
reg  [4:0] basesoc_uart_rx_fifo_level0 = 5'd0;
reg  basesoc_uart_rx_fifo_replace = 1'd0;
reg  [3:0] basesoc_uart_rx_fifo_produce = 4'd0;
reg  [3:0] basesoc_uart_rx_fifo_consume = 4'd0;
reg  [3:0] basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart_rx_fifo_wrport_dat_r;
wire basesoc_uart_rx_fifo_wrport_we;
wire [9:0] basesoc_uart_rx_fifo_wrport_dat_w;
wire basesoc_uart_rx_fifo_do_read;
wire [3:0] basesoc_uart_rx_fifo_rdport_adr;
wire [9:0] basesoc_uart_rx_fifo_rdport_dat_r;
wire basesoc_uart_rx_fifo_rdport_re;
wire [4:0] basesoc_uart_rx_fifo_level1;
wire [7:0] basesoc_uart_rx_fifo_fifo_in_payload_data;
wire basesoc_uart_rx_fifo_fifo_in_first;
wire basesoc_uart_rx_fifo_fifo_in_last;
wire [7:0] basesoc_uart_rx_fifo_fifo_out_payload_data;
wire basesoc_uart_rx_fifo_fifo_out_first;
wire basesoc_uart_rx_fifo_fifo_out_last;
reg  [31:0] basesoc_timer_load_storage = 32'd0;
reg  basesoc_timer_load_re = 1'd0;
reg  [31:0] basesoc_timer_reload_storage = 32'd0;
reg  basesoc_timer_reload_re = 1'd0;
reg  basesoc_timer_en_storage = 1'd0;
reg  basesoc_timer_en_re = 1'd0;
reg  basesoc_timer_update_value_storage = 1'd0;
reg  basesoc_timer_update_value_re = 1'd0;
reg  [31:0] basesoc_timer_value_status = 32'd0;
wire basesoc_timer_value_we;
reg  basesoc_timer_value_re = 1'd0;
wire basesoc_timer_irq;
wire basesoc_timer_zero_status;
reg  basesoc_timer_zero_pending = 1'd0;
wire basesoc_timer_zero_trigger;
reg  basesoc_timer_zero_clear = 1'd0;
reg  basesoc_timer_zero_trigger_d = 1'd0;
wire basesoc_timer_zero0;
wire basesoc_timer_status_status;
wire basesoc_timer_status_we;
reg  basesoc_timer_status_re = 1'd0;
wire basesoc_timer_zero1;
wire basesoc_timer_pending_status;
wire basesoc_timer_pending_we;
reg  basesoc_timer_pending_re = 1'd0;
reg  basesoc_timer_pending_r = 1'd0;
wire basesoc_timer_zero2;
reg  basesoc_timer_enable_storage = 1'd0;
reg  basesoc_timer_enable_re = 1'd0;
reg  [31:0] basesoc_timer_value = 32'd0;
reg  crg_rst = 1'd0;
wire sys_clk;
wire sys_rst;
wire sys4x_clk;
wire sys4x_dqs_clk;
wire idelay_clk;
wire idelay_rst;
wire eth_clk;
wire eth_rst;
wire crg_reset;
reg  crg_power_down = 1'd0;
wire crg_locked;
wire crg_clkin;
wire crg_clkout0;
wire crg_clkout_buf0;
wire crg_clkout1;
wire crg_clkout_buf1;
wire crg_clkout2;
wire crg_clkout_buf2;
wire crg_clkout3;
wire crg_clkout_buf3;
wire crg_clkout4;
wire crg_clkout_buf4;
reg  a7ddrphy_rst_storage = 1'd0;
reg  a7ddrphy_rst_re = 1'd0;
reg  [4:0] a7ddrphy_half_sys8x_taps_storage = 5'd8;
reg  a7ddrphy_half_sys8x_taps_re = 1'd0;
reg  a7ddrphy_wlevel_en_storage = 1'd0;
reg  a7ddrphy_wlevel_en_re = 1'd0;
reg  a7ddrphy_wlevel_strobe_re = 1'd0;
wire a7ddrphy_wlevel_strobe_r;
reg  a7ddrphy_wlevel_strobe_we = 1'd0;
reg  a7ddrphy_wlevel_strobe_w = 1'd0;
reg  [1:0] a7ddrphy_dly_sel_storage = 2'd0;
reg  a7ddrphy_dly_sel_re = 1'd0;
reg  a7ddrphy_rdly_dq_rst_re = 1'd0;
wire a7ddrphy_rdly_dq_rst_r;
reg  a7ddrphy_rdly_dq_rst_we = 1'd0;
reg  a7ddrphy_rdly_dq_rst_w = 1'd0;
reg  a7ddrphy_rdly_dq_inc_re = 1'd0;
wire a7ddrphy_rdly_dq_inc_r;
reg  a7ddrphy_rdly_dq_inc_we = 1'd0;
reg  a7ddrphy_rdly_dq_inc_w = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
wire a7ddrphy_rdly_dq_bitslip_rst_r;
reg  a7ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_re = 1'd0;
wire a7ddrphy_rdly_dq_bitslip_r;
reg  a7ddrphy_rdly_dq_bitslip_we = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_w = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_rst_re = 1'd0;
wire a7ddrphy_wdly_dq_bitslip_rst_r;
reg  a7ddrphy_wdly_dq_bitslip_rst_we = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_rst_w = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_re = 1'd0;
wire a7ddrphy_wdly_dq_bitslip_r;
reg  a7ddrphy_wdly_dq_bitslip_we = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_w = 1'd0;
reg  [1:0] a7ddrphy_rdphase_storage = 2'd2;
reg  a7ddrphy_rdphase_re = 1'd0;
reg  [1:0] a7ddrphy_wrphase_storage = 2'd3;
reg  a7ddrphy_wrphase_re = 1'd0;
wire [13:0] a7ddrphy_dfi_p0_address;
wire [2:0] a7ddrphy_dfi_p0_bank;
wire a7ddrphy_dfi_p0_cas_n;
wire a7ddrphy_dfi_p0_cs_n;
wire a7ddrphy_dfi_p0_ras_n;
wire a7ddrphy_dfi_p0_we_n;
wire a7ddrphy_dfi_p0_cke;
wire a7ddrphy_dfi_p0_odt;
wire a7ddrphy_dfi_p0_reset_n;
wire a7ddrphy_dfi_p0_act_n;
wire [31:0] a7ddrphy_dfi_p0_wrdata;
wire a7ddrphy_dfi_p0_wrdata_en;
wire [3:0] a7ddrphy_dfi_p0_wrdata_mask;
wire a7ddrphy_dfi_p0_rddata_en;
reg  [31:0] a7ddrphy_dfi_p0_rddata = 32'd0;
wire a7ddrphy_dfi_p0_rddata_valid;
wire [13:0] a7ddrphy_dfi_p1_address;
wire [2:0] a7ddrphy_dfi_p1_bank;
wire a7ddrphy_dfi_p1_cas_n;
wire a7ddrphy_dfi_p1_cs_n;
wire a7ddrphy_dfi_p1_ras_n;
wire a7ddrphy_dfi_p1_we_n;
wire a7ddrphy_dfi_p1_cke;
wire a7ddrphy_dfi_p1_odt;
wire a7ddrphy_dfi_p1_reset_n;
wire a7ddrphy_dfi_p1_act_n;
wire [31:0] a7ddrphy_dfi_p1_wrdata;
wire a7ddrphy_dfi_p1_wrdata_en;
wire [3:0] a7ddrphy_dfi_p1_wrdata_mask;
wire a7ddrphy_dfi_p1_rddata_en;
reg  [31:0] a7ddrphy_dfi_p1_rddata = 32'd0;
wire a7ddrphy_dfi_p1_rddata_valid;
wire [13:0] a7ddrphy_dfi_p2_address;
wire [2:0] a7ddrphy_dfi_p2_bank;
wire a7ddrphy_dfi_p2_cas_n;
wire a7ddrphy_dfi_p2_cs_n;
wire a7ddrphy_dfi_p2_ras_n;
wire a7ddrphy_dfi_p2_we_n;
wire a7ddrphy_dfi_p2_cke;
wire a7ddrphy_dfi_p2_odt;
wire a7ddrphy_dfi_p2_reset_n;
wire a7ddrphy_dfi_p2_act_n;
wire [31:0] a7ddrphy_dfi_p2_wrdata;
wire a7ddrphy_dfi_p2_wrdata_en;
wire [3:0] a7ddrphy_dfi_p2_wrdata_mask;
wire a7ddrphy_dfi_p2_rddata_en;
reg  [31:0] a7ddrphy_dfi_p2_rddata = 32'd0;
wire a7ddrphy_dfi_p2_rddata_valid;
wire [13:0] a7ddrphy_dfi_p3_address;
wire [2:0] a7ddrphy_dfi_p3_bank;
wire a7ddrphy_dfi_p3_cas_n;
wire a7ddrphy_dfi_p3_cs_n;
wire a7ddrphy_dfi_p3_ras_n;
wire a7ddrphy_dfi_p3_we_n;
wire a7ddrphy_dfi_p3_cke;
wire a7ddrphy_dfi_p3_odt;
wire a7ddrphy_dfi_p3_reset_n;
wire a7ddrphy_dfi_p3_act_n;
wire [31:0] a7ddrphy_dfi_p3_wrdata;
wire a7ddrphy_dfi_p3_wrdata_en;
wire [3:0] a7ddrphy_dfi_p3_wrdata_mask;
wire a7ddrphy_dfi_p3_rddata_en;
reg  [31:0] a7ddrphy_dfi_p3_rddata = 32'd0;
wire a7ddrphy_dfi_p3_rddata_valid;
wire a7ddrphy_sd_clk_se_nodelay;
wire [2:0] a7ddrphy_pads_ba;
reg  a7ddrphy_dqs_oe = 1'd0;
wire a7ddrphy_dqs_preamble;
wire a7ddrphy_dqs_postamble;
wire a7ddrphy_dqs_oe_delay_tappeddelayline;
reg  a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg  a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
reg  a7ddrphy_dqspattern0 = 1'd0;
reg  a7ddrphy_dqspattern1 = 1'd0;
reg  [7:0] a7ddrphy_dqspattern_o0 = 8'd0;
reg  [7:0] a7ddrphy_dqspattern_o1 = 8'd0;
reg  [7:0] a7ddrphy_bitslip00 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r0 = 16'd0;
wire a7ddrphy_dqs_o_no_delay0;
wire a7ddrphy_dqs_t0;
wire a7ddrphy0;
reg  [7:0] a7ddrphy_bitslip10 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r0 = 16'd0;
wire a7ddrphy_dqs_o_no_delay1;
wire a7ddrphy_dqs_t1;
wire a7ddrphy1;
reg  [7:0] a7ddrphy_bitslip01 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r1 = 16'd0;
reg  [7:0] a7ddrphy_bitslip11 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r1 = 16'd0;
wire a7ddrphy_dq_oe;
wire a7ddrphy_dq_oe_delay_tappeddelayline;
reg  a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg  a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire a7ddrphy_dq_o_nodelay0;
wire a7ddrphy_dq_i_nodelay0;
wire a7ddrphy_dq_i_delayed0;
wire a7ddrphy_dq_t0;
reg  [7:0] a7ddrphy_bitslip02 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value2 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r2 = 16'd0;
wire [7:0] a7ddrphy_bitslip03;
reg  [7:0] a7ddrphy_bitslip04 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value3 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r3 = 16'd0;
wire a7ddrphy_dq_o_nodelay1;
wire a7ddrphy_dq_i_nodelay1;
wire a7ddrphy_dq_i_delayed1;
wire a7ddrphy_dq_t1;
reg  [7:0] a7ddrphy_bitslip12 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value2 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r2 = 16'd0;
wire [7:0] a7ddrphy_bitslip13;
reg  [7:0] a7ddrphy_bitslip14 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value3 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r3 = 16'd0;
wire a7ddrphy_dq_o_nodelay2;
wire a7ddrphy_dq_i_nodelay2;
wire a7ddrphy_dq_i_delayed2;
wire a7ddrphy_dq_t2;
reg  [7:0] a7ddrphy_bitslip20 = 8'd0;
reg  [2:0] a7ddrphy_bitslip2_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip2_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip21;
reg  [7:0] a7ddrphy_bitslip22 = 8'd0;
reg  [2:0] a7ddrphy_bitslip2_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip2_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay3;
wire a7ddrphy_dq_i_nodelay3;
wire a7ddrphy_dq_i_delayed3;
wire a7ddrphy_dq_t3;
reg  [7:0] a7ddrphy_bitslip30 = 8'd0;
reg  [2:0] a7ddrphy_bitslip3_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip3_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip31;
reg  [7:0] a7ddrphy_bitslip32 = 8'd0;
reg  [2:0] a7ddrphy_bitslip3_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip3_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay4;
wire a7ddrphy_dq_i_nodelay4;
wire a7ddrphy_dq_i_delayed4;
wire a7ddrphy_dq_t4;
reg  [7:0] a7ddrphy_bitslip40 = 8'd0;
reg  [2:0] a7ddrphy_bitslip4_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip4_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip41;
reg  [7:0] a7ddrphy_bitslip42 = 8'd0;
reg  [2:0] a7ddrphy_bitslip4_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip4_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay5;
wire a7ddrphy_dq_i_nodelay5;
wire a7ddrphy_dq_i_delayed5;
wire a7ddrphy_dq_t5;
reg  [7:0] a7ddrphy_bitslip50 = 8'd0;
reg  [2:0] a7ddrphy_bitslip5_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip5_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip51;
reg  [7:0] a7ddrphy_bitslip52 = 8'd0;
reg  [2:0] a7ddrphy_bitslip5_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip5_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay6;
wire a7ddrphy_dq_i_nodelay6;
wire a7ddrphy_dq_i_delayed6;
wire a7ddrphy_dq_t6;
reg  [7:0] a7ddrphy_bitslip60 = 8'd0;
reg  [2:0] a7ddrphy_bitslip6_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip6_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip61;
reg  [7:0] a7ddrphy_bitslip62 = 8'd0;
reg  [2:0] a7ddrphy_bitslip6_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip6_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay7;
wire a7ddrphy_dq_i_nodelay7;
wire a7ddrphy_dq_i_delayed7;
wire a7ddrphy_dq_t7;
reg  [7:0] a7ddrphy_bitslip70 = 8'd0;
reg  [2:0] a7ddrphy_bitslip7_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip7_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip71;
reg  [7:0] a7ddrphy_bitslip72 = 8'd0;
reg  [2:0] a7ddrphy_bitslip7_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip7_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay8;
wire a7ddrphy_dq_i_nodelay8;
wire a7ddrphy_dq_i_delayed8;
wire a7ddrphy_dq_t8;
reg  [7:0] a7ddrphy_bitslip80 = 8'd0;
reg  [2:0] a7ddrphy_bitslip8_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip8_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip81;
reg  [7:0] a7ddrphy_bitslip82 = 8'd0;
reg  [2:0] a7ddrphy_bitslip8_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip8_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay9;
wire a7ddrphy_dq_i_nodelay9;
wire a7ddrphy_dq_i_delayed9;
wire a7ddrphy_dq_t9;
reg  [7:0] a7ddrphy_bitslip90 = 8'd0;
reg  [2:0] a7ddrphy_bitslip9_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip9_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip91;
reg  [7:0] a7ddrphy_bitslip92 = 8'd0;
reg  [2:0] a7ddrphy_bitslip9_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip9_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay10;
wire a7ddrphy_dq_i_nodelay10;
wire a7ddrphy_dq_i_delayed10;
wire a7ddrphy_dq_t10;
reg  [7:0] a7ddrphy_bitslip100 = 8'd0;
reg  [2:0] a7ddrphy_bitslip10_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip10_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip101;
reg  [7:0] a7ddrphy_bitslip102 = 8'd0;
reg  [2:0] a7ddrphy_bitslip10_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip10_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay11;
wire a7ddrphy_dq_i_nodelay11;
wire a7ddrphy_dq_i_delayed11;
wire a7ddrphy_dq_t11;
reg  [7:0] a7ddrphy_bitslip110 = 8'd0;
reg  [2:0] a7ddrphy_bitslip11_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip11_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip111;
reg  [7:0] a7ddrphy_bitslip112 = 8'd0;
reg  [2:0] a7ddrphy_bitslip11_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip11_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay12;
wire a7ddrphy_dq_i_nodelay12;
wire a7ddrphy_dq_i_delayed12;
wire a7ddrphy_dq_t12;
reg  [7:0] a7ddrphy_bitslip120 = 8'd0;
reg  [2:0] a7ddrphy_bitslip12_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip12_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip121;
reg  [7:0] a7ddrphy_bitslip122 = 8'd0;
reg  [2:0] a7ddrphy_bitslip12_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip12_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay13;
wire a7ddrphy_dq_i_nodelay13;
wire a7ddrphy_dq_i_delayed13;
wire a7ddrphy_dq_t13;
reg  [7:0] a7ddrphy_bitslip130 = 8'd0;
reg  [2:0] a7ddrphy_bitslip13_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip13_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip131;
reg  [7:0] a7ddrphy_bitslip132 = 8'd0;
reg  [2:0] a7ddrphy_bitslip13_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip13_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay14;
wire a7ddrphy_dq_i_nodelay14;
wire a7ddrphy_dq_i_delayed14;
wire a7ddrphy_dq_t14;
reg  [7:0] a7ddrphy_bitslip140 = 8'd0;
reg  [2:0] a7ddrphy_bitslip14_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip14_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip141;
reg  [7:0] a7ddrphy_bitslip142 = 8'd0;
reg  [2:0] a7ddrphy_bitslip14_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip14_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay15;
wire a7ddrphy_dq_i_nodelay15;
wire a7ddrphy_dq_i_delayed15;
wire a7ddrphy_dq_t15;
reg  [7:0] a7ddrphy_bitslip150 = 8'd0;
reg  [2:0] a7ddrphy_bitslip15_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip15_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip151;
reg  [7:0] a7ddrphy_bitslip152 = 8'd0;
reg  [2:0] a7ddrphy_bitslip15_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip15_r1 = 16'd0;
reg  a7ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
wire [13:0] basesoc_sdram_inti_p0_address;
wire [2:0] basesoc_sdram_inti_p0_bank;
reg  basesoc_sdram_inti_p0_cas_n = 1'd1;
reg  basesoc_sdram_inti_p0_cs_n = 1'd1;
reg  basesoc_sdram_inti_p0_ras_n = 1'd1;
reg  basesoc_sdram_inti_p0_we_n = 1'd1;
wire basesoc_sdram_inti_p0_cke;
wire basesoc_sdram_inti_p0_odt;
wire basesoc_sdram_inti_p0_reset_n;
reg  basesoc_sdram_inti_p0_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p0_wrdata;
wire basesoc_sdram_inti_p0_wrdata_en;
wire [3:0] basesoc_sdram_inti_p0_wrdata_mask;
wire basesoc_sdram_inti_p0_rddata_en;
reg  [31:0] basesoc_sdram_inti_p0_rddata = 32'd0;
reg  basesoc_sdram_inti_p0_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_inti_p1_address;
wire [2:0] basesoc_sdram_inti_p1_bank;
reg  basesoc_sdram_inti_p1_cas_n = 1'd1;
reg  basesoc_sdram_inti_p1_cs_n = 1'd1;
reg  basesoc_sdram_inti_p1_ras_n = 1'd1;
reg  basesoc_sdram_inti_p1_we_n = 1'd1;
wire basesoc_sdram_inti_p1_cke;
wire basesoc_sdram_inti_p1_odt;
wire basesoc_sdram_inti_p1_reset_n;
reg  basesoc_sdram_inti_p1_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p1_wrdata;
wire basesoc_sdram_inti_p1_wrdata_en;
wire [3:0] basesoc_sdram_inti_p1_wrdata_mask;
wire basesoc_sdram_inti_p1_rddata_en;
reg  [31:0] basesoc_sdram_inti_p1_rddata = 32'd0;
reg  basesoc_sdram_inti_p1_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_inti_p2_address;
wire [2:0] basesoc_sdram_inti_p2_bank;
reg  basesoc_sdram_inti_p2_cas_n = 1'd1;
reg  basesoc_sdram_inti_p2_cs_n = 1'd1;
reg  basesoc_sdram_inti_p2_ras_n = 1'd1;
reg  basesoc_sdram_inti_p2_we_n = 1'd1;
wire basesoc_sdram_inti_p2_cke;
wire basesoc_sdram_inti_p2_odt;
wire basesoc_sdram_inti_p2_reset_n;
reg  basesoc_sdram_inti_p2_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p2_wrdata;
wire basesoc_sdram_inti_p2_wrdata_en;
wire [3:0] basesoc_sdram_inti_p2_wrdata_mask;
wire basesoc_sdram_inti_p2_rddata_en;
reg  [31:0] basesoc_sdram_inti_p2_rddata = 32'd0;
reg  basesoc_sdram_inti_p2_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_inti_p3_address;
wire [2:0] basesoc_sdram_inti_p3_bank;
reg  basesoc_sdram_inti_p3_cas_n = 1'd1;
reg  basesoc_sdram_inti_p3_cs_n = 1'd1;
reg  basesoc_sdram_inti_p3_ras_n = 1'd1;
reg  basesoc_sdram_inti_p3_we_n = 1'd1;
wire basesoc_sdram_inti_p3_cke;
wire basesoc_sdram_inti_p3_odt;
wire basesoc_sdram_inti_p3_reset_n;
reg  basesoc_sdram_inti_p3_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p3_wrdata;
wire basesoc_sdram_inti_p3_wrdata_en;
wire [3:0] basesoc_sdram_inti_p3_wrdata_mask;
wire basesoc_sdram_inti_p3_rddata_en;
reg  [31:0] basesoc_sdram_inti_p3_rddata = 32'd0;
reg  basesoc_sdram_inti_p3_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_slave_p0_address;
wire [2:0] basesoc_sdram_slave_p0_bank;
wire basesoc_sdram_slave_p0_cas_n;
wire basesoc_sdram_slave_p0_cs_n;
wire basesoc_sdram_slave_p0_ras_n;
wire basesoc_sdram_slave_p0_we_n;
wire basesoc_sdram_slave_p0_cke;
wire basesoc_sdram_slave_p0_odt;
wire basesoc_sdram_slave_p0_reset_n;
wire basesoc_sdram_slave_p0_act_n;
wire [31:0] basesoc_sdram_slave_p0_wrdata;
wire basesoc_sdram_slave_p0_wrdata_en;
wire [3:0] basesoc_sdram_slave_p0_wrdata_mask;
wire basesoc_sdram_slave_p0_rddata_en;
reg  [31:0] basesoc_sdram_slave_p0_rddata = 32'd0;
reg  basesoc_sdram_slave_p0_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_slave_p1_address;
wire [2:0] basesoc_sdram_slave_p1_bank;
wire basesoc_sdram_slave_p1_cas_n;
wire basesoc_sdram_slave_p1_cs_n;
wire basesoc_sdram_slave_p1_ras_n;
wire basesoc_sdram_slave_p1_we_n;
wire basesoc_sdram_slave_p1_cke;
wire basesoc_sdram_slave_p1_odt;
wire basesoc_sdram_slave_p1_reset_n;
wire basesoc_sdram_slave_p1_act_n;
wire [31:0] basesoc_sdram_slave_p1_wrdata;
wire basesoc_sdram_slave_p1_wrdata_en;
wire [3:0] basesoc_sdram_slave_p1_wrdata_mask;
wire basesoc_sdram_slave_p1_rddata_en;
reg  [31:0] basesoc_sdram_slave_p1_rddata = 32'd0;
reg  basesoc_sdram_slave_p1_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_slave_p2_address;
wire [2:0] basesoc_sdram_slave_p2_bank;
wire basesoc_sdram_slave_p2_cas_n;
wire basesoc_sdram_slave_p2_cs_n;
wire basesoc_sdram_slave_p2_ras_n;
wire basesoc_sdram_slave_p2_we_n;
wire basesoc_sdram_slave_p2_cke;
wire basesoc_sdram_slave_p2_odt;
wire basesoc_sdram_slave_p2_reset_n;
wire basesoc_sdram_slave_p2_act_n;
wire [31:0] basesoc_sdram_slave_p2_wrdata;
wire basesoc_sdram_slave_p2_wrdata_en;
wire [3:0] basesoc_sdram_slave_p2_wrdata_mask;
wire basesoc_sdram_slave_p2_rddata_en;
reg  [31:0] basesoc_sdram_slave_p2_rddata = 32'd0;
reg  basesoc_sdram_slave_p2_rddata_valid = 1'd0;
wire [13:0] basesoc_sdram_slave_p3_address;
wire [2:0] basesoc_sdram_slave_p3_bank;
wire basesoc_sdram_slave_p3_cas_n;
wire basesoc_sdram_slave_p3_cs_n;
wire basesoc_sdram_slave_p3_ras_n;
wire basesoc_sdram_slave_p3_we_n;
wire basesoc_sdram_slave_p3_cke;
wire basesoc_sdram_slave_p3_odt;
wire basesoc_sdram_slave_p3_reset_n;
wire basesoc_sdram_slave_p3_act_n;
wire [31:0] basesoc_sdram_slave_p3_wrdata;
wire basesoc_sdram_slave_p3_wrdata_en;
wire [3:0] basesoc_sdram_slave_p3_wrdata_mask;
wire basesoc_sdram_slave_p3_rddata_en;
reg  [31:0] basesoc_sdram_slave_p3_rddata = 32'd0;
reg  basesoc_sdram_slave_p3_rddata_valid = 1'd0;
reg  [13:0] basesoc_sdram_master_p0_address = 14'd0;
reg  [2:0] basesoc_sdram_master_p0_bank = 3'd0;
reg  basesoc_sdram_master_p0_cas_n = 1'd1;
reg  basesoc_sdram_master_p0_cs_n = 1'd1;
reg  basesoc_sdram_master_p0_ras_n = 1'd1;
reg  basesoc_sdram_master_p0_we_n = 1'd1;
reg  basesoc_sdram_master_p0_cke = 1'd0;
reg  basesoc_sdram_master_p0_odt = 1'd0;
reg  basesoc_sdram_master_p0_reset_n = 1'd0;
reg  basesoc_sdram_master_p0_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p0_wrdata = 32'd0;
reg  basesoc_sdram_master_p0_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p0_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p0_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p0_rddata;
wire basesoc_sdram_master_p0_rddata_valid;
reg  [13:0] basesoc_sdram_master_p1_address = 14'd0;
reg  [2:0] basesoc_sdram_master_p1_bank = 3'd0;
reg  basesoc_sdram_master_p1_cas_n = 1'd1;
reg  basesoc_sdram_master_p1_cs_n = 1'd1;
reg  basesoc_sdram_master_p1_ras_n = 1'd1;
reg  basesoc_sdram_master_p1_we_n = 1'd1;
reg  basesoc_sdram_master_p1_cke = 1'd0;
reg  basesoc_sdram_master_p1_odt = 1'd0;
reg  basesoc_sdram_master_p1_reset_n = 1'd0;
reg  basesoc_sdram_master_p1_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p1_wrdata = 32'd0;
reg  basesoc_sdram_master_p1_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p1_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p1_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p1_rddata;
wire basesoc_sdram_master_p1_rddata_valid;
reg  [13:0] basesoc_sdram_master_p2_address = 14'd0;
reg  [2:0] basesoc_sdram_master_p2_bank = 3'd0;
reg  basesoc_sdram_master_p2_cas_n = 1'd1;
reg  basesoc_sdram_master_p2_cs_n = 1'd1;
reg  basesoc_sdram_master_p2_ras_n = 1'd1;
reg  basesoc_sdram_master_p2_we_n = 1'd1;
reg  basesoc_sdram_master_p2_cke = 1'd0;
reg  basesoc_sdram_master_p2_odt = 1'd0;
reg  basesoc_sdram_master_p2_reset_n = 1'd0;
reg  basesoc_sdram_master_p2_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p2_wrdata = 32'd0;
reg  basesoc_sdram_master_p2_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p2_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p2_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p2_rddata;
wire basesoc_sdram_master_p2_rddata_valid;
reg  [13:0] basesoc_sdram_master_p3_address = 14'd0;
reg  [2:0] basesoc_sdram_master_p3_bank = 3'd0;
reg  basesoc_sdram_master_p3_cas_n = 1'd1;
reg  basesoc_sdram_master_p3_cs_n = 1'd1;
reg  basesoc_sdram_master_p3_ras_n = 1'd1;
reg  basesoc_sdram_master_p3_we_n = 1'd1;
reg  basesoc_sdram_master_p3_cke = 1'd0;
reg  basesoc_sdram_master_p3_odt = 1'd0;
reg  basesoc_sdram_master_p3_reset_n = 1'd0;
reg  basesoc_sdram_master_p3_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p3_wrdata = 32'd0;
reg  basesoc_sdram_master_p3_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p3_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p3_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p3_rddata;
wire basesoc_sdram_master_p3_rddata_valid;
wire basesoc_sdram_sel;
wire basesoc_sdram_cke;
wire basesoc_sdram_odt;
wire basesoc_sdram_reset_n;
reg  [3:0] basesoc_sdram_storage = 4'd1;
reg  basesoc_sdram_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector0_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector0_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector0_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector0_command_issue_r;
reg  basesoc_sdram_phaseinjector0_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector0_command_issue_w = 1'd0;
reg  [13:0] basesoc_sdram_phaseinjector0_address_storage = 14'd0;
reg  basesoc_sdram_phaseinjector0_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector0_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector0_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector0_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector0_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector0_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector0_rddata_we;
reg  basesoc_sdram_phaseinjector0_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector1_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector1_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector1_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector1_command_issue_r;
reg  basesoc_sdram_phaseinjector1_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector1_command_issue_w = 1'd0;
reg  [13:0] basesoc_sdram_phaseinjector1_address_storage = 14'd0;
reg  basesoc_sdram_phaseinjector1_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector1_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector1_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector1_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector1_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector1_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector1_rddata_we;
reg  basesoc_sdram_phaseinjector1_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector2_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector2_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector2_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector2_command_issue_r;
reg  basesoc_sdram_phaseinjector2_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector2_command_issue_w = 1'd0;
reg  [13:0] basesoc_sdram_phaseinjector2_address_storage = 14'd0;
reg  basesoc_sdram_phaseinjector2_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector2_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector2_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector2_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector2_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector2_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector2_rddata_we;
reg  basesoc_sdram_phaseinjector2_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector3_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector3_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector3_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector3_command_issue_r;
reg  basesoc_sdram_phaseinjector3_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector3_command_issue_w = 1'd0;
reg  [13:0] basesoc_sdram_phaseinjector3_address_storage = 14'd0;
reg  basesoc_sdram_phaseinjector3_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector3_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector3_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector3_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector3_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector3_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector3_rddata_we;
reg  basesoc_sdram_phaseinjector3_rddata_re = 1'd0;
wire basesoc_sdram_interface_bank0_valid;
wire basesoc_sdram_interface_bank0_ready;
wire basesoc_sdram_interface_bank0_we;
wire [20:0] basesoc_sdram_interface_bank0_addr;
wire basesoc_sdram_interface_bank0_lock;
wire basesoc_sdram_interface_bank0_wdata_ready;
wire basesoc_sdram_interface_bank0_rdata_valid;
wire basesoc_sdram_interface_bank1_valid;
wire basesoc_sdram_interface_bank1_ready;
wire basesoc_sdram_interface_bank1_we;
wire [20:0] basesoc_sdram_interface_bank1_addr;
wire basesoc_sdram_interface_bank1_lock;
wire basesoc_sdram_interface_bank1_wdata_ready;
wire basesoc_sdram_interface_bank1_rdata_valid;
wire basesoc_sdram_interface_bank2_valid;
wire basesoc_sdram_interface_bank2_ready;
wire basesoc_sdram_interface_bank2_we;
wire [20:0] basesoc_sdram_interface_bank2_addr;
wire basesoc_sdram_interface_bank2_lock;
wire basesoc_sdram_interface_bank2_wdata_ready;
wire basesoc_sdram_interface_bank2_rdata_valid;
wire basesoc_sdram_interface_bank3_valid;
wire basesoc_sdram_interface_bank3_ready;
wire basesoc_sdram_interface_bank3_we;
wire [20:0] basesoc_sdram_interface_bank3_addr;
wire basesoc_sdram_interface_bank3_lock;
wire basesoc_sdram_interface_bank3_wdata_ready;
wire basesoc_sdram_interface_bank3_rdata_valid;
wire basesoc_sdram_interface_bank4_valid;
wire basesoc_sdram_interface_bank4_ready;
wire basesoc_sdram_interface_bank4_we;
wire [20:0] basesoc_sdram_interface_bank4_addr;
wire basesoc_sdram_interface_bank4_lock;
wire basesoc_sdram_interface_bank4_wdata_ready;
wire basesoc_sdram_interface_bank4_rdata_valid;
wire basesoc_sdram_interface_bank5_valid;
wire basesoc_sdram_interface_bank5_ready;
wire basesoc_sdram_interface_bank5_we;
wire [20:0] basesoc_sdram_interface_bank5_addr;
wire basesoc_sdram_interface_bank5_lock;
wire basesoc_sdram_interface_bank5_wdata_ready;
wire basesoc_sdram_interface_bank5_rdata_valid;
wire basesoc_sdram_interface_bank6_valid;
wire basesoc_sdram_interface_bank6_ready;
wire basesoc_sdram_interface_bank6_we;
wire [20:0] basesoc_sdram_interface_bank6_addr;
wire basesoc_sdram_interface_bank6_lock;
wire basesoc_sdram_interface_bank6_wdata_ready;
wire basesoc_sdram_interface_bank6_rdata_valid;
wire basesoc_sdram_interface_bank7_valid;
wire basesoc_sdram_interface_bank7_ready;
wire basesoc_sdram_interface_bank7_we;
wire [20:0] basesoc_sdram_interface_bank7_addr;
wire basesoc_sdram_interface_bank7_lock;
wire basesoc_sdram_interface_bank7_wdata_ready;
wire basesoc_sdram_interface_bank7_rdata_valid;
reg  [127:0] basesoc_sdram_interface_wdata = 128'd0;
reg  [15:0] basesoc_sdram_interface_wdata_we = 16'd0;
wire [127:0] basesoc_sdram_interface_rdata;
reg  [13:0] basesoc_sdram_dfi_p0_address = 14'd0;
reg  [2:0] basesoc_sdram_dfi_p0_bank = 3'd0;
reg  basesoc_sdram_dfi_p0_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p0_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p0_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p0_we_n = 1'd1;
wire basesoc_sdram_dfi_p0_cke;
wire basesoc_sdram_dfi_p0_odt;
wire basesoc_sdram_dfi_p0_reset_n;
reg  basesoc_sdram_dfi_p0_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p0_wrdata;
reg  basesoc_sdram_dfi_p0_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p0_wrdata_mask;
reg  basesoc_sdram_dfi_p0_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p0_rddata;
wire basesoc_sdram_dfi_p0_rddata_valid;
reg  [13:0] basesoc_sdram_dfi_p1_address = 14'd0;
reg  [2:0] basesoc_sdram_dfi_p1_bank = 3'd0;
reg  basesoc_sdram_dfi_p1_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p1_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p1_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p1_we_n = 1'd1;
wire basesoc_sdram_dfi_p1_cke;
wire basesoc_sdram_dfi_p1_odt;
wire basesoc_sdram_dfi_p1_reset_n;
reg  basesoc_sdram_dfi_p1_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p1_wrdata;
reg  basesoc_sdram_dfi_p1_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p1_wrdata_mask;
reg  basesoc_sdram_dfi_p1_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p1_rddata;
wire basesoc_sdram_dfi_p1_rddata_valid;
reg  [13:0] basesoc_sdram_dfi_p2_address = 14'd0;
reg  [2:0] basesoc_sdram_dfi_p2_bank = 3'd0;
reg  basesoc_sdram_dfi_p2_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p2_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p2_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p2_we_n = 1'd1;
wire basesoc_sdram_dfi_p2_cke;
wire basesoc_sdram_dfi_p2_odt;
wire basesoc_sdram_dfi_p2_reset_n;
reg  basesoc_sdram_dfi_p2_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p2_wrdata;
reg  basesoc_sdram_dfi_p2_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p2_wrdata_mask;
reg  basesoc_sdram_dfi_p2_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p2_rddata;
wire basesoc_sdram_dfi_p2_rddata_valid;
reg  [13:0] basesoc_sdram_dfi_p3_address = 14'd0;
reg  [2:0] basesoc_sdram_dfi_p3_bank = 3'd0;
reg  basesoc_sdram_dfi_p3_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p3_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p3_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p3_we_n = 1'd1;
wire basesoc_sdram_dfi_p3_cke;
wire basesoc_sdram_dfi_p3_odt;
wire basesoc_sdram_dfi_p3_reset_n;
reg  basesoc_sdram_dfi_p3_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p3_wrdata;
reg  basesoc_sdram_dfi_p3_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p3_wrdata_mask;
reg  basesoc_sdram_dfi_p3_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p3_rddata;
wire basesoc_sdram_dfi_p3_rddata_valid;
reg  basesoc_sdram_cmd_valid = 1'd0;
reg  basesoc_sdram_cmd_ready = 1'd0;
reg  basesoc_sdram_cmd_last = 1'd0;
reg  [13:0] basesoc_sdram_cmd_payload_a = 14'd0;
reg  [2:0] basesoc_sdram_cmd_payload_ba = 3'd0;
reg  basesoc_sdram_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_cmd_payload_we = 1'd0;
reg  basesoc_sdram_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_cmd_payload_is_write = 1'd0;
wire basesoc_sdram_wants_refresh;
wire basesoc_sdram_wants_zqcs;
wire basesoc_sdram_timer_wait;
wire basesoc_sdram_timer_done0;
wire [9:0] basesoc_sdram_timer_count0;
wire basesoc_sdram_timer_done1;
reg  [9:0] basesoc_sdram_timer_count1 = 10'd781;
wire basesoc_sdram_postponer_req_i;
reg  basesoc_sdram_postponer_req_o = 1'd0;
reg  basesoc_sdram_postponer_count = 1'd0;
reg  basesoc_sdram_sequencer_start0 = 1'd0;
wire basesoc_sdram_sequencer_done0;
wire basesoc_sdram_sequencer_start1;
reg  basesoc_sdram_sequencer_done1 = 1'd0;
reg  [5:0] basesoc_sdram_sequencer_counter = 6'd0;
reg  basesoc_sdram_sequencer_count = 1'd0;
wire basesoc_sdram_zqcs_timer_wait;
wire basesoc_sdram_zqcs_timer_done0;
wire [26:0] basesoc_sdram_zqcs_timer_count0;
wire basesoc_sdram_zqcs_timer_done1;
reg  [26:0] basesoc_sdram_zqcs_timer_count1 = 27'd99999999;
reg  basesoc_sdram_zqcs_executer_start = 1'd0;
reg  basesoc_sdram_zqcs_executer_done = 1'd0;
reg  [4:0] basesoc_sdram_zqcs_executer_counter = 5'd0;
wire basesoc_sdram_bankmachine0_req_valid;
wire basesoc_sdram_bankmachine0_req_ready;
wire basesoc_sdram_bankmachine0_req_we;
wire [20:0] basesoc_sdram_bankmachine0_req_addr;
wire basesoc_sdram_bankmachine0_req_lock;
reg  basesoc_sdram_bankmachine0_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine0_refresh_req;
reg  basesoc_sdram_bankmachine0_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine0_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine0_cmd_payload_ba;
reg  basesoc_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine0_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
wire [23:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
wire [23:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
reg  [3:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine0_row = 14'd0;
reg  basesoc_sdram_bankmachine0_row_opened = 1'd0;
wire basesoc_sdram_bankmachine0_row_hit;
reg  basesoc_sdram_bankmachine0_row_open = 1'd0;
reg  basesoc_sdram_bankmachine0_row_close = 1'd0;
reg  basesoc_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine0_twtpcon_valid;
reg  basesoc_sdram_bankmachine0_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine0_trccon_valid;
reg  basesoc_sdram_bankmachine0_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine0_trascon_valid;
reg  basesoc_sdram_bankmachine0_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine1_req_valid;
wire basesoc_sdram_bankmachine1_req_ready;
wire basesoc_sdram_bankmachine1_req_we;
wire [20:0] basesoc_sdram_bankmachine1_req_addr;
wire basesoc_sdram_bankmachine1_req_lock;
reg  basesoc_sdram_bankmachine1_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine1_refresh_req;
reg  basesoc_sdram_bankmachine1_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine1_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine1_cmd_payload_ba;
reg  basesoc_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine1_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
wire [23:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
wire [23:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
reg  [3:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine1_row = 14'd0;
reg  basesoc_sdram_bankmachine1_row_opened = 1'd0;
wire basesoc_sdram_bankmachine1_row_hit;
reg  basesoc_sdram_bankmachine1_row_open = 1'd0;
reg  basesoc_sdram_bankmachine1_row_close = 1'd0;
reg  basesoc_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine1_twtpcon_valid;
reg  basesoc_sdram_bankmachine1_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine1_trccon_valid;
reg  basesoc_sdram_bankmachine1_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine1_trascon_valid;
reg  basesoc_sdram_bankmachine1_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine2_req_valid;
wire basesoc_sdram_bankmachine2_req_ready;
wire basesoc_sdram_bankmachine2_req_we;
wire [20:0] basesoc_sdram_bankmachine2_req_addr;
wire basesoc_sdram_bankmachine2_req_lock;
reg  basesoc_sdram_bankmachine2_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine2_refresh_req;
reg  basesoc_sdram_bankmachine2_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine2_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine2_cmd_payload_ba;
reg  basesoc_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine2_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
wire [23:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
wire [23:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
reg  [3:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine2_row = 14'd0;
reg  basesoc_sdram_bankmachine2_row_opened = 1'd0;
wire basesoc_sdram_bankmachine2_row_hit;
reg  basesoc_sdram_bankmachine2_row_open = 1'd0;
reg  basesoc_sdram_bankmachine2_row_close = 1'd0;
reg  basesoc_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine2_twtpcon_valid;
reg  basesoc_sdram_bankmachine2_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine2_trccon_valid;
reg  basesoc_sdram_bankmachine2_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine2_trascon_valid;
reg  basesoc_sdram_bankmachine2_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine3_req_valid;
wire basesoc_sdram_bankmachine3_req_ready;
wire basesoc_sdram_bankmachine3_req_we;
wire [20:0] basesoc_sdram_bankmachine3_req_addr;
wire basesoc_sdram_bankmachine3_req_lock;
reg  basesoc_sdram_bankmachine3_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine3_refresh_req;
reg  basesoc_sdram_bankmachine3_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine3_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine3_cmd_payload_ba;
reg  basesoc_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine3_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
wire [23:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
wire [23:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
reg  [3:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine3_row = 14'd0;
reg  basesoc_sdram_bankmachine3_row_opened = 1'd0;
wire basesoc_sdram_bankmachine3_row_hit;
reg  basesoc_sdram_bankmachine3_row_open = 1'd0;
reg  basesoc_sdram_bankmachine3_row_close = 1'd0;
reg  basesoc_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine3_twtpcon_valid;
reg  basesoc_sdram_bankmachine3_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine3_trccon_valid;
reg  basesoc_sdram_bankmachine3_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine3_trascon_valid;
reg  basesoc_sdram_bankmachine3_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine4_req_valid;
wire basesoc_sdram_bankmachine4_req_ready;
wire basesoc_sdram_bankmachine4_req_we;
wire [20:0] basesoc_sdram_bankmachine4_req_addr;
wire basesoc_sdram_bankmachine4_req_lock;
reg  basesoc_sdram_bankmachine4_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine4_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine4_refresh_req;
reg  basesoc_sdram_bankmachine4_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine4_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine4_cmd_payload_ba;
reg  basesoc_sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine4_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
wire [23:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
wire [23:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
reg  [3:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine4_row = 14'd0;
reg  basesoc_sdram_bankmachine4_row_opened = 1'd0;
wire basesoc_sdram_bankmachine4_row_hit;
reg  basesoc_sdram_bankmachine4_row_open = 1'd0;
reg  basesoc_sdram_bankmachine4_row_close = 1'd0;
reg  basesoc_sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine4_twtpcon_valid;
reg  basesoc_sdram_bankmachine4_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine4_trccon_valid;
reg  basesoc_sdram_bankmachine4_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine4_trascon_valid;
reg  basesoc_sdram_bankmachine4_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine5_req_valid;
wire basesoc_sdram_bankmachine5_req_ready;
wire basesoc_sdram_bankmachine5_req_we;
wire [20:0] basesoc_sdram_bankmachine5_req_addr;
wire basesoc_sdram_bankmachine5_req_lock;
reg  basesoc_sdram_bankmachine5_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine5_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine5_refresh_req;
reg  basesoc_sdram_bankmachine5_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine5_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine5_cmd_payload_ba;
reg  basesoc_sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine5_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
wire [23:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
wire [23:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
reg  [3:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine5_row = 14'd0;
reg  basesoc_sdram_bankmachine5_row_opened = 1'd0;
wire basesoc_sdram_bankmachine5_row_hit;
reg  basesoc_sdram_bankmachine5_row_open = 1'd0;
reg  basesoc_sdram_bankmachine5_row_close = 1'd0;
reg  basesoc_sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine5_twtpcon_valid;
reg  basesoc_sdram_bankmachine5_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine5_trccon_valid;
reg  basesoc_sdram_bankmachine5_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine5_trascon_valid;
reg  basesoc_sdram_bankmachine5_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine6_req_valid;
wire basesoc_sdram_bankmachine6_req_ready;
wire basesoc_sdram_bankmachine6_req_we;
wire [20:0] basesoc_sdram_bankmachine6_req_addr;
wire basesoc_sdram_bankmachine6_req_lock;
reg  basesoc_sdram_bankmachine6_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine6_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine6_refresh_req;
reg  basesoc_sdram_bankmachine6_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine6_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine6_cmd_payload_ba;
reg  basesoc_sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine6_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
wire [23:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
wire [23:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
reg  [3:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine6_row = 14'd0;
reg  basesoc_sdram_bankmachine6_row_opened = 1'd0;
wire basesoc_sdram_bankmachine6_row_hit;
reg  basesoc_sdram_bankmachine6_row_open = 1'd0;
reg  basesoc_sdram_bankmachine6_row_close = 1'd0;
reg  basesoc_sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine6_twtpcon_valid;
reg  basesoc_sdram_bankmachine6_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine6_trccon_valid;
reg  basesoc_sdram_bankmachine6_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine6_trascon_valid;
reg  basesoc_sdram_bankmachine6_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine7_req_valid;
wire basesoc_sdram_bankmachine7_req_ready;
wire basesoc_sdram_bankmachine7_req_we;
wire [20:0] basesoc_sdram_bankmachine7_req_addr;
wire basesoc_sdram_bankmachine7_req_lock;
reg  basesoc_sdram_bankmachine7_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine7_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine7_refresh_req;
reg  basesoc_sdram_bankmachine7_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_ready = 1'd0;
reg  [13:0] basesoc_sdram_bankmachine7_cmd_payload_a = 14'd0;
wire [2:0] basesoc_sdram_bankmachine7_cmd_payload_ba;
reg  basesoc_sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine7_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
wire [20:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
wire [23:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
wire [23:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
reg  [3:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [23:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we;
wire [23:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr;
wire [23:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
wire [20:0] basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we = 1'd0;
reg  [20:0] basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr = 21'd0;
reg  [13:0] basesoc_sdram_bankmachine7_row = 14'd0;
reg  basesoc_sdram_bankmachine7_row_opened = 1'd0;
wire basesoc_sdram_bankmachine7_row_hit;
reg  basesoc_sdram_bankmachine7_row_open = 1'd0;
reg  basesoc_sdram_bankmachine7_row_close = 1'd0;
reg  basesoc_sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine7_twtpcon_valid;
reg  basesoc_sdram_bankmachine7_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine7_trccon_valid;
reg  basesoc_sdram_bankmachine7_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine7_trascon_valid;
reg  basesoc_sdram_bankmachine7_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_trascon_count = 3'd0;
wire basesoc_sdram_ras_allowed;
wire basesoc_sdram_cas_allowed;
wire [1:0] basesoc_sdram_rdcmdphase;
wire [1:0] basesoc_sdram_wrcmdphase;
reg  basesoc_sdram_choose_cmd_want_reads = 1'd0;
reg  basesoc_sdram_choose_cmd_want_writes = 1'd0;
reg  basesoc_sdram_choose_cmd_want_cmds = 1'd0;
reg  basesoc_sdram_choose_cmd_want_activates = 1'd0;
wire basesoc_sdram_choose_cmd_cmd_valid;
reg  basesoc_sdram_choose_cmd_cmd_ready = 1'd0;
wire [13:0] basesoc_sdram_choose_cmd_cmd_payload_a;
wire [2:0] basesoc_sdram_choose_cmd_cmd_payload_ba;
reg  basesoc_sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_choose_cmd_cmd_payload_we = 1'd0;
wire basesoc_sdram_choose_cmd_cmd_payload_is_cmd;
wire basesoc_sdram_choose_cmd_cmd_payload_is_read;
wire basesoc_sdram_choose_cmd_cmd_payload_is_write;
reg  [7:0] basesoc_sdram_choose_cmd_valids = 8'd0;
wire [7:0] basesoc_sdram_choose_cmd_request;
reg  [2:0] basesoc_sdram_choose_cmd_grant = 3'd0;
wire basesoc_sdram_choose_cmd_ce;
reg  basesoc_sdram_choose_req_want_reads = 1'd0;
reg  basesoc_sdram_choose_req_want_writes = 1'd0;
reg  basesoc_sdram_choose_req_want_cmds = 1'd0;
reg  basesoc_sdram_choose_req_want_activates = 1'd0;
wire basesoc_sdram_choose_req_cmd_valid;
reg  basesoc_sdram_choose_req_cmd_ready = 1'd0;
wire [13:0] basesoc_sdram_choose_req_cmd_payload_a;
wire [2:0] basesoc_sdram_choose_req_cmd_payload_ba;
reg  basesoc_sdram_choose_req_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_choose_req_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_choose_req_cmd_payload_we = 1'd0;
wire basesoc_sdram_choose_req_cmd_payload_is_cmd;
wire basesoc_sdram_choose_req_cmd_payload_is_read;
wire basesoc_sdram_choose_req_cmd_payload_is_write;
reg  [7:0] basesoc_sdram_choose_req_valids = 8'd0;
wire [7:0] basesoc_sdram_choose_req_request;
reg  [2:0] basesoc_sdram_choose_req_grant = 3'd0;
wire basesoc_sdram_choose_req_ce;
reg  [13:0] basesoc_sdram_nop_a = 14'd0;
reg  [2:0] basesoc_sdram_nop_ba = 3'd0;
reg  [1:0] basesoc_sdram_steerer_sel0 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel1 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel2 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel3 = 2'd0;
reg  basesoc_sdram_steerer0 = 1'd1;
reg  basesoc_sdram_steerer1 = 1'd1;
reg  basesoc_sdram_steerer2 = 1'd1;
reg  basesoc_sdram_steerer3 = 1'd1;
reg  basesoc_sdram_steerer4 = 1'd1;
reg  basesoc_sdram_steerer5 = 1'd1;
reg  basesoc_sdram_steerer6 = 1'd1;
reg  basesoc_sdram_steerer7 = 1'd1;
wire basesoc_sdram_trrdcon_valid;
reg  basesoc_sdram_trrdcon_ready = 1'd0;
reg  basesoc_sdram_trrdcon_count = 1'd0;
wire basesoc_sdram_tfawcon_valid;
reg  basesoc_sdram_tfawcon_ready = 1'd1;
wire [2:0] basesoc_sdram_tfawcon_count;
reg  [4:0] basesoc_sdram_tfawcon_window = 5'd0;
wire basesoc_sdram_tccdcon_valid;
reg  basesoc_sdram_tccdcon_ready = 1'd0;
reg  basesoc_sdram_tccdcon_count = 1'd0;
wire basesoc_sdram_twtrcon_valid;
reg  basesoc_sdram_twtrcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_twtrcon_count = 3'd0;
wire basesoc_sdram_read_available;
wire basesoc_sdram_write_available;
reg  basesoc_sdram_en0 = 1'd0;
wire basesoc_sdram_max_time0;
reg  [4:0] basesoc_sdram_time0 = 5'd0;
reg  basesoc_sdram_en1 = 1'd0;
wire basesoc_sdram_max_time1;
reg  [3:0] basesoc_sdram_time1 = 4'd0;
wire basesoc_sdram_go_to_refresh;
wire basesoc_port_flush;
reg  basesoc_port_cmd_valid = 1'd0;
wire basesoc_port_cmd_ready;
wire basesoc_port_cmd_last;
wire basesoc_port_cmd_payload_we;
wire [23:0] basesoc_port_cmd_payload_addr;
reg  basesoc_port_wdata_valid = 1'd0;
wire basesoc_port_wdata_ready;
wire [127:0] basesoc_port_wdata_payload_data;
wire [15:0] basesoc_port_wdata_payload_we;
wire basesoc_port_rdata_valid;
wire basesoc_port_rdata_ready;
wire [127:0] basesoc_port_rdata_payload_data;
wire [29:0] basesoc_wb_sdram_adr;
wire [31:0] basesoc_wb_sdram_dat_w;
reg  [31:0] basesoc_wb_sdram_dat_r = 32'd0;
wire [3:0] basesoc_wb_sdram_sel;
wire basesoc_wb_sdram_cyc;
wire basesoc_wb_sdram_stb;
reg  basesoc_wb_sdram_ack = 1'd0;
wire basesoc_wb_sdram_we;
wire [2:0] basesoc_wb_sdram_cti;
wire [1:0] basesoc_wb_sdram_bte;
reg  basesoc_wb_sdram_err = 1'd0;
wire [29:0] basesoc_interface_adr;
wire [127:0] basesoc_interface_dat_w;
reg  [127:0] basesoc_interface_dat_r = 128'd0;
wire [15:0] basesoc_interface_sel;
reg  basesoc_interface_cyc = 1'd0;
reg  basesoc_interface_stb = 1'd0;
reg  basesoc_interface_ack = 1'd0;
reg  basesoc_interface_we = 1'd0;
wire [8:0] basesoc_data_port_adr;
wire [127:0] basesoc_data_port_dat_r;
reg  [15:0] basesoc_data_port_we = 16'd0;
reg  [127:0] basesoc_data_port_dat_w = 128'd0;
reg  basesoc_write_from_slave = 1'd0;
reg  [1:0] basesoc_adr_offset_r = 2'd0;
wire [8:0] basesoc_tag_port_adr;
wire [23:0] basesoc_tag_port_dat_r;
reg  basesoc_tag_port_we = 1'd0;
wire [23:0] basesoc_tag_port_dat_w;
wire [22:0] basesoc_tag_do_tag;
wire basesoc_tag_do_dirty;
wire [22:0] basesoc_tag_di_tag;
reg  basesoc_tag_di_dirty = 1'd0;
reg  basesoc_word_clr = 1'd0;
reg  basesoc_word_inc = 1'd0;
reg  basesoc_aborted = 1'd0;
reg  basesoc_is_ongoing = 1'd0;
reg  ethphy_reset_storage = 1'd0;
reg  ethphy_reset_re = 1'd0;
wire eth_rx_clk;
wire eth_rx_rst;
wire eth_tx_clk;
wire eth_tx_rst;
wire ethphy_reset0;
wire ethphy_reset1;
reg  [8:0] ethphy_counter = 9'd0;
wire ethphy_counter_done;
wire ethphy_counter_ce;
wire ethphy_liteethphymiitx_sink_sink_valid;
wire ethphy_liteethphymiitx_sink_sink_ready;
wire ethphy_liteethphymiitx_sink_sink_first;
wire ethphy_liteethphymiitx_sink_sink_last;
wire [7:0] ethphy_liteethphymiitx_sink_sink_payload_data;
wire ethphy_liteethphymiitx_sink_sink_payload_last_be;
wire ethphy_liteethphymiitx_sink_sink_payload_error;
wire ethphy_liteethphymiitx_converter_sink_valid;
wire ethphy_liteethphymiitx_converter_sink_ready;
reg  ethphy_liteethphymiitx_converter_sink_first = 1'd0;
reg  ethphy_liteethphymiitx_converter_sink_last = 1'd0;
wire [7:0] ethphy_liteethphymiitx_converter_sink_payload_data;
wire ethphy_liteethphymiitx_converter_source_valid;
wire ethphy_liteethphymiitx_converter_source_ready;
wire ethphy_liteethphymiitx_converter_source_first;
wire ethphy_liteethphymiitx_converter_source_last;
wire [3:0] ethphy_liteethphymiitx_converter_source_payload_data;
wire ethphy_liteethphymiitx_converter_converter_sink_valid;
wire ethphy_liteethphymiitx_converter_converter_sink_ready;
wire ethphy_liteethphymiitx_converter_converter_sink_first;
wire ethphy_liteethphymiitx_converter_converter_sink_last;
reg  [7:0] ethphy_liteethphymiitx_converter_converter_sink_payload_data = 8'd0;
wire ethphy_liteethphymiitx_converter_converter_source_valid;
wire ethphy_liteethphymiitx_converter_converter_source_ready;
wire ethphy_liteethphymiitx_converter_converter_source_first;
wire ethphy_liteethphymiitx_converter_converter_source_last;
reg  [3:0] ethphy_liteethphymiitx_converter_converter_source_payload_data = 4'd0;
wire ethphy_liteethphymiitx_converter_converter_source_payload_valid_token_count;
reg  ethphy_liteethphymiitx_converter_converter_mux = 1'd0;
wire ethphy_liteethphymiitx_converter_converter_first;
wire ethphy_liteethphymiitx_converter_converter_last;
wire ethphy_liteethphymiitx_converter_source_source_valid;
wire ethphy_liteethphymiitx_converter_source_source_ready;
wire ethphy_liteethphymiitx_converter_source_source_first;
wire ethphy_liteethphymiitx_converter_source_source_last;
wire [3:0] ethphy_liteethphymiitx_converter_source_source_payload_data;
wire ethphy_liteethphymiirx_source_source_valid;
wire ethphy_liteethphymiirx_source_source_ready;
wire ethphy_liteethphymiirx_source_source_first;
wire ethphy_liteethphymiirx_source_source_last;
wire [7:0] ethphy_liteethphymiirx_source_source_payload_data;
reg  ethphy_liteethphymiirx_source_source_payload_last_be = 1'd0;
reg  ethphy_liteethphymiirx_source_source_payload_error = 1'd0;
reg  ethphy_liteethphymiirx_converter_sink_valid = 1'd0;
wire ethphy_liteethphymiirx_converter_sink_ready;
reg  ethphy_liteethphymiirx_converter_sink_first = 1'd0;
wire ethphy_liteethphymiirx_converter_sink_last;
reg  [3:0] ethphy_liteethphymiirx_converter_sink_payload_data = 4'd0;
wire ethphy_liteethphymiirx_converter_source_valid;
wire ethphy_liteethphymiirx_converter_source_ready;
wire ethphy_liteethphymiirx_converter_source_first;
wire ethphy_liteethphymiirx_converter_source_last;
reg  [7:0] ethphy_liteethphymiirx_converter_source_payload_data = 8'd0;
wire ethphy_liteethphymiirx_converter_converter_sink_valid;
wire ethphy_liteethphymiirx_converter_converter_sink_ready;
wire ethphy_liteethphymiirx_converter_converter_sink_first;
wire ethphy_liteethphymiirx_converter_converter_sink_last;
wire [3:0] ethphy_liteethphymiirx_converter_converter_sink_payload_data;
wire ethphy_liteethphymiirx_converter_converter_source_valid;
wire ethphy_liteethphymiirx_converter_converter_source_ready;
reg  ethphy_liteethphymiirx_converter_converter_source_first = 1'd0;
reg  ethphy_liteethphymiirx_converter_converter_source_last = 1'd0;
reg  [7:0] ethphy_liteethphymiirx_converter_converter_source_payload_data = 8'd0;
reg  [1:0] ethphy_liteethphymiirx_converter_converter_source_payload_valid_token_count = 2'd0;
reg  ethphy_liteethphymiirx_converter_converter_demux = 1'd0;
wire ethphy_liteethphymiirx_converter_converter_load_part;
reg  ethphy_liteethphymiirx_converter_converter_strobe_all = 1'd0;
wire ethphy_liteethphymiirx_converter_source_source_valid;
wire ethphy_liteethphymiirx_converter_source_source_ready;
wire ethphy_liteethphymiirx_converter_source_source_first;
wire ethphy_liteethphymiirx_converter_source_source_last;
wire [7:0] ethphy_liteethphymiirx_converter_source_source_payload_data;
reg  ethphy_liteethphymiirx_converter_reset = 1'd0;
wire ethphy_mdc;
wire ethphy_oe;
wire ethphy_w;
reg  [2:0] ethphy__w_storage = 3'd0;
reg  ethphy__w_re = 1'd0;
reg  ethphy_r = 1'd0;
reg  ethphy__r_status = 1'd0;
wire ethphy__r_we;
reg  ethphy__r_re = 1'd0;
wire ethphy_data_w;
wire ethphy_data_oe;
wire ethphy_data_r;
wire basesoc_ethmac_sink_valid;
wire basesoc_ethmac_sink_ready;
wire basesoc_ethmac_sink_first;
wire basesoc_ethmac_sink_last;
wire [31:0] basesoc_ethmac_sink_payload_data;
wire [3:0] basesoc_ethmac_sink_payload_last_be;
wire [3:0] basesoc_ethmac_sink_payload_error;
wire basesoc_ethmac_source_valid;
wire basesoc_ethmac_source_ready;
wire basesoc_ethmac_source_first;
wire basesoc_ethmac_source_last;
wire [31:0] basesoc_ethmac_source_payload_data;
wire [3:0] basesoc_ethmac_source_payload_last_be;
wire [3:0] basesoc_ethmac_source_payload_error;
reg  basesoc_ethmac_status = 1'd1;
wire basesoc_ethmac_we;
reg  basesoc_ethmac_re = 1'd0;
wire basesoc_ethmac_tx_cdc_sink_sink_valid;
wire basesoc_ethmac_tx_cdc_sink_sink_ready;
wire basesoc_ethmac_tx_cdc_sink_sink_first;
wire basesoc_ethmac_tx_cdc_sink_sink_last;
wire [31:0] basesoc_ethmac_tx_cdc_sink_sink_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_sink_sink_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_sink_sink_payload_error;
wire basesoc_ethmac_tx_cdc_source_source_valid;
wire basesoc_ethmac_tx_cdc_source_source_ready;
wire basesoc_ethmac_tx_cdc_source_source_first;
wire basesoc_ethmac_tx_cdc_source_source_last;
wire [31:0] basesoc_ethmac_tx_cdc_source_source_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_source_source_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_source_source_payload_error;
wire basesoc_ethmac_tx_cdc_cdc_sink_valid;
wire basesoc_ethmac_tx_cdc_cdc_sink_ready;
wire basesoc_ethmac_tx_cdc_cdc_sink_first;
wire basesoc_ethmac_tx_cdc_cdc_sink_last;
wire [31:0] basesoc_ethmac_tx_cdc_cdc_sink_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_sink_payload_error;
wire basesoc_ethmac_tx_cdc_cdc_source_valid;
wire basesoc_ethmac_tx_cdc_cdc_source_ready;
wire basesoc_ethmac_tx_cdc_cdc_source_first;
wire basesoc_ethmac_tx_cdc_cdc_source_last;
wire [31:0] basesoc_ethmac_tx_cdc_cdc_source_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_source_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_source_payload_error;
wire basesoc_ethmac_tx_cdc_cdc_asyncfifo_we;
wire basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable;
wire basesoc_ethmac_tx_cdc_cdc_asyncfifo_re;
wire basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable;
wire [41:0] basesoc_ethmac_tx_cdc_cdc_asyncfifo_din;
wire [41:0] basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout;
wire basesoc_ethmac_tx_cdc_cdc_graycounter0_ce;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter0_q = 6'd0;
wire [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire basesoc_ethmac_tx_cdc_cdc_graycounter1_ce;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter1_q = 6'd0;
wire [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg  [5:0] basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] basesoc_ethmac_tx_cdc_cdc_produce_rdomain;
wire [5:0] basesoc_ethmac_tx_cdc_cdc_consume_wdomain;
wire [4:0] basesoc_ethmac_tx_cdc_cdc_wrport_adr;
wire [41:0] basesoc_ethmac_tx_cdc_cdc_wrport_dat_r;
wire basesoc_ethmac_tx_cdc_cdc_wrport_we;
wire [41:0] basesoc_ethmac_tx_cdc_cdc_wrport_dat_w;
wire [4:0] basesoc_ethmac_tx_cdc_cdc_rdport_adr;
wire [41:0] basesoc_ethmac_tx_cdc_cdc_rdport_dat_r;
wire [31:0] basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error;
wire basesoc_ethmac_tx_cdc_cdc_fifo_in_first;
wire basesoc_ethmac_tx_cdc_cdc_fifo_in_last;
wire [31:0] basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
wire [3:0] basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error;
wire basesoc_ethmac_tx_cdc_cdc_fifo_out_first;
wire basesoc_ethmac_tx_cdc_cdc_fifo_out_last;
wire basesoc_ethmac_tx_converter_sink_valid;
wire basesoc_ethmac_tx_converter_sink_ready;
wire basesoc_ethmac_tx_converter_sink_first;
wire basesoc_ethmac_tx_converter_sink_last;
wire [31:0] basesoc_ethmac_tx_converter_sink_payload_data;
wire [3:0] basesoc_ethmac_tx_converter_sink_payload_last_be;
wire [3:0] basesoc_ethmac_tx_converter_sink_payload_error;
wire basesoc_ethmac_tx_converter_source_valid;
wire basesoc_ethmac_tx_converter_source_ready;
wire basesoc_ethmac_tx_converter_source_first;
wire basesoc_ethmac_tx_converter_source_last;
wire [7:0] basesoc_ethmac_tx_converter_source_payload_data;
wire basesoc_ethmac_tx_converter_source_payload_last_be;
wire basesoc_ethmac_tx_converter_source_payload_error;
wire basesoc_ethmac_tx_converter_converter_sink_valid;
wire basesoc_ethmac_tx_converter_converter_sink_ready;
wire basesoc_ethmac_tx_converter_converter_sink_first;
wire basesoc_ethmac_tx_converter_converter_sink_last;
reg  [39:0] basesoc_ethmac_tx_converter_converter_sink_payload_data = 40'd0;
wire basesoc_ethmac_tx_converter_converter_source_valid;
wire basesoc_ethmac_tx_converter_converter_source_ready;
wire basesoc_ethmac_tx_converter_converter_source_first;
wire basesoc_ethmac_tx_converter_converter_source_last;
reg  [9:0] basesoc_ethmac_tx_converter_converter_source_payload_data = 10'd0;
wire basesoc_ethmac_tx_converter_converter_source_payload_valid_token_count;
reg  [1:0] basesoc_ethmac_tx_converter_converter_mux = 2'd0;
wire basesoc_ethmac_tx_converter_converter_first;
wire basesoc_ethmac_tx_converter_converter_last;
wire basesoc_ethmac_tx_converter_source_source_valid;
wire basesoc_ethmac_tx_converter_source_source_ready;
wire basesoc_ethmac_tx_converter_source_source_first;
wire basesoc_ethmac_tx_converter_source_source_last;
wire [9:0] basesoc_ethmac_tx_converter_source_source_payload_data;
wire basesoc_ethmac_tx_last_be_sink_valid;
reg  basesoc_ethmac_tx_last_be_sink_ready = 1'd0;
wire basesoc_ethmac_tx_last_be_sink_first;
wire basesoc_ethmac_tx_last_be_sink_last;
wire [7:0] basesoc_ethmac_tx_last_be_sink_payload_data;
wire basesoc_ethmac_tx_last_be_sink_payload_last_be;
wire basesoc_ethmac_tx_last_be_sink_payload_error;
reg  basesoc_ethmac_tx_last_be_source_valid = 1'd0;
wire basesoc_ethmac_tx_last_be_source_ready;
reg  basesoc_ethmac_tx_last_be_source_first = 1'd0;
reg  basesoc_ethmac_tx_last_be_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_tx_last_be_source_payload_data = 8'd0;
reg  basesoc_ethmac_tx_last_be_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_tx_last_be_source_payload_error = 1'd0;
wire basesoc_ethmac_tx_padding_sink_valid;
reg  basesoc_ethmac_tx_padding_sink_ready = 1'd0;
wire basesoc_ethmac_tx_padding_sink_first;
wire basesoc_ethmac_tx_padding_sink_last;
wire [7:0] basesoc_ethmac_tx_padding_sink_payload_data;
wire basesoc_ethmac_tx_padding_sink_payload_last_be;
wire basesoc_ethmac_tx_padding_sink_payload_error;
reg  basesoc_ethmac_tx_padding_source_valid = 1'd0;
wire basesoc_ethmac_tx_padding_source_ready;
reg  basesoc_ethmac_tx_padding_source_first = 1'd0;
reg  basesoc_ethmac_tx_padding_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_tx_padding_source_payload_data = 8'd0;
reg  basesoc_ethmac_tx_padding_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_tx_padding_source_payload_error = 1'd0;
reg  [15:0] basesoc_ethmac_tx_padding_counter = 16'd0;
wire basesoc_ethmac_tx_padding_counter_done;
wire basesoc_ethmac_liteethmaccrc32inserter_sink_valid;
reg  basesoc_ethmac_liteethmaccrc32inserter_sink_ready = 1'd0;
wire basesoc_ethmac_liteethmaccrc32inserter_sink_first;
wire basesoc_ethmac_liteethmaccrc32inserter_sink_last;
wire [7:0] basesoc_ethmac_liteethmaccrc32inserter_sink_payload_data;
wire basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be;
wire basesoc_ethmac_liteethmaccrc32inserter_sink_payload_error;
reg  basesoc_ethmac_liteethmaccrc32inserter_source_valid = 1'd0;
wire basesoc_ethmac_liteethmaccrc32inserter_source_ready;
reg  basesoc_ethmac_liteethmaccrc32inserter_source_first = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_liteethmaccrc32inserter_source_payload_data = 8'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_source_payload_error = 1'd0;
reg  [7:0] basesoc_ethmac_liteethmaccrc32inserter_data0 = 8'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_last_be0 = 1'd0;
reg  [31:0] basesoc_ethmac_liteethmaccrc32inserter_value = 32'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_error = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_last_be1 = 1'd0;
wire [7:0] basesoc_ethmac_liteethmaccrc32inserter_data1;
wire [31:0] basesoc_ethmac_liteethmaccrc32inserter_last;
reg  [31:0] basesoc_ethmac_liteethmaccrc32inserter_next = 32'd0;
reg  [31:0] basesoc_ethmac_liteethmaccrc32inserter_reg = 32'd4294967295;
reg  basesoc_ethmac_liteethmaccrc32inserter_ce = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_reset = 1'd0;
reg  [31:0] basesoc_ethmac_liteethmaccrc32inserter_crc_packet = 32'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_last_be2 = 1'd0;
reg  [1:0] basesoc_ethmac_liteethmaccrc32inserter_cnt = 2'd3;
wire basesoc_ethmac_liteethmaccrc32inserter_cnt_done;
reg  basesoc_ethmac_liteethmaccrc32inserter_is_ongoing0 = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_is_ongoing1 = 1'd0;
wire basesoc_ethmac_bufferizeendpoints_sink_valid;
wire basesoc_ethmac_bufferizeendpoints_sink_ready;
wire basesoc_ethmac_bufferizeendpoints_sink_first;
wire basesoc_ethmac_bufferizeendpoints_sink_last;
wire [7:0] basesoc_ethmac_bufferizeendpoints_sink_payload_data;
wire basesoc_ethmac_bufferizeendpoints_sink_payload_last_be;
wire basesoc_ethmac_bufferizeendpoints_sink_payload_error;
reg  basesoc_ethmac_bufferizeendpoints_source_valid = 1'd0;
wire basesoc_ethmac_bufferizeendpoints_source_ready;
reg  basesoc_ethmac_bufferizeendpoints_source_first = 1'd0;
reg  basesoc_ethmac_bufferizeendpoints_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_bufferizeendpoints_source_payload_data = 8'd0;
reg  basesoc_ethmac_bufferizeendpoints_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_bufferizeendpoints_source_payload_error = 1'd0;
wire basesoc_ethmac_tx_preamble_sink_valid;
reg  basesoc_ethmac_tx_preamble_sink_ready = 1'd0;
wire basesoc_ethmac_tx_preamble_sink_first;
wire basesoc_ethmac_tx_preamble_sink_last;
wire [7:0] basesoc_ethmac_tx_preamble_sink_payload_data;
wire basesoc_ethmac_tx_preamble_sink_payload_last_be;
wire basesoc_ethmac_tx_preamble_sink_payload_error;
reg  basesoc_ethmac_tx_preamble_source_valid = 1'd0;
wire basesoc_ethmac_tx_preamble_source_ready;
reg  basesoc_ethmac_tx_preamble_source_first = 1'd0;
reg  basesoc_ethmac_tx_preamble_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_tx_preamble_source_payload_data = 8'd0;
wire basesoc_ethmac_tx_preamble_source_payload_last_be;
reg  basesoc_ethmac_tx_preamble_source_payload_error = 1'd0;
reg  [63:0] basesoc_ethmac_tx_preamble_preamble = 64'd15372286728091293013;
reg  [2:0] basesoc_ethmac_tx_preamble_count = 3'd0;
wire basesoc_ethmac_tx_gap_sink_valid;
reg  basesoc_ethmac_tx_gap_sink_ready = 1'd0;
wire basesoc_ethmac_tx_gap_sink_first;
wire basesoc_ethmac_tx_gap_sink_last;
wire [7:0] basesoc_ethmac_tx_gap_sink_payload_data;
wire basesoc_ethmac_tx_gap_sink_payload_last_be;
wire basesoc_ethmac_tx_gap_sink_payload_error;
reg  basesoc_ethmac_tx_gap_source_valid = 1'd0;
wire basesoc_ethmac_tx_gap_source_ready;
reg  basesoc_ethmac_tx_gap_source_first = 1'd0;
reg  basesoc_ethmac_tx_gap_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_tx_gap_source_payload_data = 8'd0;
reg  basesoc_ethmac_tx_gap_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_tx_gap_source_payload_error = 1'd0;
reg  [3:0] basesoc_ethmac_tx_gap_counter = 4'd0;
reg  [31:0] basesoc_ethmac_preamble_errors_status = 32'd0;
wire basesoc_ethmac_preamble_errors_we;
reg  basesoc_ethmac_preamble_errors_re = 1'd0;
reg  [31:0] basesoc_ethmac_crc_errors_status = 32'd0;
wire basesoc_ethmac_crc_errors_we;
reg  basesoc_ethmac_crc_errors_re = 1'd0;
wire basesoc_ethmac_rx_preamble_sink_valid;
reg  basesoc_ethmac_rx_preamble_sink_ready = 1'd0;
wire basesoc_ethmac_rx_preamble_sink_first;
wire basesoc_ethmac_rx_preamble_sink_last;
wire [7:0] basesoc_ethmac_rx_preamble_sink_payload_data;
wire basesoc_ethmac_rx_preamble_sink_payload_last_be;
wire basesoc_ethmac_rx_preamble_sink_payload_error;
reg  basesoc_ethmac_rx_preamble_source_valid = 1'd0;
wire basesoc_ethmac_rx_preamble_source_ready;
reg  basesoc_ethmac_rx_preamble_source_first = 1'd0;
reg  basesoc_ethmac_rx_preamble_source_last = 1'd0;
wire [7:0] basesoc_ethmac_rx_preamble_source_payload_data;
wire basesoc_ethmac_rx_preamble_source_payload_last_be;
reg  basesoc_ethmac_rx_preamble_source_payload_error = 1'd0;
reg  basesoc_ethmac_rx_preamble_error = 1'd0;
reg  [63:0] basesoc_ethmac_rx_preamble_preamble = 64'd15372286728091293013;
wire basesoc_ethmac_pulsesynchronizer0_i;
wire basesoc_ethmac_pulsesynchronizer0_o;
reg  basesoc_ethmac_pulsesynchronizer0_toggle_i = 1'd0;
wire basesoc_ethmac_pulsesynchronizer0_toggle_o;
reg  basesoc_ethmac_pulsesynchronizer0_toggle_o_r = 1'd0;
wire basesoc_ethmac_rx_crc_sink_sink_valid;
reg  basesoc_ethmac_rx_crc_sink_sink_ready = 1'd0;
wire basesoc_ethmac_rx_crc_sink_sink_first;
wire basesoc_ethmac_rx_crc_sink_sink_last;
wire [7:0] basesoc_ethmac_rx_crc_sink_sink_payload_data;
wire basesoc_ethmac_rx_crc_sink_sink_payload_last_be;
wire basesoc_ethmac_rx_crc_sink_sink_payload_error;
reg  basesoc_ethmac_rx_crc_source_source_valid = 1'd0;
wire basesoc_ethmac_rx_crc_source_source_ready;
reg  basesoc_ethmac_rx_crc_source_source_first = 1'd0;
reg  basesoc_ethmac_rx_crc_source_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_rx_crc_source_source_payload_data = 8'd0;
reg  basesoc_ethmac_rx_crc_source_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_rx_crc_source_source_payload_error = 1'd0;
reg  basesoc_ethmac_rx_crc_error = 1'd0;
wire [7:0] basesoc_ethmac_rx_crc_crc_data0;
wire basesoc_ethmac_rx_crc_crc_last_be0;
reg  [31:0] basesoc_ethmac_rx_crc_crc_value = 32'd0;
reg  basesoc_ethmac_rx_crc_crc_error0 = 1'd0;
reg  basesoc_ethmac_rx_crc_crc_last_be1 = 1'd0;
wire [7:0] basesoc_ethmac_rx_crc_crc_data1;
wire [31:0] basesoc_ethmac_rx_crc_crc_last;
reg  [31:0] basesoc_ethmac_rx_crc_crc_next = 32'd0;
reg  [31:0] basesoc_ethmac_rx_crc_crc_reg = 32'd4294967295;
reg  basesoc_ethmac_rx_crc_crc_ce = 1'd0;
reg  basesoc_ethmac_rx_crc_crc_reset = 1'd0;
reg  basesoc_ethmac_rx_crc_syncfifo_sink_valid = 1'd0;
wire basesoc_ethmac_rx_crc_syncfifo_sink_ready;
wire basesoc_ethmac_rx_crc_syncfifo_sink_first;
wire basesoc_ethmac_rx_crc_syncfifo_sink_last;
wire [7:0] basesoc_ethmac_rx_crc_syncfifo_sink_payload_data;
wire basesoc_ethmac_rx_crc_syncfifo_sink_payload_last_be;
wire basesoc_ethmac_rx_crc_syncfifo_sink_payload_error;
wire basesoc_ethmac_rx_crc_syncfifo_source_valid;
reg  basesoc_ethmac_rx_crc_syncfifo_source_ready = 1'd0;
wire basesoc_ethmac_rx_crc_syncfifo_source_first;
wire basesoc_ethmac_rx_crc_syncfifo_source_last;
wire [7:0] basesoc_ethmac_rx_crc_syncfifo_source_payload_data;
wire basesoc_ethmac_rx_crc_syncfifo_source_payload_last_be;
wire basesoc_ethmac_rx_crc_syncfifo_source_payload_error;
wire basesoc_ethmac_rx_crc_syncfifo_syncfifo_we;
wire basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable;
wire basesoc_ethmac_rx_crc_syncfifo_syncfifo_re;
wire basesoc_ethmac_rx_crc_syncfifo_syncfifo_readable;
wire [11:0] basesoc_ethmac_rx_crc_syncfifo_syncfifo_din;
wire [11:0] basesoc_ethmac_rx_crc_syncfifo_syncfifo_dout;
reg  [2:0] basesoc_ethmac_rx_crc_syncfifo_level = 3'd0;
reg  basesoc_ethmac_rx_crc_syncfifo_replace = 1'd0;
reg  [2:0] basesoc_ethmac_rx_crc_syncfifo_produce = 3'd0;
reg  [2:0] basesoc_ethmac_rx_crc_syncfifo_consume = 3'd0;
reg  [2:0] basesoc_ethmac_rx_crc_syncfifo_wrport_adr = 3'd0;
wire [11:0] basesoc_ethmac_rx_crc_syncfifo_wrport_dat_r;
wire basesoc_ethmac_rx_crc_syncfifo_wrport_we;
wire [11:0] basesoc_ethmac_rx_crc_syncfifo_wrport_dat_w;
wire basesoc_ethmac_rx_crc_syncfifo_do_read;
wire [2:0] basesoc_ethmac_rx_crc_syncfifo_rdport_adr;
wire [11:0] basesoc_ethmac_rx_crc_syncfifo_rdport_dat_r;
wire [7:0] basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_data;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_last_be;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_error;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_in_first;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_in_last;
wire [7:0] basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_data;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_last_be;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_error;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_out_first;
wire basesoc_ethmac_rx_crc_syncfifo_fifo_out_last;
reg  basesoc_ethmac_rx_crc_fifo_reset = 1'd0;
wire basesoc_ethmac_rx_crc_fifo_in;
wire basesoc_ethmac_rx_crc_fifo_out;
wire basesoc_ethmac_rx_crc_fifo_full;
reg  basesoc_ethmac_rx_crc_last_be = 1'd0;
reg  basesoc_ethmac_rx_crc_crc_error1 = 1'd0;
wire basesoc_ethmac_rx_crc_sink_valid;
wire basesoc_ethmac_rx_crc_sink_ready;
wire basesoc_ethmac_rx_crc_sink_first;
wire basesoc_ethmac_rx_crc_sink_last;
wire [7:0] basesoc_ethmac_rx_crc_sink_payload_data;
wire basesoc_ethmac_rx_crc_sink_payload_last_be;
wire basesoc_ethmac_rx_crc_sink_payload_error;
reg  basesoc_ethmac_rx_crc_source_valid = 1'd0;
wire basesoc_ethmac_rx_crc_source_ready;
reg  basesoc_ethmac_rx_crc_source_first = 1'd0;
reg  basesoc_ethmac_rx_crc_source_last = 1'd0;
reg  [7:0] basesoc_ethmac_rx_crc_source_payload_data = 8'd0;
reg  basesoc_ethmac_rx_crc_source_payload_last_be = 1'd0;
reg  basesoc_ethmac_rx_crc_source_payload_error = 1'd0;
wire basesoc_ethmac_pulsesynchronizer1_i;
wire basesoc_ethmac_pulsesynchronizer1_o;
reg  basesoc_ethmac_pulsesynchronizer1_toggle_i = 1'd0;
wire basesoc_ethmac_pulsesynchronizer1_toggle_o;
reg  basesoc_ethmac_pulsesynchronizer1_toggle_o_r = 1'd0;
wire basesoc_ethmac_rx_padding_sink_valid;
wire basesoc_ethmac_rx_padding_sink_ready;
wire basesoc_ethmac_rx_padding_sink_first;
wire basesoc_ethmac_rx_padding_sink_last;
wire [7:0] basesoc_ethmac_rx_padding_sink_payload_data;
wire basesoc_ethmac_rx_padding_sink_payload_last_be;
wire basesoc_ethmac_rx_padding_sink_payload_error;
wire basesoc_ethmac_rx_padding_source_valid;
wire basesoc_ethmac_rx_padding_source_ready;
wire basesoc_ethmac_rx_padding_source_first;
wire basesoc_ethmac_rx_padding_source_last;
wire [7:0] basesoc_ethmac_rx_padding_source_payload_data;
wire basesoc_ethmac_rx_padding_source_payload_last_be;
wire basesoc_ethmac_rx_padding_source_payload_error;
wire basesoc_ethmac_rx_last_be_sink_valid;
wire basesoc_ethmac_rx_last_be_sink_ready;
wire basesoc_ethmac_rx_last_be_sink_first;
wire basesoc_ethmac_rx_last_be_sink_last;
wire [7:0] basesoc_ethmac_rx_last_be_sink_payload_data;
wire basesoc_ethmac_rx_last_be_sink_payload_last_be;
wire basesoc_ethmac_rx_last_be_sink_payload_error;
wire basesoc_ethmac_rx_last_be_source_valid;
wire basesoc_ethmac_rx_last_be_source_ready;
wire basesoc_ethmac_rx_last_be_source_first;
wire basesoc_ethmac_rx_last_be_source_last;
wire [7:0] basesoc_ethmac_rx_last_be_source_payload_data;
reg  basesoc_ethmac_rx_last_be_source_payload_last_be = 1'd0;
wire basesoc_ethmac_rx_last_be_source_payload_error;
wire basesoc_ethmac_rx_converter_sink_valid;
wire basesoc_ethmac_rx_converter_sink_ready;
wire basesoc_ethmac_rx_converter_sink_first;
wire basesoc_ethmac_rx_converter_sink_last;
wire [7:0] basesoc_ethmac_rx_converter_sink_payload_data;
wire basesoc_ethmac_rx_converter_sink_payload_last_be;
wire basesoc_ethmac_rx_converter_sink_payload_error;
wire basesoc_ethmac_rx_converter_source_valid;
wire basesoc_ethmac_rx_converter_source_ready;
wire basesoc_ethmac_rx_converter_source_first;
wire basesoc_ethmac_rx_converter_source_last;
reg  [31:0] basesoc_ethmac_rx_converter_source_payload_data = 32'd0;
reg  [3:0] basesoc_ethmac_rx_converter_source_payload_last_be = 4'd0;
reg  [3:0] basesoc_ethmac_rx_converter_source_payload_error = 4'd0;
wire basesoc_ethmac_rx_converter_converter_sink_valid;
wire basesoc_ethmac_rx_converter_converter_sink_ready;
wire basesoc_ethmac_rx_converter_converter_sink_first;
wire basesoc_ethmac_rx_converter_converter_sink_last;
wire [9:0] basesoc_ethmac_rx_converter_converter_sink_payload_data;
wire basesoc_ethmac_rx_converter_converter_source_valid;
wire basesoc_ethmac_rx_converter_converter_source_ready;
reg  basesoc_ethmac_rx_converter_converter_source_first = 1'd0;
reg  basesoc_ethmac_rx_converter_converter_source_last = 1'd0;
reg  [39:0] basesoc_ethmac_rx_converter_converter_source_payload_data = 40'd0;
reg  [2:0] basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count = 3'd0;
reg  [1:0] basesoc_ethmac_rx_converter_converter_demux = 2'd0;
wire basesoc_ethmac_rx_converter_converter_load_part;
reg  basesoc_ethmac_rx_converter_converter_strobe_all = 1'd0;
wire basesoc_ethmac_rx_converter_source_source_valid;
wire basesoc_ethmac_rx_converter_source_source_ready;
wire basesoc_ethmac_rx_converter_source_source_first;
wire basesoc_ethmac_rx_converter_source_source_last;
wire [39:0] basesoc_ethmac_rx_converter_source_source_payload_data;
wire basesoc_ethmac_rx_cdc_sink_sink_valid;
wire basesoc_ethmac_rx_cdc_sink_sink_ready;
wire basesoc_ethmac_rx_cdc_sink_sink_first;
wire basesoc_ethmac_rx_cdc_sink_sink_last;
wire [31:0] basesoc_ethmac_rx_cdc_sink_sink_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_sink_sink_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_sink_sink_payload_error;
wire basesoc_ethmac_rx_cdc_source_source_valid;
wire basesoc_ethmac_rx_cdc_source_source_ready;
wire basesoc_ethmac_rx_cdc_source_source_first;
wire basesoc_ethmac_rx_cdc_source_source_last;
wire [31:0] basesoc_ethmac_rx_cdc_source_source_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_source_source_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_source_source_payload_error;
wire basesoc_ethmac_rx_cdc_cdc_sink_valid;
wire basesoc_ethmac_rx_cdc_cdc_sink_ready;
wire basesoc_ethmac_rx_cdc_cdc_sink_first;
wire basesoc_ethmac_rx_cdc_cdc_sink_last;
wire [31:0] basesoc_ethmac_rx_cdc_cdc_sink_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_sink_payload_error;
wire basesoc_ethmac_rx_cdc_cdc_source_valid;
wire basesoc_ethmac_rx_cdc_cdc_source_ready;
wire basesoc_ethmac_rx_cdc_cdc_source_first;
wire basesoc_ethmac_rx_cdc_cdc_source_last;
wire [31:0] basesoc_ethmac_rx_cdc_cdc_source_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_source_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_source_payload_error;
wire basesoc_ethmac_rx_cdc_cdc_asyncfifo_we;
wire basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable;
wire basesoc_ethmac_rx_cdc_cdc_asyncfifo_re;
wire basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable;
wire [41:0] basesoc_ethmac_rx_cdc_cdc_asyncfifo_din;
wire [41:0] basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout;
wire basesoc_ethmac_rx_cdc_cdc_graycounter0_ce;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter0_q = 6'd0;
wire [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire basesoc_ethmac_rx_cdc_cdc_graycounter1_ce;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter1_q = 6'd0;
wire [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg  [5:0] basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] basesoc_ethmac_rx_cdc_cdc_produce_rdomain;
wire [5:0] basesoc_ethmac_rx_cdc_cdc_consume_wdomain;
wire [4:0] basesoc_ethmac_rx_cdc_cdc_wrport_adr;
wire [41:0] basesoc_ethmac_rx_cdc_cdc_wrport_dat_r;
wire basesoc_ethmac_rx_cdc_cdc_wrport_we;
wire [41:0] basesoc_ethmac_rx_cdc_cdc_wrport_dat_w;
wire [4:0] basesoc_ethmac_rx_cdc_cdc_rdport_adr;
wire [41:0] basesoc_ethmac_rx_cdc_cdc_rdport_dat_r;
wire [31:0] basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error;
wire basesoc_ethmac_rx_cdc_cdc_fifo_in_first;
wire basesoc_ethmac_rx_cdc_cdc_fifo_in_last;
wire [31:0] basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
wire [3:0] basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error;
wire basesoc_ethmac_rx_cdc_cdc_fifo_out_first;
wire basesoc_ethmac_rx_cdc_cdc_fifo_out_last;
wire basesoc_ethmac_sink_sink_valid;
wire basesoc_ethmac_sink_sink_ready;
wire basesoc_ethmac_sink_sink_first;
wire basesoc_ethmac_sink_sink_last;
wire [31:0] basesoc_ethmac_sink_sink_payload_data;
wire [3:0] basesoc_ethmac_sink_sink_payload_last_be;
wire [3:0] basesoc_ethmac_sink_sink_payload_error;
wire basesoc_ethmac_source_source_valid;
wire basesoc_ethmac_source_source_ready;
wire basesoc_ethmac_source_source_first;
wire basesoc_ethmac_source_source_last;
wire [31:0] basesoc_ethmac_source_source_payload_data;
wire [3:0] basesoc_ethmac_source_source_payload_last_be;
wire [3:0] basesoc_ethmac_source_source_payload_error;
wire [29:0] basesoc_ethmac_bus_adr;
wire [31:0] basesoc_ethmac_bus_dat_w;
wire [31:0] basesoc_ethmac_bus_dat_r;
wire [3:0] basesoc_ethmac_bus_sel;
wire basesoc_ethmac_bus_cyc;
wire basesoc_ethmac_bus_stb;
wire basesoc_ethmac_bus_ack;
wire basesoc_ethmac_bus_we;
wire [2:0] basesoc_ethmac_bus_cti;
wire [1:0] basesoc_ethmac_bus_bte;
wire basesoc_ethmac_bus_err;
wire basesoc_ethmac_sram0_sink_valid;
reg  basesoc_ethmac_sram1_sink_ready = 1'd1;
wire basesoc_ethmac_sram2_sink_first;
wire basesoc_ethmac_sram3_sink_last;
wire [31:0] basesoc_ethmac_sram4_sink_payload_data;
wire [3:0] basesoc_ethmac_sram5_sink_payload_last_be;
wire [3:0] basesoc_ethmac_sram6_sink_payload_error;
wire basesoc_ethmac_sram7_status;
wire basesoc_ethmac_sram8_we;
reg  basesoc_ethmac_sram9_re = 1'd0;
wire [10:0] basesoc_ethmac_sram10_status;
wire basesoc_ethmac_sram11_we;
reg  basesoc_ethmac_sram12_re = 1'd0;
reg  [31:0] basesoc_ethmac_sram13_status = 32'd0;
wire basesoc_ethmac_sram14_we;
reg  basesoc_ethmac_sram15_re = 1'd0;
wire basesoc_ethmac_sram16_irq;
wire basesoc_ethmac_sram17_status;
wire basesoc_ethmac_sram18_pending;
wire basesoc_ethmac_sram19_trigger;
reg  basesoc_ethmac_sram20_clear = 1'd0;
wire basesoc_ethmac_sram21_available;
wire basesoc_ethmac_sram22_status;
wire basesoc_ethmac_sram23_we;
reg  basesoc_ethmac_sram24_re = 1'd0;
wire basesoc_ethmac_sram25_available;
wire basesoc_ethmac_sram26_status;
wire basesoc_ethmac_sram27_we;
reg  basesoc_ethmac_sram28_re = 1'd0;
reg  basesoc_ethmac_sram29_r = 1'd0;
wire basesoc_ethmac_sram30_available;
reg  basesoc_ethmac_sram31_storage = 1'd0;
reg  basesoc_ethmac_sram32_re = 1'd0;
reg  basesoc_ethmac_write = 1'd0;
reg  basesoc_ethmac_slot = 1'd0;
reg  [10:0] basesoc_ethmac_sram35_length = 11'd0;
reg  [3:0] basesoc_ethmac_length_inc = 4'd0;
reg  basesoc_ethmac_sram37_sink_valid = 1'd0;
wire basesoc_ethmac_sram38_sink_ready;
reg  basesoc_ethmac_sram39_sink_first = 1'd0;
reg  basesoc_ethmac_sram40_sink_last = 1'd0;
reg  basesoc_ethmac_sram41_sink_payload_slot = 1'd0;
reg  [10:0] basesoc_ethmac_sram42_sink_payload_length = 11'd0;
wire basesoc_ethmac_sram43_source_valid;
wire basesoc_ethmac_sram44_source_ready;
wire basesoc_ethmac_sram45_source_first;
wire basesoc_ethmac_sram46_source_last;
wire basesoc_ethmac_sram47_source_payload_slot;
wire [10:0] basesoc_ethmac_sram48_source_payload_length;
wire basesoc_ethmac_sram49_we;
wire basesoc_ethmac_sram50_writable;
wire basesoc_ethmac_sram51_re;
wire basesoc_ethmac_sram52_readable;
wire [13:0] basesoc_ethmac_sram53_din;
wire [13:0] basesoc_ethmac_sram54_dout;
reg  [1:0] basesoc_ethmac_sram55_level = 2'd0;
reg  basesoc_ethmac_sram56_replace = 1'd0;
reg  basesoc_ethmac_sram57_produce = 1'd0;
reg  basesoc_ethmac_sram58_consume = 1'd0;
reg  basesoc_ethmac_sram59_adr = 1'd0;
wire [13:0] basesoc_ethmac_sram60_dat_r;
wire basesoc_ethmac_sram61_we;
wire [13:0] basesoc_ethmac_sram62_dat_w;
wire basesoc_ethmac_sram63_do_read;
wire basesoc_ethmac_sram64_adr;
wire [13:0] basesoc_ethmac_sram65_dat_r;
wire basesoc_ethmac_sram66_fifo_in_payload_slot;
wire [10:0] basesoc_ethmac_sram67_fifo_in_payload_length;
wire basesoc_ethmac_sram68_fifo_in_first;
wire basesoc_ethmac_sram69_fifo_in_last;
wire basesoc_ethmac_sram70_fifo_out_payload_slot;
wire [10:0] basesoc_ethmac_sram71_fifo_out_payload_length;
wire basesoc_ethmac_sram72_fifo_out_first;
wire basesoc_ethmac_sram73_fifo_out_last;
wire [31:0] basesoc_ethmac_wr_data;
reg  [8:0] basesoc_ethmac_sram75_adr = 9'd0;
wire [31:0] basesoc_ethmac_sram76_dat_r;
reg  basesoc_ethmac_sram77_we = 1'd0;
reg  [31:0] basesoc_ethmac_sram78_dat_w = 32'd0;
reg  [8:0] basesoc_ethmac_sram79_adr = 9'd0;
wire [31:0] basesoc_ethmac_sram80_dat_r;
reg  basesoc_ethmac_sram81_we = 1'd0;
reg  [31:0] basesoc_ethmac_sram82_dat_w = 32'd0;
reg  basesoc_ethmac_sram83_source_valid = 1'd0;
wire basesoc_ethmac_sram84_source_ready;
reg  basesoc_ethmac_sram85_source_first = 1'd0;
reg  basesoc_ethmac_sram86_source_last = 1'd0;
wire [31:0] basesoc_ethmac_sram87_source_payload_data;
reg  [3:0] basesoc_ethmac_sram88_source_payload_last_be = 4'd0;
reg  [3:0] basesoc_ethmac_sram89_source_payload_error = 4'd0;
reg  basesoc_ethmac_start_re = 1'd0;
wire basesoc_ethmac_start_r;
reg  basesoc_ethmac_start_we = 1'd0;
reg  basesoc_ethmac_start_w = 1'd0;
wire basesoc_ethmac_sram94_status;
wire basesoc_ethmac_sram95_we;
reg  basesoc_ethmac_sram96_re = 1'd0;
wire [1:0] basesoc_ethmac_sram97_status;
wire basesoc_ethmac_sram98_we;
reg  basesoc_ethmac_sram99_re = 1'd0;
reg  basesoc_ethmac_sram100_storage = 1'd0;
reg  basesoc_ethmac_sram101_re = 1'd0;
reg  [10:0] basesoc_ethmac_sram102_storage = 11'd0;
reg  basesoc_ethmac_sram103_re = 1'd0;
wire basesoc_ethmac_sram104_irq;
wire basesoc_ethmac_sram105_status;
reg  basesoc_ethmac_sram106_pending = 1'd0;
reg  basesoc_ethmac_sram107_trigger = 1'd0;
reg  basesoc_ethmac_sram108_clear = 1'd0;
wire basesoc_ethmac_sram109_event0;
wire basesoc_ethmac_sram110_status;
wire basesoc_ethmac_sram111_we;
reg  basesoc_ethmac_sram112_re = 1'd0;
wire basesoc_ethmac_sram113_event0;
wire basesoc_ethmac_sram114_status;
wire basesoc_ethmac_sram115_we;
reg  basesoc_ethmac_sram116_re = 1'd0;
reg  basesoc_ethmac_sram117_r = 1'd0;
wire basesoc_ethmac_sram118_event0;
reg  basesoc_ethmac_sram119_storage = 1'd0;
reg  basesoc_ethmac_sram120_re = 1'd0;
reg  basesoc_ethmac_read = 1'd0;
reg  [10:0] basesoc_ethmac_sram122_length = 11'd0;
wire basesoc_ethmac_sram123_sink_valid;
wire basesoc_ethmac_sram124_sink_ready;
reg  basesoc_ethmac_sram125_sink_first = 1'd0;
reg  basesoc_ethmac_sram126_sink_last = 1'd0;
wire basesoc_ethmac_sram127_sink_payload_slot;
wire [10:0] basesoc_ethmac_sram128_sink_payload_length;
wire basesoc_ethmac_sram129_source_valid;
reg  basesoc_ethmac_sram130_source_ready = 1'd0;
wire basesoc_ethmac_sram131_source_first;
wire basesoc_ethmac_sram132_source_last;
wire basesoc_ethmac_sram133_source_payload_slot;
wire [10:0] basesoc_ethmac_sram134_source_payload_length;
wire basesoc_ethmac_sram135_we;
wire basesoc_ethmac_sram136_writable;
wire basesoc_ethmac_sram137_re;
wire basesoc_ethmac_sram138_readable;
wire [13:0] basesoc_ethmac_sram139_din;
wire [13:0] basesoc_ethmac_sram140_dout;
reg  [1:0] basesoc_ethmac_sram141_level = 2'd0;
reg  basesoc_ethmac_sram142_replace = 1'd0;
reg  basesoc_ethmac_sram143_produce = 1'd0;
reg  basesoc_ethmac_sram144_consume = 1'd0;
reg  basesoc_ethmac_sram145_adr = 1'd0;
wire [13:0] basesoc_ethmac_sram146_dat_r;
wire basesoc_ethmac_sram147_we;
wire [13:0] basesoc_ethmac_sram148_dat_w;
wire basesoc_ethmac_sram149_do_read;
wire basesoc_ethmac_sram150_adr;
wire [13:0] basesoc_ethmac_sram151_dat_r;
wire basesoc_ethmac_sram152_fifo_in_payload_slot;
wire [10:0] basesoc_ethmac_sram153_fifo_in_payload_length;
wire basesoc_ethmac_sram154_fifo_in_first;
wire basesoc_ethmac_sram155_fifo_in_last;
wire basesoc_ethmac_sram156_fifo_out_payload_slot;
wire [10:0] basesoc_ethmac_sram157_fifo_out_payload_length;
wire basesoc_ethmac_sram158_fifo_out_first;
wire basesoc_ethmac_sram159_fifo_out_last;
reg  [31:0] basesoc_ethmac_rd_data = 32'd0;
wire [8:0] basesoc_ethmac_sram161_adr;
wire [31:0] basesoc_ethmac_sram162_dat_r;
wire basesoc_ethmac_sram163_re;
wire [8:0] basesoc_ethmac_sram164_adr;
wire [31:0] basesoc_ethmac_sram165_dat_r;
wire basesoc_ethmac_sram166_re;
wire basesoc_ethmac_sram167_irq;
wire [29:0] basesoc_ethmac_interface0_adr;
wire [31:0] basesoc_ethmac_interface0_dat_w;
wire [31:0] basesoc_ethmac_interface0_dat_r;
wire [3:0] basesoc_ethmac_interface0_sel;
wire basesoc_ethmac_interface0_cyc;
wire basesoc_ethmac_interface0_stb;
reg  basesoc_ethmac_interface0_ack = 1'd0;
wire basesoc_ethmac_interface0_we;
wire [2:0] basesoc_ethmac_interface0_cti;
wire [1:0] basesoc_ethmac_interface0_bte;
reg  basesoc_ethmac_interface0_err = 1'd0;
wire [8:0] basesoc_ethmac_sram2_adr;
wire [31:0] basesoc_ethmac_sram2_dat_r;
wire [29:0] basesoc_ethmac_interface1_adr;
wire [31:0] basesoc_ethmac_interface1_dat_w;
wire [31:0] basesoc_ethmac_interface1_dat_r;
wire [3:0] basesoc_ethmac_interface1_sel;
wire basesoc_ethmac_interface1_cyc;
wire basesoc_ethmac_interface1_stb;
reg  basesoc_ethmac_interface1_ack = 1'd0;
wire basesoc_ethmac_interface1_we;
wire [2:0] basesoc_ethmac_interface1_cti;
wire [1:0] basesoc_ethmac_interface1_bte;
reg  basesoc_ethmac_interface1_err = 1'd0;
wire [8:0] basesoc_ethmac_sram3_adr;
wire [31:0] basesoc_ethmac_sram3_dat_r;
wire [29:0] basesoc_ethmac_interface2_adr;
wire [31:0] basesoc_ethmac_interface2_dat_w;
wire [31:0] basesoc_ethmac_interface2_dat_r;
wire [3:0] basesoc_ethmac_interface2_sel;
wire basesoc_ethmac_interface2_cyc;
wire basesoc_ethmac_interface2_stb;
reg  basesoc_ethmac_interface2_ack = 1'd0;
wire basesoc_ethmac_interface2_we;
wire [2:0] basesoc_ethmac_interface2_cti;
wire [1:0] basesoc_ethmac_interface2_bte;
reg  basesoc_ethmac_interface2_err = 1'd0;
wire [8:0] basesoc_ethmac_sram4_adr;
wire [31:0] basesoc_ethmac_sram4_dat_r;
reg  [3:0] basesoc_ethmac_sram4_we = 4'd0;
wire [31:0] basesoc_ethmac_sram4_dat_w;
wire [29:0] basesoc_ethmac_interface3_adr;
wire [31:0] basesoc_ethmac_interface3_dat_w;
wire [31:0] basesoc_ethmac_interface3_dat_r;
wire [3:0] basesoc_ethmac_interface3_sel;
wire basesoc_ethmac_interface3_cyc;
wire basesoc_ethmac_interface3_stb;
reg  basesoc_ethmac_interface3_ack = 1'd0;
wire basesoc_ethmac_interface3_we;
wire [2:0] basesoc_ethmac_interface3_cti;
wire [1:0] basesoc_ethmac_interface3_bte;
reg  basesoc_ethmac_interface3_err = 1'd0;
wire [8:0] basesoc_ethmac_sram5_adr;
wire [31:0] basesoc_ethmac_sram5_dat_r;
reg  [3:0] basesoc_ethmac_sram5_we = 4'd0;
wire [31:0] basesoc_ethmac_sram5_dat_w;
reg  [3:0] basesoc_ethmac_slave_sel = 4'd0;
reg  [3:0] basesoc_ethmac_slave_sel_r = 4'd0;
reg  [4:0] leds_storage = 5'd0;
reg  leds_re = 1'd0;
reg  [4:0] leds_chaser = 5'd0;
reg  leds_mode = 1'd0;
wire leds_wait;
wire leds_done;
reg  [23:0] leds_count = 24'd10000000;
reg  [11:0] sevenseg_storage = 12'd0;
reg  sevenseg_re = 1'd0;
reg  [11:0] sevenseg_xdigits = 12'd0;
reg  [2:0] sevenseg_select = 3'd0;
reg  [1:0] sevenseg_count0 = 2'd0;
reg  [7:0] sevenseg_abcdefg = 8'd0;
wire [3:0] sevenseg_hexa;
wire sevenseg_wait;
wire sevenseg_done;
reg  [17:0] sevenseg_count1 = 18'd166666;
reg  femtorv_state = 1'd0;
reg  femtorv_next_state = 1'd0;
reg  [29:0] basesoc_idbus_adr_femtorv_next_value0 = 30'd0;
reg  basesoc_idbus_adr_femtorv_next_value_ce0 = 1'd0;
reg  [31:0] basesoc_idbus_dat_w_femtorv_next_value1 = 32'd0;
reg  basesoc_idbus_dat_w_femtorv_next_value_ce1 = 1'd0;
reg  [3:0] basesoc_idbus_sel_femtorv_next_value2 = 4'd0;
reg  basesoc_idbus_sel_femtorv_next_value_ce2 = 1'd0;
reg  basesoc_idbus_we_femtorv_next_value3 = 1'd0;
reg  basesoc_idbus_we_femtorv_next_value_ce3 = 1'd0;
reg  rs232phytx_state = 1'd0;
reg  rs232phytx_next_state = 1'd0;
reg  [3:0] basesoc_tx_count_rs232phytx_next_value0 = 4'd0;
reg  basesoc_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg  basesoc_serial_tx_rs232phytx_next_value1 = 1'd0;
reg  basesoc_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg  [7:0] basesoc_tx_data_rs232phytx_next_value2 = 8'd0;
reg  basesoc_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg  rs232phyrx_state = 1'd0;
reg  rs232phyrx_next_state = 1'd0;
reg  [3:0] basesoc_rx_count_rs232phyrx_next_value0 = 4'd0;
reg  basesoc_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg  [7:0] basesoc_rx_data_rs232phyrx_next_value1 = 8'd0;
reg  basesoc_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
wire reset0;
wire reset1;
wire reset2;
wire reset3;
wire reset4;
wire reset5;
wire reset6;
wire reset7;
wire pll_fb;
reg  [1:0] refresher_state = 2'd0;
reg  [1:0] refresher_next_state = 2'd0;
reg  [3:0] bankmachine0_state = 4'd0;
reg  [3:0] bankmachine0_next_state = 4'd0;
reg  [3:0] bankmachine1_state = 4'd0;
reg  [3:0] bankmachine1_next_state = 4'd0;
reg  [3:0] bankmachine2_state = 4'd0;
reg  [3:0] bankmachine2_next_state = 4'd0;
reg  [3:0] bankmachine3_state = 4'd0;
reg  [3:0] bankmachine3_next_state = 4'd0;
reg  [3:0] bankmachine4_state = 4'd0;
reg  [3:0] bankmachine4_next_state = 4'd0;
reg  [3:0] bankmachine5_state = 4'd0;
reg  [3:0] bankmachine5_next_state = 4'd0;
reg  [3:0] bankmachine6_state = 4'd0;
reg  [3:0] bankmachine6_next_state = 4'd0;
reg  [3:0] bankmachine7_state = 4'd0;
reg  [3:0] bankmachine7_next_state = 4'd0;
reg  [3:0] multiplexer_state = 4'd0;
reg  [3:0] multiplexer_next_state = 4'd0;
wire roundrobin0_request;
wire roundrobin0_grant;
wire roundrobin0_ce;
wire roundrobin1_request;
wire roundrobin1_grant;
wire roundrobin1_ce;
wire roundrobin2_request;
wire roundrobin2_grant;
wire roundrobin2_ce;
wire roundrobin3_request;
wire roundrobin3_grant;
wire roundrobin3_ce;
wire roundrobin4_request;
wire roundrobin4_grant;
wire roundrobin4_ce;
wire roundrobin5_request;
wire roundrobin5_grant;
wire roundrobin5_ce;
wire roundrobin6_request;
wire roundrobin6_grant;
wire roundrobin6_ce;
wire roundrobin7_request;
wire roundrobin7_grant;
wire roundrobin7_ce;
reg  locked0 = 1'd0;
reg  locked1 = 1'd0;
reg  locked2 = 1'd0;
reg  locked3 = 1'd0;
reg  locked4 = 1'd0;
reg  locked5 = 1'd0;
reg  locked6 = 1'd0;
reg  locked7 = 1'd0;
reg  new_master_wdata_ready0 = 1'd0;
reg  new_master_wdata_ready1 = 1'd0;
reg  new_master_rdata_valid0 = 1'd0;
reg  new_master_rdata_valid1 = 1'd0;
reg  new_master_rdata_valid2 = 1'd0;
reg  new_master_rdata_valid3 = 1'd0;
reg  new_master_rdata_valid4 = 1'd0;
reg  new_master_rdata_valid5 = 1'd0;
reg  new_master_rdata_valid6 = 1'd0;
reg  new_master_rdata_valid7 = 1'd0;
reg  new_master_rdata_valid8 = 1'd0;
reg  [1:0] fullmemorywe_state = 2'd0;
reg  [1:0] fullmemorywe_next_state = 2'd0;
reg  [1:0] litedramwishbone2native_state = 2'd0;
reg  [1:0] litedramwishbone2native_next_state = 2'd0;
reg  basesoc_aborted_litedramwishbone2native_next_value = 1'd0;
reg  basesoc_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg  txdatapath_liteethmactxlastbe_state = 1'd0;
reg  txdatapath_liteethmactxlastbe_next_state = 1'd0;
reg  txdatapath_liteethmacpaddinginserter_state = 1'd0;
reg  txdatapath_liteethmacpaddinginserter_next_state = 1'd0;
reg  [15:0] basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value = 16'd0;
reg  basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce = 1'd0;
reg  [1:0] txdatapath_bufferizeendpoints_state = 2'd0;
reg  [1:0] txdatapath_bufferizeendpoints_next_state = 2'd0;
reg  [31:0] basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 = 32'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 = 1'd0;
reg  basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 = 1'd0;
reg  [1:0] txdatapath_liteethmacpreambleinserter_state = 2'd0;
reg  [1:0] txdatapath_liteethmacpreambleinserter_next_state = 2'd0;
reg  [2:0] basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value = 3'd0;
reg  basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce = 1'd0;
reg  txdatapath_liteethmacgap_state = 1'd0;
reg  txdatapath_liteethmacgap_next_state = 1'd0;
reg  [3:0] basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value = 4'd0;
reg  basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce = 1'd0;
reg  rxdatapath_liteethmacpreamblechecker_state = 1'd0;
reg  rxdatapath_liteethmacpreamblechecker_next_state = 1'd0;
reg  [1:0] rxdatapath_bufferizeendpoints_state = 2'd0;
reg  [1:0] rxdatapath_bufferizeendpoints_next_state = 2'd0;
reg  basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value0 = 1'd0;
reg  basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value_ce0 = 1'd0;
reg  basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value1 = 1'd0;
reg  basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value_ce1 = 1'd0;
reg  [1:0] liteethmacsramwriter_state = 2'd0;
reg  [1:0] liteethmacsramwriter_next_state = 2'd0;
reg  [10:0] basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value = 11'd0;
reg  basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce = 1'd0;
reg  [31:0] basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value = 32'd0;
reg  basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce = 1'd0;
reg  basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value = 1'd0;
reg  basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce = 1'd0;
reg  [1:0] liteethmacsramreader_state = 2'd0;
reg  [1:0] liteethmacsramreader_next_state = 2'd0;
reg  [10:0] basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value = 11'd0;
reg  basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce = 1'd0;
reg  [13:0] basesoc_adr = 14'd0;
reg  basesoc_we = 1'd0;
reg  [31:0] basesoc_dat_w = 32'd0;
wire [31:0] basesoc_dat_r;
wire [29:0] basesoc_wishbone_adr;
wire [31:0] basesoc_wishbone_dat_w;
reg  [31:0] basesoc_wishbone_dat_r = 32'd0;
wire [3:0] basesoc_wishbone_sel;
wire basesoc_wishbone_cyc;
wire basesoc_wishbone_stb;
reg  basesoc_wishbone_ack = 1'd0;
wire basesoc_wishbone_we;
wire [2:0] basesoc_wishbone_cti;
wire [1:0] basesoc_wishbone_bte;
reg  basesoc_wishbone_err = 1'd0;
wire [29:0] shared_adr;
wire [31:0] shared_dat_w;
reg  [31:0] shared_dat_r = 32'd0;
wire [3:0] shared_sel;
wire shared_cyc;
wire shared_stb;
reg  shared_ack = 1'd0;
wire shared_we;
wire [2:0] shared_cti;
wire [1:0] shared_bte;
wire shared_err;
wire request;
wire grant;
reg  [4:0] slave_sel = 5'd0;
reg  [4:0] slave_sel_r = 5'd0;
reg  error = 1'd0;
wire wait_1;
wire done;
reg  [19:0] count = 20'd1000000;
wire [13:0] csr_bankarray_interface0_bank_bus_adr;
wire csr_bankarray_interface0_bank_bus_we;
wire [31:0] csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank0_reset0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank0_reset0_r;
reg  csr_bankarray_csrbank0_reset0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank0_reset0_w;
reg  csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_scratch0_r;
reg  csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_scratch0_w;
reg  csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_bus_errors_r;
reg  csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_bus_errors_w;
wire csr_bankarray_csrbank0_sel;
wire [13:0] csr_bankarray_interface1_bank_bus_adr;
wire csr_bankarray_interface1_bank_bus_we;
wire [31:0] csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank1_rst0_re = 1'd0;
wire csr_bankarray_csrbank1_rst0_r;
reg  csr_bankarray_csrbank1_rst0_we = 1'd0;
wire csr_bankarray_csrbank1_rst0_w;
reg  csr_bankarray_csrbank1_half_sys8x_taps0_re = 1'd0;
wire [4:0] csr_bankarray_csrbank1_half_sys8x_taps0_r;
reg  csr_bankarray_csrbank1_half_sys8x_taps0_we = 1'd0;
wire [4:0] csr_bankarray_csrbank1_half_sys8x_taps0_w;
reg  csr_bankarray_csrbank1_wlevel_en0_re = 1'd0;
wire csr_bankarray_csrbank1_wlevel_en0_r;
reg  csr_bankarray_csrbank1_wlevel_en0_we = 1'd0;
wire csr_bankarray_csrbank1_wlevel_en0_w;
reg  csr_bankarray_csrbank1_dly_sel0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank1_dly_sel0_r;
reg  csr_bankarray_csrbank1_dly_sel0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank1_dly_sel0_w;
reg  csr_bankarray_csrbank1_rdphase0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank1_rdphase0_r;
reg  csr_bankarray_csrbank1_rdphase0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank1_rdphase0_w;
reg  csr_bankarray_csrbank1_wrphase0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank1_wrphase0_r;
reg  csr_bankarray_csrbank1_wrphase0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank1_wrphase0_w;
wire csr_bankarray_csrbank1_sel;
wire [13:0] csr_bankarray_interface2_bank_bus_adr;
wire csr_bankarray_interface2_bank_bus_we;
wire [31:0] csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank2_sram_writer_slot_re = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_slot_r;
reg  csr_bankarray_csrbank2_sram_writer_slot_we = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_slot_w;
reg  csr_bankarray_csrbank2_sram_writer_length_re = 1'd0;
wire [10:0] csr_bankarray_csrbank2_sram_writer_length_r;
reg  csr_bankarray_csrbank2_sram_writer_length_we = 1'd0;
wire [10:0] csr_bankarray_csrbank2_sram_writer_length_w;
reg  csr_bankarray_csrbank2_sram_writer_errors_re = 1'd0;
wire [31:0] csr_bankarray_csrbank2_sram_writer_errors_r;
reg  csr_bankarray_csrbank2_sram_writer_errors_we = 1'd0;
wire [31:0] csr_bankarray_csrbank2_sram_writer_errors_w;
reg  csr_bankarray_csrbank2_sram_writer_ev_status_re = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_status_r;
reg  csr_bankarray_csrbank2_sram_writer_ev_status_we = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_status_w;
reg  csr_bankarray_csrbank2_sram_writer_ev_pending_re = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_pending_r;
reg  csr_bankarray_csrbank2_sram_writer_ev_pending_we = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_pending_w;
reg  csr_bankarray_csrbank2_sram_writer_ev_enable0_re = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_enable0_r;
reg  csr_bankarray_csrbank2_sram_writer_ev_enable0_we = 1'd0;
wire csr_bankarray_csrbank2_sram_writer_ev_enable0_w;
reg  csr_bankarray_csrbank2_sram_reader_ready_re = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ready_r;
reg  csr_bankarray_csrbank2_sram_reader_ready_we = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ready_w;
reg  csr_bankarray_csrbank2_sram_reader_level_re = 1'd0;
wire [1:0] csr_bankarray_csrbank2_sram_reader_level_r;
reg  csr_bankarray_csrbank2_sram_reader_level_we = 1'd0;
wire [1:0] csr_bankarray_csrbank2_sram_reader_level_w;
reg  csr_bankarray_csrbank2_sram_reader_slot0_re = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_slot0_r;
reg  csr_bankarray_csrbank2_sram_reader_slot0_we = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_slot0_w;
reg  csr_bankarray_csrbank2_sram_reader_length0_re = 1'd0;
wire [10:0] csr_bankarray_csrbank2_sram_reader_length0_r;
reg  csr_bankarray_csrbank2_sram_reader_length0_we = 1'd0;
wire [10:0] csr_bankarray_csrbank2_sram_reader_length0_w;
reg  csr_bankarray_csrbank2_sram_reader_ev_status_re = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_status_r;
reg  csr_bankarray_csrbank2_sram_reader_ev_status_we = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_status_w;
reg  csr_bankarray_csrbank2_sram_reader_ev_pending_re = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_pending_r;
reg  csr_bankarray_csrbank2_sram_reader_ev_pending_we = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_pending_w;
reg  csr_bankarray_csrbank2_sram_reader_ev_enable0_re = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_enable0_r;
reg  csr_bankarray_csrbank2_sram_reader_ev_enable0_we = 1'd0;
wire csr_bankarray_csrbank2_sram_reader_ev_enable0_w;
reg  csr_bankarray_csrbank2_preamble_crc_re = 1'd0;
wire csr_bankarray_csrbank2_preamble_crc_r;
reg  csr_bankarray_csrbank2_preamble_crc_we = 1'd0;
wire csr_bankarray_csrbank2_preamble_crc_w;
reg  csr_bankarray_csrbank2_rx_datapath_preamble_errors_re = 1'd0;
wire [31:0] csr_bankarray_csrbank2_rx_datapath_preamble_errors_r;
reg  csr_bankarray_csrbank2_rx_datapath_preamble_errors_we = 1'd0;
wire [31:0] csr_bankarray_csrbank2_rx_datapath_preamble_errors_w;
reg  csr_bankarray_csrbank2_rx_datapath_crc_errors_re = 1'd0;
wire [31:0] csr_bankarray_csrbank2_rx_datapath_crc_errors_r;
reg  csr_bankarray_csrbank2_rx_datapath_crc_errors_we = 1'd0;
wire [31:0] csr_bankarray_csrbank2_rx_datapath_crc_errors_w;
wire csr_bankarray_csrbank2_sel;
wire [13:0] csr_bankarray_interface3_bank_bus_adr;
wire csr_bankarray_interface3_bank_bus_we;
wire [31:0] csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank3_crg_reset0_re = 1'd0;
wire csr_bankarray_csrbank3_crg_reset0_r;
reg  csr_bankarray_csrbank3_crg_reset0_we = 1'd0;
wire csr_bankarray_csrbank3_crg_reset0_w;
reg  csr_bankarray_csrbank3_mdio_w0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank3_mdio_w0_r;
reg  csr_bankarray_csrbank3_mdio_w0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank3_mdio_w0_w;
reg  csr_bankarray_csrbank3_mdio_r_re = 1'd0;
wire csr_bankarray_csrbank3_mdio_r_r;
reg  csr_bankarray_csrbank3_mdio_r_we = 1'd0;
wire csr_bankarray_csrbank3_mdio_r_w;
wire csr_bankarray_csrbank3_sel;
wire [13:0] csr_bankarray_sram_bus_adr;
wire csr_bankarray_sram_bus_we;
wire [31:0] csr_bankarray_sram_bus_dat_w;
reg  [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire [6:0] csr_bankarray_adr;
wire [7:0] csr_bankarray_dat_r;
wire csr_bankarray_sel;
reg  csr_bankarray_sel_r = 1'd0;
wire [13:0] csr_bankarray_interface4_bank_bus_adr;
wire csr_bankarray_interface4_bank_bus_we;
wire [31:0] csr_bankarray_interface4_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank4_out0_re = 1'd0;
wire [4:0] csr_bankarray_csrbank4_out0_r;
reg  csr_bankarray_csrbank4_out0_we = 1'd0;
wire [4:0] csr_bankarray_csrbank4_out0_w;
wire csr_bankarray_csrbank4_sel;
wire [13:0] csr_bankarray_interface5_bank_bus_adr;
wire csr_bankarray_interface5_bank_bus_we;
wire [31:0] csr_bankarray_interface5_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank5_dfii_control0_re = 1'd0;
wire [3:0] csr_bankarray_csrbank5_dfii_control0_r;
reg  csr_bankarray_csrbank5_dfii_control0_we = 1'd0;
wire [3:0] csr_bankarray_csrbank5_dfii_control0_w;
reg  csr_bankarray_csrbank5_dfii_pi0_command0_re = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi0_command0_r;
reg  csr_bankarray_csrbank5_dfii_pi0_command0_we = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi0_command0_w;
reg  csr_bankarray_csrbank5_dfii_pi0_address0_re = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi0_address0_r;
reg  csr_bankarray_csrbank5_dfii_pi0_address0_we = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi0_address0_w;
reg  csr_bankarray_csrbank5_dfii_pi0_baddress0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi0_baddress0_r;
reg  csr_bankarray_csrbank5_dfii_pi0_baddress0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi0_baddress0_w;
reg  csr_bankarray_csrbank5_dfii_pi0_wrdata0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi0_wrdata0_r;
reg  csr_bankarray_csrbank5_dfii_pi0_wrdata0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi0_wrdata0_w;
reg  csr_bankarray_csrbank5_dfii_pi0_rddata_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi0_rddata_r;
reg  csr_bankarray_csrbank5_dfii_pi0_rddata_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi0_rddata_w;
reg  csr_bankarray_csrbank5_dfii_pi1_command0_re = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi1_command0_r;
reg  csr_bankarray_csrbank5_dfii_pi1_command0_we = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi1_command0_w;
reg  csr_bankarray_csrbank5_dfii_pi1_address0_re = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi1_address0_r;
reg  csr_bankarray_csrbank5_dfii_pi1_address0_we = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi1_address0_w;
reg  csr_bankarray_csrbank5_dfii_pi1_baddress0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi1_baddress0_r;
reg  csr_bankarray_csrbank5_dfii_pi1_baddress0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi1_baddress0_w;
reg  csr_bankarray_csrbank5_dfii_pi1_wrdata0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi1_wrdata0_r;
reg  csr_bankarray_csrbank5_dfii_pi1_wrdata0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi1_wrdata0_w;
reg  csr_bankarray_csrbank5_dfii_pi1_rddata_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi1_rddata_r;
reg  csr_bankarray_csrbank5_dfii_pi1_rddata_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi1_rddata_w;
reg  csr_bankarray_csrbank5_dfii_pi2_command0_re = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi2_command0_r;
reg  csr_bankarray_csrbank5_dfii_pi2_command0_we = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi2_command0_w;
reg  csr_bankarray_csrbank5_dfii_pi2_address0_re = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi2_address0_r;
reg  csr_bankarray_csrbank5_dfii_pi2_address0_we = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi2_address0_w;
reg  csr_bankarray_csrbank5_dfii_pi2_baddress0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi2_baddress0_r;
reg  csr_bankarray_csrbank5_dfii_pi2_baddress0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi2_baddress0_w;
reg  csr_bankarray_csrbank5_dfii_pi2_wrdata0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi2_wrdata0_r;
reg  csr_bankarray_csrbank5_dfii_pi2_wrdata0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi2_wrdata0_w;
reg  csr_bankarray_csrbank5_dfii_pi2_rddata_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi2_rddata_r;
reg  csr_bankarray_csrbank5_dfii_pi2_rddata_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi2_rddata_w;
reg  csr_bankarray_csrbank5_dfii_pi3_command0_re = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi3_command0_r;
reg  csr_bankarray_csrbank5_dfii_pi3_command0_we = 1'd0;
wire [5:0] csr_bankarray_csrbank5_dfii_pi3_command0_w;
reg  csr_bankarray_csrbank5_dfii_pi3_address0_re = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi3_address0_r;
reg  csr_bankarray_csrbank5_dfii_pi3_address0_we = 1'd0;
wire [13:0] csr_bankarray_csrbank5_dfii_pi3_address0_w;
reg  csr_bankarray_csrbank5_dfii_pi3_baddress0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi3_baddress0_r;
reg  csr_bankarray_csrbank5_dfii_pi3_baddress0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank5_dfii_pi3_baddress0_w;
reg  csr_bankarray_csrbank5_dfii_pi3_wrdata0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi3_wrdata0_r;
reg  csr_bankarray_csrbank5_dfii_pi3_wrdata0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi3_wrdata0_w;
reg  csr_bankarray_csrbank5_dfii_pi3_rddata_re = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi3_rddata_r;
reg  csr_bankarray_csrbank5_dfii_pi3_rddata_we = 1'd0;
wire [31:0] csr_bankarray_csrbank5_dfii_pi3_rddata_w;
wire csr_bankarray_csrbank5_sel;
wire [13:0] csr_bankarray_interface6_bank_bus_adr;
wire csr_bankarray_interface6_bank_bus_we;
wire [31:0] csr_bankarray_interface6_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank6_out0_re = 1'd0;
wire [11:0] csr_bankarray_csrbank6_out0_r;
reg  csr_bankarray_csrbank6_out0_we = 1'd0;
wire [11:0] csr_bankarray_csrbank6_out0_w;
wire csr_bankarray_csrbank6_sel;
wire [13:0] csr_bankarray_interface7_bank_bus_adr;
wire csr_bankarray_interface7_bank_bus_we;
wire [31:0] csr_bankarray_interface7_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank7_load0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank7_load0_r;
reg  csr_bankarray_csrbank7_load0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank7_load0_w;
reg  csr_bankarray_csrbank7_reload0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank7_reload0_r;
reg  csr_bankarray_csrbank7_reload0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank7_reload0_w;
reg  csr_bankarray_csrbank7_en0_re = 1'd0;
wire csr_bankarray_csrbank7_en0_r;
reg  csr_bankarray_csrbank7_en0_we = 1'd0;
wire csr_bankarray_csrbank7_en0_w;
reg  csr_bankarray_csrbank7_update_value0_re = 1'd0;
wire csr_bankarray_csrbank7_update_value0_r;
reg  csr_bankarray_csrbank7_update_value0_we = 1'd0;
wire csr_bankarray_csrbank7_update_value0_w;
reg  csr_bankarray_csrbank7_value_re = 1'd0;
wire [31:0] csr_bankarray_csrbank7_value_r;
reg  csr_bankarray_csrbank7_value_we = 1'd0;
wire [31:0] csr_bankarray_csrbank7_value_w;
reg  csr_bankarray_csrbank7_ev_status_re = 1'd0;
wire csr_bankarray_csrbank7_ev_status_r;
reg  csr_bankarray_csrbank7_ev_status_we = 1'd0;
wire csr_bankarray_csrbank7_ev_status_w;
reg  csr_bankarray_csrbank7_ev_pending_re = 1'd0;
wire csr_bankarray_csrbank7_ev_pending_r;
reg  csr_bankarray_csrbank7_ev_pending_we = 1'd0;
wire csr_bankarray_csrbank7_ev_pending_w;
reg  csr_bankarray_csrbank7_ev_enable0_re = 1'd0;
wire csr_bankarray_csrbank7_ev_enable0_r;
reg  csr_bankarray_csrbank7_ev_enable0_we = 1'd0;
wire csr_bankarray_csrbank7_ev_enable0_w;
wire csr_bankarray_csrbank7_sel;
wire [13:0] csr_bankarray_interface8_bank_bus_adr;
wire csr_bankarray_interface8_bank_bus_we;
wire [31:0] csr_bankarray_interface8_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank8_txfull_re = 1'd0;
wire csr_bankarray_csrbank8_txfull_r;
reg  csr_bankarray_csrbank8_txfull_we = 1'd0;
wire csr_bankarray_csrbank8_txfull_w;
reg  csr_bankarray_csrbank8_rxempty_re = 1'd0;
wire csr_bankarray_csrbank8_rxempty_r;
reg  csr_bankarray_csrbank8_rxempty_we = 1'd0;
wire csr_bankarray_csrbank8_rxempty_w;
reg  csr_bankarray_csrbank8_ev_status_re = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_status_r;
reg  csr_bankarray_csrbank8_ev_status_we = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_status_w;
reg  csr_bankarray_csrbank8_ev_pending_re = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_pending_r;
reg  csr_bankarray_csrbank8_ev_pending_we = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_pending_w;
reg  csr_bankarray_csrbank8_ev_enable0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_enable0_r;
reg  csr_bankarray_csrbank8_ev_enable0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank8_ev_enable0_w;
reg  csr_bankarray_csrbank8_txempty_re = 1'd0;
wire csr_bankarray_csrbank8_txempty_r;
reg  csr_bankarray_csrbank8_txempty_we = 1'd0;
wire csr_bankarray_csrbank8_txempty_w;
reg  csr_bankarray_csrbank8_rxfull_re = 1'd0;
wire csr_bankarray_csrbank8_rxfull_r;
reg  csr_bankarray_csrbank8_rxfull_we = 1'd0;
wire csr_bankarray_csrbank8_rxfull_w;
wire csr_bankarray_csrbank8_sel;
wire [13:0] csr_interconnect_adr;
wire csr_interconnect_we;
wire [31:0] csr_interconnect_dat_w;
wire [31:0] csr_interconnect_dat_r;
reg  [1:0] state = 2'd0;
reg  [1:0] next_state = 2'd0;
reg  [31:0] basesoc_dat_w_next_value0 = 32'd0;
reg  basesoc_dat_w_next_value_ce0 = 1'd0;
reg  [13:0] basesoc_adr_next_value1 = 14'd0;
reg  basesoc_adr_next_value_ce1 = 1'd0;
reg  basesoc_we_next_value2 = 1'd0;
reg  basesoc_we_next_value_ce2 = 1'd0;
wire [31:0] t_slice_proxy0;
wire [31:0] t_slice_proxy1;
wire [31:0] t_slice_proxy2;
wire [31:0] t_slice_proxy3;
wire [31:0] t_slice_proxy4;
wire [31:0] t_slice_proxy5;
wire [31:0] t_slice_proxy6;
wire [31:0] t_slice_proxy7;
wire [31:0] t_slice_proxy8;
wire [31:0] t_slice_proxy9;
wire [31:0] t_slice_proxy10;
wire [31:0] t_slice_proxy11;
wire [31:0] t_slice_proxy12;
wire [31:0] t_slice_proxy13;
wire [31:0] t_slice_proxy14;
wire [31:0] t_slice_proxy15;
wire [31:0] t_slice_proxy16;
wire [31:0] t_slice_proxy17;
wire [31:0] t_slice_proxy18;
wire [31:0] t_slice_proxy19;
wire [31:0] t_slice_proxy20;
wire [31:0] t_slice_proxy21;
wire [31:0] t_slice_proxy22;
wire [31:0] t_slice_proxy23;
wire [31:0] t_slice_proxy24;
wire [31:0] t_slice_proxy25;
wire [31:0] t_slice_proxy26;
wire [31:0] t_slice_proxy27;
wire [31:0] t_slice_proxy28;
wire [31:0] t_slice_proxy29;
wire [31:0] t_slice_proxy30;
wire [31:0] t_slice_proxy31;
wire [39:0] cases_slice_proxy;
wire [31:0] t_slice_proxy32;
wire [31:0] t_slice_proxy33;
wire [31:0] t_slice_proxy34;
wire [31:0] t_slice_proxy35;
wire [31:0] t_slice_proxy36;
wire [31:0] t_slice_proxy37;
wire [31:0] t_slice_proxy38;
wire [31:0] t_slice_proxy39;
wire [31:0] t_slice_proxy40;
wire [31:0] t_slice_proxy41;
wire [31:0] t_slice_proxy42;
wire [31:0] t_slice_proxy43;
wire [31:0] t_slice_proxy44;
wire [31:0] t_slice_proxy45;
wire [31:0] t_slice_proxy46;
wire [31:0] t_slice_proxy47;
wire [31:0] t_slice_proxy48;
wire [31:0] t_slice_proxy49;
wire [31:0] t_slice_proxy50;
wire [31:0] t_slice_proxy51;
wire [31:0] t_slice_proxy52;
wire [31:0] t_slice_proxy53;
wire [31:0] t_slice_proxy54;
wire [31:0] t_slice_proxy55;
wire [31:0] t_slice_proxy56;
wire [31:0] t_slice_proxy57;
wire [31:0] t_slice_proxy58;
wire [31:0] t_slice_proxy59;
wire [31:0] t_slice_proxy60;
wire [31:0] t_slice_proxy61;
wire [31:0] t_slice_proxy62;
wire [31:0] t_slice_proxy63;
reg  rhs_array_muxed0 = 1'd0;
reg  [13:0] rhs_array_muxed1 = 14'd0;
reg  [2:0] rhs_array_muxed2 = 3'd0;
reg  rhs_array_muxed3 = 1'd0;
reg  rhs_array_muxed4 = 1'd0;
reg  rhs_array_muxed5 = 1'd0;
reg  t_array_muxed0 = 1'd0;
reg  t_array_muxed1 = 1'd0;
reg  t_array_muxed2 = 1'd0;
reg  rhs_array_muxed6 = 1'd0;
reg  [13:0] rhs_array_muxed7 = 14'd0;
reg  [2:0] rhs_array_muxed8 = 3'd0;
reg  rhs_array_muxed9 = 1'd0;
reg  rhs_array_muxed10 = 1'd0;
reg  rhs_array_muxed11 = 1'd0;
reg  t_array_muxed3 = 1'd0;
reg  t_array_muxed4 = 1'd0;
reg  t_array_muxed5 = 1'd0;
reg  [20:0] rhs_array_muxed12 = 21'd0;
reg  rhs_array_muxed13 = 1'd0;
reg  rhs_array_muxed14 = 1'd0;
reg  [20:0] rhs_array_muxed15 = 21'd0;
reg  rhs_array_muxed16 = 1'd0;
reg  rhs_array_muxed17 = 1'd0;
reg  [20:0] rhs_array_muxed18 = 21'd0;
reg  rhs_array_muxed19 = 1'd0;
reg  rhs_array_muxed20 = 1'd0;
reg  [20:0] rhs_array_muxed21 = 21'd0;
reg  rhs_array_muxed22 = 1'd0;
reg  rhs_array_muxed23 = 1'd0;
reg  [20:0] rhs_array_muxed24 = 21'd0;
reg  rhs_array_muxed25 = 1'd0;
reg  rhs_array_muxed26 = 1'd0;
reg  [20:0] rhs_array_muxed27 = 21'd0;
reg  rhs_array_muxed28 = 1'd0;
reg  rhs_array_muxed29 = 1'd0;
reg  [20:0] rhs_array_muxed30 = 21'd0;
reg  rhs_array_muxed31 = 1'd0;
reg  rhs_array_muxed32 = 1'd0;
reg  [20:0] rhs_array_muxed33 = 21'd0;
reg  rhs_array_muxed34 = 1'd0;
reg  rhs_array_muxed35 = 1'd0;
reg  [29:0] rhs_array_muxed36 = 30'd0;
reg  [31:0] rhs_array_muxed37 = 32'd0;
reg  [3:0] rhs_array_muxed38 = 4'd0;
reg  rhs_array_muxed39 = 1'd0;
reg  rhs_array_muxed40 = 1'd0;
reg  rhs_array_muxed41 = 1'd0;
reg  [2:0] rhs_array_muxed42 = 3'd0;
reg  [1:0] rhs_array_muxed43 = 2'd0;
reg  [2:0] array_muxed0 = 3'd0;
reg  [13:0] array_muxed1 = 14'd0;
reg  array_muxed2 = 1'd0;
reg  array_muxed3 = 1'd0;
reg  array_muxed4 = 1'd0;
reg  array_muxed5 = 1'd0;
reg  array_muxed6 = 1'd0;
reg  [2:0] array_muxed7 = 3'd0;
reg  [13:0] array_muxed8 = 14'd0;
reg  array_muxed9 = 1'd0;
reg  array_muxed10 = 1'd0;
reg  array_muxed11 = 1'd0;
reg  array_muxed12 = 1'd0;
reg  array_muxed13 = 1'd0;
reg  [2:0] array_muxed14 = 3'd0;
reg  [13:0] array_muxed15 = 14'd0;
reg  array_muxed16 = 1'd0;
reg  array_muxed17 = 1'd0;
reg  array_muxed18 = 1'd0;
reg  array_muxed19 = 1'd0;
reg  array_muxed20 = 1'd0;
reg  [2:0] array_muxed21 = 3'd0;
reg  [13:0] array_muxed22 = 14'd0;
reg  array_muxed23 = 1'd0;
reg  array_muxed24 = 1'd0;
reg  array_muxed25 = 1'd0;
reg  array_muxed26 = 1'd0;
reg  array_muxed27 = 1'd0;
reg  xilinxmultiregimpl0_regs0 = 1'd0;
reg  xilinxmultiregimpl0_regs1 = 1'd0;
wire xilinxasyncresetsynchronizerimpl0;
wire xilinxasyncresetsynchronizerimpl0_rst_meta;
wire xilinxasyncresetsynchronizerimpl1;
wire xilinxasyncresetsynchronizerimpl1_rst_meta;
wire xilinxasyncresetsynchronizerimpl1_expr;
wire xilinxasyncresetsynchronizerimpl2;
wire xilinxasyncresetsynchronizerimpl2_rst_meta;
wire xilinxasyncresetsynchronizerimpl2_expr;
wire xilinxasyncresetsynchronizerimpl3;
wire xilinxasyncresetsynchronizerimpl3_rst_meta;
wire xilinxasyncresetsynchronizerimpl4;
wire xilinxasyncresetsynchronizerimpl4_rst_meta;
wire xilinxasyncresetsynchronizerimpl5_rst_meta;
wire xilinxasyncresetsynchronizerimpl6_rst_meta;
reg  xilinxmultiregimpl1_regs0 = 1'd0;
reg  xilinxmultiregimpl1_regs1 = 1'd0;
reg  [5:0] xilinxmultiregimpl2_regs0 = 6'd0;
reg  [5:0] xilinxmultiregimpl2_regs1 = 6'd0;
reg  [5:0] xilinxmultiregimpl3_regs0 = 6'd0;
reg  [5:0] xilinxmultiregimpl3_regs1 = 6'd0;
reg  xilinxmultiregimpl4_regs0 = 1'd0;
reg  xilinxmultiregimpl4_regs1 = 1'd0;
reg  xilinxmultiregimpl5_regs0 = 1'd0;
reg  xilinxmultiregimpl5_regs1 = 1'd0;
reg  [5:0] xilinxmultiregimpl6_regs0 = 6'd0;
reg  [5:0] xilinxmultiregimpl6_regs1 = 6'd0;
reg  [5:0] xilinxmultiregimpl7_regs0 = 6'd0;
reg  [5:0] xilinxmultiregimpl7_regs1 = 6'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign basesoc_reset = (basesoc_soc_rst | basesoc_cpu_rst);
always @(*) begin
	crg_rst <= 1'd0;
	if (basesoc_soc_rst) begin
		crg_rst <= 1'd1;
	end
end
assign basesoc_bus_error = error;
assign basesoc_bus_errors_status = basesoc_bus_errors;
always @(*) begin
	basesoc_mbus_rdata0 <= 32'd0;
	basesoc_mbus_rdata0 <= basesoc_mbus_rdata1;
	if (basesoc_latch) begin
		basesoc_mbus_rdata0 <= basesoc_idbus_dat_r;
	end
end
always @(*) begin
	basesoc_idbus_stb <= 1'd0;
	femtorv_next_state <= 1'd0;
	basesoc_idbus_adr_femtorv_next_value0 <= 30'd0;
	basesoc_idbus_adr_femtorv_next_value_ce0 <= 1'd0;
	basesoc_idbus_dat_w_femtorv_next_value1 <= 32'd0;
	basesoc_idbus_dat_w_femtorv_next_value_ce1 <= 1'd0;
	basesoc_mbus_rbusy <= 1'd0;
	basesoc_mbus_wbusy <= 1'd0;
	basesoc_idbus_sel_femtorv_next_value2 <= 4'd0;
	basesoc_idbus_sel_femtorv_next_value_ce2 <= 1'd0;
	basesoc_idbus_cyc <= 1'd0;
	basesoc_latch <= 1'd0;
	basesoc_idbus_we_femtorv_next_value3 <= 1'd0;
	basesoc_idbus_we_femtorv_next_value_ce3 <= 1'd0;
	femtorv_next_state <= femtorv_state;
	case (femtorv_state)
		1'd1: begin
			basesoc_idbus_stb <= 1'd1;
			basesoc_idbus_cyc <= 1'd1;
			basesoc_mbus_wbusy <= 1'd1;
			basesoc_mbus_rbusy <= 1'd1;
			if (basesoc_idbus_ack) begin
				basesoc_mbus_wbusy <= 1'd0;
				basesoc_mbus_rbusy <= 1'd0;
				basesoc_latch <= 1'd1;
				femtorv_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_idbus_adr_femtorv_next_value0 <= basesoc_mbus_addr[31:2];
			basesoc_idbus_adr_femtorv_next_value_ce0 <= 1'd1;
			basesoc_idbus_dat_w_femtorv_next_value1 <= basesoc_mbus_wdata;
			basesoc_idbus_dat_w_femtorv_next_value_ce1 <= 1'd1;
			basesoc_idbus_sel_femtorv_next_value2 <= basesoc_mbus_wmask;
			basesoc_idbus_sel_femtorv_next_value_ce2 <= 1'd1;
			if ((basesoc_mbus_rstrb | (basesoc_mbus_wmask != 1'd0))) begin
				basesoc_idbus_we_femtorv_next_value3 <= (basesoc_mbus_wmask != 1'd0);
				basesoc_idbus_we_femtorv_next_value_ce3 <= 1'd1;
				femtorv_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_basesoc_adr = basesoc_basesoc_ram_bus_adr[14:0];
assign basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_dat_r;
always @(*) begin
	basesoc_ram_we <= 4'd0;
	basesoc_ram_we[0] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[0]);
	basesoc_ram_we[1] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[1]);
	basesoc_ram_we[2] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[2]);
	basesoc_ram_we[3] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[3]);
end
assign basesoc_ram_adr = basesoc_ram_bus_ram_bus_adr[10:0];
assign basesoc_ram_bus_ram_bus_dat_r = basesoc_ram_dat_r;
assign basesoc_ram_dat_w = basesoc_ram_bus_ram_bus_dat_w;
always @(*) begin
	rs232phytx_next_state <= 1'd0;
	basesoc_tx_enable <= 1'd0;
	basesoc_tx_count_rs232phytx_next_value0 <= 4'd0;
	basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
	basesoc_tx_sink_ready <= 1'd0;
	basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
	basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
	basesoc_tx_data_rs232phytx_next_value2 <= 8'd0;
	basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
	rs232phytx_next_state <= rs232phytx_state;
	case (rs232phytx_state)
		1'd1: begin
			basesoc_tx_enable <= 1'd1;
			if (basesoc_tx_tick) begin
				basesoc_serial_tx_rs232phytx_next_value1 <= basesoc_tx_data;
				basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				basesoc_tx_count_rs232phytx_next_value0 <= (basesoc_tx_count + 1'd1);
				basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
				basesoc_tx_data_rs232phytx_next_value2 <= {1'd1, basesoc_tx_data[7:1]};
				basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				if ((basesoc_tx_count == 4'd9)) begin
					basesoc_tx_sink_ready <= 1'd1;
					rs232phytx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_tx_count_rs232phytx_next_value0 <= 1'd0;
			basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
			basesoc_serial_tx_rs232phytx_next_value1 <= 1'd1;
			basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
			if (basesoc_tx_sink_valid) begin
				basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
				basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				basesoc_tx_data_rs232phytx_next_value2 <= basesoc_tx_sink_payload_data;
				basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				rs232phytx_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	rs232phyrx_next_state <= 1'd0;
	basesoc_rx_count_rs232phyrx_next_value0 <= 4'd0;
	basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
	basesoc_rx_source_valid <= 1'd0;
	basesoc_rx_source_payload_data <= 8'd0;
	basesoc_rx_data_rs232phyrx_next_value1 <= 8'd0;
	basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
	basesoc_rx_enable <= 1'd0;
	rs232phyrx_next_state <= rs232phyrx_state;
	case (rs232phyrx_state)
		1'd1: begin
			basesoc_rx_enable <= 1'd1;
			if (basesoc_rx_tick) begin
				basesoc_rx_count_rs232phyrx_next_value0 <= (basesoc_rx_count + 1'd1);
				basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
				basesoc_rx_data_rs232phyrx_next_value1 <= {basesoc_rx_rx, basesoc_rx_data[7:1]};
				basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
				if ((basesoc_rx_count == 4'd9)) begin
					basesoc_rx_source_valid <= (basesoc_rx_rx == 1'd1);
					basesoc_rx_source_payload_data <= basesoc_rx_data;
					rs232phyrx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_rx_count_rs232phyrx_next_value0 <= 1'd0;
			basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
			if (((basesoc_rx_rx == 1'd0) & (basesoc_rx_rx_d == 1'd1))) begin
				rs232phyrx_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_uart_uart_sink_valid = basesoc_rx_source_valid;
assign basesoc_rx_source_ready = basesoc_uart_uart_sink_ready;
assign basesoc_uart_uart_sink_first = basesoc_rx_source_first;
assign basesoc_uart_uart_sink_last = basesoc_rx_source_last;
assign basesoc_uart_uart_sink_payload_data = basesoc_rx_source_payload_data;
assign basesoc_tx_sink_valid = basesoc_uart_uart_source_valid;
assign basesoc_uart_uart_source_ready = basesoc_tx_sink_ready;
assign basesoc_tx_sink_first = basesoc_uart_uart_source_first;
assign basesoc_tx_sink_last = basesoc_uart_uart_source_last;
assign basesoc_tx_sink_payload_data = basesoc_uart_uart_source_payload_data;
assign basesoc_uart_tx_fifo_sink_valid = basesoc_uart_rxtx_re;
assign basesoc_uart_tx_fifo_sink_payload_data = basesoc_uart_rxtx_r;
assign basesoc_uart_uart_source_valid = basesoc_uart_tx_fifo_source_valid;
assign basesoc_uart_tx_fifo_source_ready = basesoc_uart_uart_source_ready;
assign basesoc_uart_uart_source_first = basesoc_uart_tx_fifo_source_first;
assign basesoc_uart_uart_source_last = basesoc_uart_tx_fifo_source_last;
assign basesoc_uart_uart_source_payload_data = basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_uart_txfull_status = (~basesoc_uart_tx_fifo_sink_ready);
assign basesoc_uart_txempty_status = (~basesoc_uart_tx_fifo_source_valid);
assign basesoc_uart_tx_trigger = basesoc_uart_tx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_valid = basesoc_uart_uart_sink_valid;
assign basesoc_uart_uart_sink_ready = basesoc_uart_rx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_first = basesoc_uart_uart_sink_first;
assign basesoc_uart_rx_fifo_sink_last = basesoc_uart_uart_sink_last;
assign basesoc_uart_rx_fifo_sink_payload_data = basesoc_uart_uart_sink_payload_data;
assign basesoc_uart_rxtx_w = basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_uart_rx_fifo_source_ready = (basesoc_uart_rx_clear | (1'd0 & basesoc_uart_rxtx_we));
assign basesoc_uart_rxempty_status = (~basesoc_uart_rx_fifo_source_valid);
assign basesoc_uart_rxfull_status = (~basesoc_uart_rx_fifo_sink_ready);
assign basesoc_uart_rx_trigger = basesoc_uart_rx_fifo_source_valid;
assign basesoc_uart_tx0 = basesoc_uart_tx_status;
assign basesoc_uart_tx1 = basesoc_uart_tx_pending;
always @(*) begin
	basesoc_uart_tx_clear <= 1'd0;
	if ((basesoc_uart_pending_re & basesoc_uart_pending_r[0])) begin
		basesoc_uart_tx_clear <= 1'd1;
	end
end
assign basesoc_uart_rx0 = basesoc_uart_rx_status;
assign basesoc_uart_rx1 = basesoc_uart_rx_pending;
always @(*) begin
	basesoc_uart_rx_clear <= 1'd0;
	if ((basesoc_uart_pending_re & basesoc_uart_pending_r[1])) begin
		basesoc_uart_rx_clear <= 1'd1;
	end
end
assign basesoc_uart_irq = ((basesoc_uart_pending_status[0] & basesoc_uart_enable_storage[0]) | (basesoc_uart_pending_status[1] & basesoc_uart_enable_storage[1]));
assign basesoc_uart_tx_status = basesoc_uart_tx_trigger;
assign basesoc_uart_rx_status = basesoc_uart_rx_trigger;
assign basesoc_uart_tx_fifo_syncfifo_din = {basesoc_uart_tx_fifo_fifo_in_last, basesoc_uart_tx_fifo_fifo_in_first, basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart_tx_fifo_fifo_out_last, basesoc_uart_tx_fifo_fifo_out_first, basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_uart_tx_fifo_sink_ready = basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_uart_tx_fifo_syncfifo_we = basesoc_uart_tx_fifo_sink_valid;
assign basesoc_uart_tx_fifo_fifo_in_first = basesoc_uart_tx_fifo_sink_first;
assign basesoc_uart_tx_fifo_fifo_in_last = basesoc_uart_tx_fifo_sink_last;
assign basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_uart_tx_fifo_source_valid = basesoc_uart_tx_fifo_readable;
assign basesoc_uart_tx_fifo_source_first = basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_uart_tx_fifo_source_last = basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_uart_tx_fifo_source_payload_data = basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_uart_tx_fifo_re = basesoc_uart_tx_fifo_source_ready;
assign basesoc_uart_tx_fifo_syncfifo_re = (basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_uart_tx_fifo_readable) | basesoc_uart_tx_fifo_re));
assign basesoc_uart_tx_fifo_level1 = (basesoc_uart_tx_fifo_level0 + basesoc_uart_tx_fifo_readable);
always @(*) begin
	basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart_tx_fifo_replace) begin
		basesoc_uart_tx_fifo_wrport_adr <= (basesoc_uart_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart_tx_fifo_wrport_adr <= basesoc_uart_tx_fifo_produce;
	end
end
assign basesoc_uart_tx_fifo_wrport_dat_w = basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_uart_tx_fifo_wrport_we = (basesoc_uart_tx_fifo_syncfifo_we & (basesoc_uart_tx_fifo_syncfifo_writable | basesoc_uart_tx_fifo_replace));
assign basesoc_uart_tx_fifo_do_read = (basesoc_uart_tx_fifo_syncfifo_readable & basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_uart_tx_fifo_rdport_adr = basesoc_uart_tx_fifo_consume;
assign basesoc_uart_tx_fifo_syncfifo_dout = basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_uart_tx_fifo_rdport_re = basesoc_uart_tx_fifo_do_read;
assign basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_uart_rx_fifo_syncfifo_din = {basesoc_uart_rx_fifo_fifo_in_last, basesoc_uart_rx_fifo_fifo_in_first, basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart_rx_fifo_fifo_out_last, basesoc_uart_rx_fifo_fifo_out_first, basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_uart_rx_fifo_sink_ready = basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_uart_rx_fifo_syncfifo_we = basesoc_uart_rx_fifo_sink_valid;
assign basesoc_uart_rx_fifo_fifo_in_first = basesoc_uart_rx_fifo_sink_first;
assign basesoc_uart_rx_fifo_fifo_in_last = basesoc_uart_rx_fifo_sink_last;
assign basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_uart_rx_fifo_source_valid = basesoc_uart_rx_fifo_readable;
assign basesoc_uart_rx_fifo_source_first = basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_uart_rx_fifo_source_last = basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_uart_rx_fifo_source_payload_data = basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_uart_rx_fifo_re = basesoc_uart_rx_fifo_source_ready;
assign basesoc_uart_rx_fifo_syncfifo_re = (basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_uart_rx_fifo_readable) | basesoc_uart_rx_fifo_re));
assign basesoc_uart_rx_fifo_level1 = (basesoc_uart_rx_fifo_level0 + basesoc_uart_rx_fifo_readable);
always @(*) begin
	basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart_rx_fifo_replace) begin
		basesoc_uart_rx_fifo_wrport_adr <= (basesoc_uart_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart_rx_fifo_wrport_adr <= basesoc_uart_rx_fifo_produce;
	end
end
assign basesoc_uart_rx_fifo_wrport_dat_w = basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_uart_rx_fifo_wrport_we = (basesoc_uart_rx_fifo_syncfifo_we & (basesoc_uart_rx_fifo_syncfifo_writable | basesoc_uart_rx_fifo_replace));
assign basesoc_uart_rx_fifo_do_read = (basesoc_uart_rx_fifo_syncfifo_readable & basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_uart_rx_fifo_rdport_adr = basesoc_uart_rx_fifo_consume;
assign basesoc_uart_rx_fifo_syncfifo_dout = basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_uart_rx_fifo_rdport_re = basesoc_uart_rx_fifo_do_read;
assign basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_timer_zero_trigger = (basesoc_timer_value == 1'd0);
assign basesoc_timer_zero0 = basesoc_timer_zero_status;
assign basesoc_timer_zero1 = basesoc_timer_zero_pending;
always @(*) begin
	basesoc_timer_zero_clear <= 1'd0;
	if ((basesoc_timer_pending_re & basesoc_timer_pending_r)) begin
		basesoc_timer_zero_clear <= 1'd1;
	end
end
assign basesoc_timer_irq = (basesoc_timer_pending_status & basesoc_timer_enable_storage);
assign basesoc_timer_zero_status = basesoc_timer_zero_trigger;
assign crg_reset = ((~cpu_reset) | crg_rst);
assign crg_clkin = clk50;
assign sys_clk = crg_clkout_buf0;
assign sys4x_clk = crg_clkout_buf1;
assign sys4x_dqs_clk = crg_clkout_buf2;
assign idelay_clk = crg_clkout_buf3;
assign eth_clk = crg_clkout_buf4;
assign ddram_ba = a7ddrphy_pads_ba;
assign a7ddrphy_dqs_oe_delay_tappeddelayline = ((a7ddrphy_dqs_preamble | a7ddrphy_dqs_oe) | a7ddrphy_dqs_postamble);
assign a7ddrphy_dq_oe_delay_tappeddelayline = ((a7ddrphy_dqs_preamble | a7ddrphy_dq_oe) | a7ddrphy_dqs_postamble);
always @(*) begin
	a7ddrphy_dfi_p0_rddata <= 32'd0;
	a7ddrphy_dfi_p0_rddata[0] <= a7ddrphy_bitslip04[0];
	a7ddrphy_dfi_p0_rddata[16] <= a7ddrphy_bitslip04[1];
	a7ddrphy_dfi_p0_rddata[1] <= a7ddrphy_bitslip14[0];
	a7ddrphy_dfi_p0_rddata[17] <= a7ddrphy_bitslip14[1];
	a7ddrphy_dfi_p0_rddata[2] <= a7ddrphy_bitslip22[0];
	a7ddrphy_dfi_p0_rddata[18] <= a7ddrphy_bitslip22[1];
	a7ddrphy_dfi_p0_rddata[3] <= a7ddrphy_bitslip32[0];
	a7ddrphy_dfi_p0_rddata[19] <= a7ddrphy_bitslip32[1];
	a7ddrphy_dfi_p0_rddata[4] <= a7ddrphy_bitslip42[0];
	a7ddrphy_dfi_p0_rddata[20] <= a7ddrphy_bitslip42[1];
	a7ddrphy_dfi_p0_rddata[5] <= a7ddrphy_bitslip52[0];
	a7ddrphy_dfi_p0_rddata[21] <= a7ddrphy_bitslip52[1];
	a7ddrphy_dfi_p0_rddata[6] <= a7ddrphy_bitslip62[0];
	a7ddrphy_dfi_p0_rddata[22] <= a7ddrphy_bitslip62[1];
	a7ddrphy_dfi_p0_rddata[7] <= a7ddrphy_bitslip72[0];
	a7ddrphy_dfi_p0_rddata[23] <= a7ddrphy_bitslip72[1];
	a7ddrphy_dfi_p0_rddata[8] <= a7ddrphy_bitslip82[0];
	a7ddrphy_dfi_p0_rddata[24] <= a7ddrphy_bitslip82[1];
	a7ddrphy_dfi_p0_rddata[9] <= a7ddrphy_bitslip92[0];
	a7ddrphy_dfi_p0_rddata[25] <= a7ddrphy_bitslip92[1];
	a7ddrphy_dfi_p0_rddata[10] <= a7ddrphy_bitslip102[0];
	a7ddrphy_dfi_p0_rddata[26] <= a7ddrphy_bitslip102[1];
	a7ddrphy_dfi_p0_rddata[11] <= a7ddrphy_bitslip112[0];
	a7ddrphy_dfi_p0_rddata[27] <= a7ddrphy_bitslip112[1];
	a7ddrphy_dfi_p0_rddata[12] <= a7ddrphy_bitslip122[0];
	a7ddrphy_dfi_p0_rddata[28] <= a7ddrphy_bitslip122[1];
	a7ddrphy_dfi_p0_rddata[13] <= a7ddrphy_bitslip132[0];
	a7ddrphy_dfi_p0_rddata[29] <= a7ddrphy_bitslip132[1];
	a7ddrphy_dfi_p0_rddata[14] <= a7ddrphy_bitslip142[0];
	a7ddrphy_dfi_p0_rddata[30] <= a7ddrphy_bitslip142[1];
	a7ddrphy_dfi_p0_rddata[15] <= a7ddrphy_bitslip152[0];
	a7ddrphy_dfi_p0_rddata[31] <= a7ddrphy_bitslip152[1];
end
always @(*) begin
	a7ddrphy_dfi_p1_rddata <= 32'd0;
	a7ddrphy_dfi_p1_rddata[0] <= a7ddrphy_bitslip04[2];
	a7ddrphy_dfi_p1_rddata[16] <= a7ddrphy_bitslip04[3];
	a7ddrphy_dfi_p1_rddata[1] <= a7ddrphy_bitslip14[2];
	a7ddrphy_dfi_p1_rddata[17] <= a7ddrphy_bitslip14[3];
	a7ddrphy_dfi_p1_rddata[2] <= a7ddrphy_bitslip22[2];
	a7ddrphy_dfi_p1_rddata[18] <= a7ddrphy_bitslip22[3];
	a7ddrphy_dfi_p1_rddata[3] <= a7ddrphy_bitslip32[2];
	a7ddrphy_dfi_p1_rddata[19] <= a7ddrphy_bitslip32[3];
	a7ddrphy_dfi_p1_rddata[4] <= a7ddrphy_bitslip42[2];
	a7ddrphy_dfi_p1_rddata[20] <= a7ddrphy_bitslip42[3];
	a7ddrphy_dfi_p1_rddata[5] <= a7ddrphy_bitslip52[2];
	a7ddrphy_dfi_p1_rddata[21] <= a7ddrphy_bitslip52[3];
	a7ddrphy_dfi_p1_rddata[6] <= a7ddrphy_bitslip62[2];
	a7ddrphy_dfi_p1_rddata[22] <= a7ddrphy_bitslip62[3];
	a7ddrphy_dfi_p1_rddata[7] <= a7ddrphy_bitslip72[2];
	a7ddrphy_dfi_p1_rddata[23] <= a7ddrphy_bitslip72[3];
	a7ddrphy_dfi_p1_rddata[8] <= a7ddrphy_bitslip82[2];
	a7ddrphy_dfi_p1_rddata[24] <= a7ddrphy_bitslip82[3];
	a7ddrphy_dfi_p1_rddata[9] <= a7ddrphy_bitslip92[2];
	a7ddrphy_dfi_p1_rddata[25] <= a7ddrphy_bitslip92[3];
	a7ddrphy_dfi_p1_rddata[10] <= a7ddrphy_bitslip102[2];
	a7ddrphy_dfi_p1_rddata[26] <= a7ddrphy_bitslip102[3];
	a7ddrphy_dfi_p1_rddata[11] <= a7ddrphy_bitslip112[2];
	a7ddrphy_dfi_p1_rddata[27] <= a7ddrphy_bitslip112[3];
	a7ddrphy_dfi_p1_rddata[12] <= a7ddrphy_bitslip122[2];
	a7ddrphy_dfi_p1_rddata[28] <= a7ddrphy_bitslip122[3];
	a7ddrphy_dfi_p1_rddata[13] <= a7ddrphy_bitslip132[2];
	a7ddrphy_dfi_p1_rddata[29] <= a7ddrphy_bitslip132[3];
	a7ddrphy_dfi_p1_rddata[14] <= a7ddrphy_bitslip142[2];
	a7ddrphy_dfi_p1_rddata[30] <= a7ddrphy_bitslip142[3];
	a7ddrphy_dfi_p1_rddata[15] <= a7ddrphy_bitslip152[2];
	a7ddrphy_dfi_p1_rddata[31] <= a7ddrphy_bitslip152[3];
end
always @(*) begin
	a7ddrphy_dfi_p2_rddata <= 32'd0;
	a7ddrphy_dfi_p2_rddata[0] <= a7ddrphy_bitslip04[4];
	a7ddrphy_dfi_p2_rddata[16] <= a7ddrphy_bitslip04[5];
	a7ddrphy_dfi_p2_rddata[1] <= a7ddrphy_bitslip14[4];
	a7ddrphy_dfi_p2_rddata[17] <= a7ddrphy_bitslip14[5];
	a7ddrphy_dfi_p2_rddata[2] <= a7ddrphy_bitslip22[4];
	a7ddrphy_dfi_p2_rddata[18] <= a7ddrphy_bitslip22[5];
	a7ddrphy_dfi_p2_rddata[3] <= a7ddrphy_bitslip32[4];
	a7ddrphy_dfi_p2_rddata[19] <= a7ddrphy_bitslip32[5];
	a7ddrphy_dfi_p2_rddata[4] <= a7ddrphy_bitslip42[4];
	a7ddrphy_dfi_p2_rddata[20] <= a7ddrphy_bitslip42[5];
	a7ddrphy_dfi_p2_rddata[5] <= a7ddrphy_bitslip52[4];
	a7ddrphy_dfi_p2_rddata[21] <= a7ddrphy_bitslip52[5];
	a7ddrphy_dfi_p2_rddata[6] <= a7ddrphy_bitslip62[4];
	a7ddrphy_dfi_p2_rddata[22] <= a7ddrphy_bitslip62[5];
	a7ddrphy_dfi_p2_rddata[7] <= a7ddrphy_bitslip72[4];
	a7ddrphy_dfi_p2_rddata[23] <= a7ddrphy_bitslip72[5];
	a7ddrphy_dfi_p2_rddata[8] <= a7ddrphy_bitslip82[4];
	a7ddrphy_dfi_p2_rddata[24] <= a7ddrphy_bitslip82[5];
	a7ddrphy_dfi_p2_rddata[9] <= a7ddrphy_bitslip92[4];
	a7ddrphy_dfi_p2_rddata[25] <= a7ddrphy_bitslip92[5];
	a7ddrphy_dfi_p2_rddata[10] <= a7ddrphy_bitslip102[4];
	a7ddrphy_dfi_p2_rddata[26] <= a7ddrphy_bitslip102[5];
	a7ddrphy_dfi_p2_rddata[11] <= a7ddrphy_bitslip112[4];
	a7ddrphy_dfi_p2_rddata[27] <= a7ddrphy_bitslip112[5];
	a7ddrphy_dfi_p2_rddata[12] <= a7ddrphy_bitslip122[4];
	a7ddrphy_dfi_p2_rddata[28] <= a7ddrphy_bitslip122[5];
	a7ddrphy_dfi_p2_rddata[13] <= a7ddrphy_bitslip132[4];
	a7ddrphy_dfi_p2_rddata[29] <= a7ddrphy_bitslip132[5];
	a7ddrphy_dfi_p2_rddata[14] <= a7ddrphy_bitslip142[4];
	a7ddrphy_dfi_p2_rddata[30] <= a7ddrphy_bitslip142[5];
	a7ddrphy_dfi_p2_rddata[15] <= a7ddrphy_bitslip152[4];
	a7ddrphy_dfi_p2_rddata[31] <= a7ddrphy_bitslip152[5];
end
always @(*) begin
	a7ddrphy_dfi_p3_rddata <= 32'd0;
	a7ddrphy_dfi_p3_rddata[0] <= a7ddrphy_bitslip04[6];
	a7ddrphy_dfi_p3_rddata[16] <= a7ddrphy_bitslip04[7];
	a7ddrphy_dfi_p3_rddata[1] <= a7ddrphy_bitslip14[6];
	a7ddrphy_dfi_p3_rddata[17] <= a7ddrphy_bitslip14[7];
	a7ddrphy_dfi_p3_rddata[2] <= a7ddrphy_bitslip22[6];
	a7ddrphy_dfi_p3_rddata[18] <= a7ddrphy_bitslip22[7];
	a7ddrphy_dfi_p3_rddata[3] <= a7ddrphy_bitslip32[6];
	a7ddrphy_dfi_p3_rddata[19] <= a7ddrphy_bitslip32[7];
	a7ddrphy_dfi_p3_rddata[4] <= a7ddrphy_bitslip42[6];
	a7ddrphy_dfi_p3_rddata[20] <= a7ddrphy_bitslip42[7];
	a7ddrphy_dfi_p3_rddata[5] <= a7ddrphy_bitslip52[6];
	a7ddrphy_dfi_p3_rddata[21] <= a7ddrphy_bitslip52[7];
	a7ddrphy_dfi_p3_rddata[6] <= a7ddrphy_bitslip62[6];
	a7ddrphy_dfi_p3_rddata[22] <= a7ddrphy_bitslip62[7];
	a7ddrphy_dfi_p3_rddata[7] <= a7ddrphy_bitslip72[6];
	a7ddrphy_dfi_p3_rddata[23] <= a7ddrphy_bitslip72[7];
	a7ddrphy_dfi_p3_rddata[8] <= a7ddrphy_bitslip82[6];
	a7ddrphy_dfi_p3_rddata[24] <= a7ddrphy_bitslip82[7];
	a7ddrphy_dfi_p3_rddata[9] <= a7ddrphy_bitslip92[6];
	a7ddrphy_dfi_p3_rddata[25] <= a7ddrphy_bitslip92[7];
	a7ddrphy_dfi_p3_rddata[10] <= a7ddrphy_bitslip102[6];
	a7ddrphy_dfi_p3_rddata[26] <= a7ddrphy_bitslip102[7];
	a7ddrphy_dfi_p3_rddata[11] <= a7ddrphy_bitslip112[6];
	a7ddrphy_dfi_p3_rddata[27] <= a7ddrphy_bitslip112[7];
	a7ddrphy_dfi_p3_rddata[12] <= a7ddrphy_bitslip122[6];
	a7ddrphy_dfi_p3_rddata[28] <= a7ddrphy_bitslip122[7];
	a7ddrphy_dfi_p3_rddata[13] <= a7ddrphy_bitslip132[6];
	a7ddrphy_dfi_p3_rddata[29] <= a7ddrphy_bitslip132[7];
	a7ddrphy_dfi_p3_rddata[14] <= a7ddrphy_bitslip142[6];
	a7ddrphy_dfi_p3_rddata[30] <= a7ddrphy_bitslip142[7];
	a7ddrphy_dfi_p3_rddata[15] <= a7ddrphy_bitslip152[6];
	a7ddrphy_dfi_p3_rddata[31] <= a7ddrphy_bitslip152[7];
end
assign a7ddrphy_dfi_p0_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p1_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p2_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p3_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dq_oe = a7ddrphy_wrdata_en_tappeddelayline1;
always @(*) begin
	a7ddrphy_dqs_oe <= 1'd0;
	if (a7ddrphy_wlevel_en_storage) begin
		a7ddrphy_dqs_oe <= 1'd1;
	end else begin
		a7ddrphy_dqs_oe <= a7ddrphy_dq_oe;
	end
end
assign a7ddrphy_dqs_preamble = (a7ddrphy_wrdata_en_tappeddelayline0 & (~a7ddrphy_wrdata_en_tappeddelayline1));
assign a7ddrphy_dqs_postamble = (a7ddrphy_wrdata_en_tappeddelayline2 & (~a7ddrphy_wrdata_en_tappeddelayline1));
always @(*) begin
	a7ddrphy_dqspattern_o0 <= 8'd0;
	a7ddrphy_dqspattern_o0 <= 7'd85;
	if (a7ddrphy_dqspattern0) begin
		a7ddrphy_dqspattern_o0 <= 5'd21;
	end
	if (a7ddrphy_dqspattern1) begin
		a7ddrphy_dqspattern_o0 <= 7'd84;
	end
	if (a7ddrphy_wlevel_en_storage) begin
		a7ddrphy_dqspattern_o0 <= 1'd0;
		if (a7ddrphy_wlevel_strobe_re) begin
			a7ddrphy_dqspattern_o0 <= 1'd1;
		end
	end
end
always @(*) begin
	a7ddrphy_bitslip00 <= 8'd0;
	case (a7ddrphy_bitslip0_value0)
		1'd0: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip10 <= 8'd0;
	case (a7ddrphy_bitslip1_value0)
		1'd0: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip01 <= 8'd0;
	case (a7ddrphy_bitslip0_value1)
		1'd0: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip11 <= 8'd0;
	case (a7ddrphy_bitslip1_value1)
		1'd0: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip02 <= 8'd0;
	case (a7ddrphy_bitslip0_value2)
		1'd0: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip04 <= 8'd0;
	case (a7ddrphy_bitslip0_value3)
		1'd0: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip12 <= 8'd0;
	case (a7ddrphy_bitslip1_value2)
		1'd0: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip14 <= 8'd0;
	case (a7ddrphy_bitslip1_value3)
		1'd0: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip20 <= 8'd0;
	case (a7ddrphy_bitslip2_value0)
		1'd0: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip22 <= 8'd0;
	case (a7ddrphy_bitslip2_value1)
		1'd0: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip30 <= 8'd0;
	case (a7ddrphy_bitslip3_value0)
		1'd0: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip32 <= 8'd0;
	case (a7ddrphy_bitslip3_value1)
		1'd0: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip40 <= 8'd0;
	case (a7ddrphy_bitslip4_value0)
		1'd0: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip42 <= 8'd0;
	case (a7ddrphy_bitslip4_value1)
		1'd0: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip50 <= 8'd0;
	case (a7ddrphy_bitslip5_value0)
		1'd0: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip52 <= 8'd0;
	case (a7ddrphy_bitslip5_value1)
		1'd0: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip60 <= 8'd0;
	case (a7ddrphy_bitslip6_value0)
		1'd0: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip62 <= 8'd0;
	case (a7ddrphy_bitslip6_value1)
		1'd0: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip70 <= 8'd0;
	case (a7ddrphy_bitslip7_value0)
		1'd0: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip72 <= 8'd0;
	case (a7ddrphy_bitslip7_value1)
		1'd0: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip80 <= 8'd0;
	case (a7ddrphy_bitslip8_value0)
		1'd0: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip82 <= 8'd0;
	case (a7ddrphy_bitslip8_value1)
		1'd0: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip90 <= 8'd0;
	case (a7ddrphy_bitslip9_value0)
		1'd0: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip92 <= 8'd0;
	case (a7ddrphy_bitslip9_value1)
		1'd0: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip100 <= 8'd0;
	case (a7ddrphy_bitslip10_value0)
		1'd0: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip102 <= 8'd0;
	case (a7ddrphy_bitslip10_value1)
		1'd0: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip110 <= 8'd0;
	case (a7ddrphy_bitslip11_value0)
		1'd0: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip112 <= 8'd0;
	case (a7ddrphy_bitslip11_value1)
		1'd0: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip120 <= 8'd0;
	case (a7ddrphy_bitslip12_value0)
		1'd0: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip122 <= 8'd0;
	case (a7ddrphy_bitslip12_value1)
		1'd0: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip130 <= 8'd0;
	case (a7ddrphy_bitslip13_value0)
		1'd0: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip132 <= 8'd0;
	case (a7ddrphy_bitslip13_value1)
		1'd0: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip140 <= 8'd0;
	case (a7ddrphy_bitslip14_value0)
		1'd0: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip142 <= 8'd0;
	case (a7ddrphy_bitslip14_value1)
		1'd0: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip150 <= 8'd0;
	case (a7ddrphy_bitslip15_value0)
		1'd0: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip152 <= 8'd0;
	case (a7ddrphy_bitslip15_value1)
		1'd0: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[15:8];
		end
	endcase
end
assign a7ddrphy_dfi_p0_address = basesoc_sdram_master_p0_address;
assign a7ddrphy_dfi_p0_bank = basesoc_sdram_master_p0_bank;
assign a7ddrphy_dfi_p0_cas_n = basesoc_sdram_master_p0_cas_n;
assign a7ddrphy_dfi_p0_cs_n = basesoc_sdram_master_p0_cs_n;
assign a7ddrphy_dfi_p0_ras_n = basesoc_sdram_master_p0_ras_n;
assign a7ddrphy_dfi_p0_we_n = basesoc_sdram_master_p0_we_n;
assign a7ddrphy_dfi_p0_cke = basesoc_sdram_master_p0_cke;
assign a7ddrphy_dfi_p0_odt = basesoc_sdram_master_p0_odt;
assign a7ddrphy_dfi_p0_reset_n = basesoc_sdram_master_p0_reset_n;
assign a7ddrphy_dfi_p0_act_n = basesoc_sdram_master_p0_act_n;
assign a7ddrphy_dfi_p0_wrdata = basesoc_sdram_master_p0_wrdata;
assign a7ddrphy_dfi_p0_wrdata_en = basesoc_sdram_master_p0_wrdata_en;
assign a7ddrphy_dfi_p0_wrdata_mask = basesoc_sdram_master_p0_wrdata_mask;
assign a7ddrphy_dfi_p0_rddata_en = basesoc_sdram_master_p0_rddata_en;
assign basesoc_sdram_master_p0_rddata = a7ddrphy_dfi_p0_rddata;
assign basesoc_sdram_master_p0_rddata_valid = a7ddrphy_dfi_p0_rddata_valid;
assign a7ddrphy_dfi_p1_address = basesoc_sdram_master_p1_address;
assign a7ddrphy_dfi_p1_bank = basesoc_sdram_master_p1_bank;
assign a7ddrphy_dfi_p1_cas_n = basesoc_sdram_master_p1_cas_n;
assign a7ddrphy_dfi_p1_cs_n = basesoc_sdram_master_p1_cs_n;
assign a7ddrphy_dfi_p1_ras_n = basesoc_sdram_master_p1_ras_n;
assign a7ddrphy_dfi_p1_we_n = basesoc_sdram_master_p1_we_n;
assign a7ddrphy_dfi_p1_cke = basesoc_sdram_master_p1_cke;
assign a7ddrphy_dfi_p1_odt = basesoc_sdram_master_p1_odt;
assign a7ddrphy_dfi_p1_reset_n = basesoc_sdram_master_p1_reset_n;
assign a7ddrphy_dfi_p1_act_n = basesoc_sdram_master_p1_act_n;
assign a7ddrphy_dfi_p1_wrdata = basesoc_sdram_master_p1_wrdata;
assign a7ddrphy_dfi_p1_wrdata_en = basesoc_sdram_master_p1_wrdata_en;
assign a7ddrphy_dfi_p1_wrdata_mask = basesoc_sdram_master_p1_wrdata_mask;
assign a7ddrphy_dfi_p1_rddata_en = basesoc_sdram_master_p1_rddata_en;
assign basesoc_sdram_master_p1_rddata = a7ddrphy_dfi_p1_rddata;
assign basesoc_sdram_master_p1_rddata_valid = a7ddrphy_dfi_p1_rddata_valid;
assign a7ddrphy_dfi_p2_address = basesoc_sdram_master_p2_address;
assign a7ddrphy_dfi_p2_bank = basesoc_sdram_master_p2_bank;
assign a7ddrphy_dfi_p2_cas_n = basesoc_sdram_master_p2_cas_n;
assign a7ddrphy_dfi_p2_cs_n = basesoc_sdram_master_p2_cs_n;
assign a7ddrphy_dfi_p2_ras_n = basesoc_sdram_master_p2_ras_n;
assign a7ddrphy_dfi_p2_we_n = basesoc_sdram_master_p2_we_n;
assign a7ddrphy_dfi_p2_cke = basesoc_sdram_master_p2_cke;
assign a7ddrphy_dfi_p2_odt = basesoc_sdram_master_p2_odt;
assign a7ddrphy_dfi_p2_reset_n = basesoc_sdram_master_p2_reset_n;
assign a7ddrphy_dfi_p2_act_n = basesoc_sdram_master_p2_act_n;
assign a7ddrphy_dfi_p2_wrdata = basesoc_sdram_master_p2_wrdata;
assign a7ddrphy_dfi_p2_wrdata_en = basesoc_sdram_master_p2_wrdata_en;
assign a7ddrphy_dfi_p2_wrdata_mask = basesoc_sdram_master_p2_wrdata_mask;
assign a7ddrphy_dfi_p2_rddata_en = basesoc_sdram_master_p2_rddata_en;
assign basesoc_sdram_master_p2_rddata = a7ddrphy_dfi_p2_rddata;
assign basesoc_sdram_master_p2_rddata_valid = a7ddrphy_dfi_p2_rddata_valid;
assign a7ddrphy_dfi_p3_address = basesoc_sdram_master_p3_address;
assign a7ddrphy_dfi_p3_bank = basesoc_sdram_master_p3_bank;
assign a7ddrphy_dfi_p3_cas_n = basesoc_sdram_master_p3_cas_n;
assign a7ddrphy_dfi_p3_cs_n = basesoc_sdram_master_p3_cs_n;
assign a7ddrphy_dfi_p3_ras_n = basesoc_sdram_master_p3_ras_n;
assign a7ddrphy_dfi_p3_we_n = basesoc_sdram_master_p3_we_n;
assign a7ddrphy_dfi_p3_cke = basesoc_sdram_master_p3_cke;
assign a7ddrphy_dfi_p3_odt = basesoc_sdram_master_p3_odt;
assign a7ddrphy_dfi_p3_reset_n = basesoc_sdram_master_p3_reset_n;
assign a7ddrphy_dfi_p3_act_n = basesoc_sdram_master_p3_act_n;
assign a7ddrphy_dfi_p3_wrdata = basesoc_sdram_master_p3_wrdata;
assign a7ddrphy_dfi_p3_wrdata_en = basesoc_sdram_master_p3_wrdata_en;
assign a7ddrphy_dfi_p3_wrdata_mask = basesoc_sdram_master_p3_wrdata_mask;
assign a7ddrphy_dfi_p3_rddata_en = basesoc_sdram_master_p3_rddata_en;
assign basesoc_sdram_master_p3_rddata = a7ddrphy_dfi_p3_rddata;
assign basesoc_sdram_master_p3_rddata_valid = a7ddrphy_dfi_p3_rddata_valid;
assign basesoc_sdram_slave_p0_address = basesoc_sdram_dfi_p0_address;
assign basesoc_sdram_slave_p0_bank = basesoc_sdram_dfi_p0_bank;
assign basesoc_sdram_slave_p0_cas_n = basesoc_sdram_dfi_p0_cas_n;
assign basesoc_sdram_slave_p0_cs_n = basesoc_sdram_dfi_p0_cs_n;
assign basesoc_sdram_slave_p0_ras_n = basesoc_sdram_dfi_p0_ras_n;
assign basesoc_sdram_slave_p0_we_n = basesoc_sdram_dfi_p0_we_n;
assign basesoc_sdram_slave_p0_cke = basesoc_sdram_dfi_p0_cke;
assign basesoc_sdram_slave_p0_odt = basesoc_sdram_dfi_p0_odt;
assign basesoc_sdram_slave_p0_reset_n = basesoc_sdram_dfi_p0_reset_n;
assign basesoc_sdram_slave_p0_act_n = basesoc_sdram_dfi_p0_act_n;
assign basesoc_sdram_slave_p0_wrdata = basesoc_sdram_dfi_p0_wrdata;
assign basesoc_sdram_slave_p0_wrdata_en = basesoc_sdram_dfi_p0_wrdata_en;
assign basesoc_sdram_slave_p0_wrdata_mask = basesoc_sdram_dfi_p0_wrdata_mask;
assign basesoc_sdram_slave_p0_rddata_en = basesoc_sdram_dfi_p0_rddata_en;
assign basesoc_sdram_dfi_p0_rddata = basesoc_sdram_slave_p0_rddata;
assign basesoc_sdram_dfi_p0_rddata_valid = basesoc_sdram_slave_p0_rddata_valid;
assign basesoc_sdram_slave_p1_address = basesoc_sdram_dfi_p1_address;
assign basesoc_sdram_slave_p1_bank = basesoc_sdram_dfi_p1_bank;
assign basesoc_sdram_slave_p1_cas_n = basesoc_sdram_dfi_p1_cas_n;
assign basesoc_sdram_slave_p1_cs_n = basesoc_sdram_dfi_p1_cs_n;
assign basesoc_sdram_slave_p1_ras_n = basesoc_sdram_dfi_p1_ras_n;
assign basesoc_sdram_slave_p1_we_n = basesoc_sdram_dfi_p1_we_n;
assign basesoc_sdram_slave_p1_cke = basesoc_sdram_dfi_p1_cke;
assign basesoc_sdram_slave_p1_odt = basesoc_sdram_dfi_p1_odt;
assign basesoc_sdram_slave_p1_reset_n = basesoc_sdram_dfi_p1_reset_n;
assign basesoc_sdram_slave_p1_act_n = basesoc_sdram_dfi_p1_act_n;
assign basesoc_sdram_slave_p1_wrdata = basesoc_sdram_dfi_p1_wrdata;
assign basesoc_sdram_slave_p1_wrdata_en = basesoc_sdram_dfi_p1_wrdata_en;
assign basesoc_sdram_slave_p1_wrdata_mask = basesoc_sdram_dfi_p1_wrdata_mask;
assign basesoc_sdram_slave_p1_rddata_en = basesoc_sdram_dfi_p1_rddata_en;
assign basesoc_sdram_dfi_p1_rddata = basesoc_sdram_slave_p1_rddata;
assign basesoc_sdram_dfi_p1_rddata_valid = basesoc_sdram_slave_p1_rddata_valid;
assign basesoc_sdram_slave_p2_address = basesoc_sdram_dfi_p2_address;
assign basesoc_sdram_slave_p2_bank = basesoc_sdram_dfi_p2_bank;
assign basesoc_sdram_slave_p2_cas_n = basesoc_sdram_dfi_p2_cas_n;
assign basesoc_sdram_slave_p2_cs_n = basesoc_sdram_dfi_p2_cs_n;
assign basesoc_sdram_slave_p2_ras_n = basesoc_sdram_dfi_p2_ras_n;
assign basesoc_sdram_slave_p2_we_n = basesoc_sdram_dfi_p2_we_n;
assign basesoc_sdram_slave_p2_cke = basesoc_sdram_dfi_p2_cke;
assign basesoc_sdram_slave_p2_odt = basesoc_sdram_dfi_p2_odt;
assign basesoc_sdram_slave_p2_reset_n = basesoc_sdram_dfi_p2_reset_n;
assign basesoc_sdram_slave_p2_act_n = basesoc_sdram_dfi_p2_act_n;
assign basesoc_sdram_slave_p2_wrdata = basesoc_sdram_dfi_p2_wrdata;
assign basesoc_sdram_slave_p2_wrdata_en = basesoc_sdram_dfi_p2_wrdata_en;
assign basesoc_sdram_slave_p2_wrdata_mask = basesoc_sdram_dfi_p2_wrdata_mask;
assign basesoc_sdram_slave_p2_rddata_en = basesoc_sdram_dfi_p2_rddata_en;
assign basesoc_sdram_dfi_p2_rddata = basesoc_sdram_slave_p2_rddata;
assign basesoc_sdram_dfi_p2_rddata_valid = basesoc_sdram_slave_p2_rddata_valid;
assign basesoc_sdram_slave_p3_address = basesoc_sdram_dfi_p3_address;
assign basesoc_sdram_slave_p3_bank = basesoc_sdram_dfi_p3_bank;
assign basesoc_sdram_slave_p3_cas_n = basesoc_sdram_dfi_p3_cas_n;
assign basesoc_sdram_slave_p3_cs_n = basesoc_sdram_dfi_p3_cs_n;
assign basesoc_sdram_slave_p3_ras_n = basesoc_sdram_dfi_p3_ras_n;
assign basesoc_sdram_slave_p3_we_n = basesoc_sdram_dfi_p3_we_n;
assign basesoc_sdram_slave_p3_cke = basesoc_sdram_dfi_p3_cke;
assign basesoc_sdram_slave_p3_odt = basesoc_sdram_dfi_p3_odt;
assign basesoc_sdram_slave_p3_reset_n = basesoc_sdram_dfi_p3_reset_n;
assign basesoc_sdram_slave_p3_act_n = basesoc_sdram_dfi_p3_act_n;
assign basesoc_sdram_slave_p3_wrdata = basesoc_sdram_dfi_p3_wrdata;
assign basesoc_sdram_slave_p3_wrdata_en = basesoc_sdram_dfi_p3_wrdata_en;
assign basesoc_sdram_slave_p3_wrdata_mask = basesoc_sdram_dfi_p3_wrdata_mask;
assign basesoc_sdram_slave_p3_rddata_en = basesoc_sdram_dfi_p3_rddata_en;
assign basesoc_sdram_dfi_p3_rddata = basesoc_sdram_slave_p3_rddata;
assign basesoc_sdram_dfi_p3_rddata_valid = basesoc_sdram_slave_p3_rddata_valid;
always @(*) begin
	basesoc_sdram_master_p0_wrdata <= 32'd0;
	basesoc_sdram_inti_p1_rddata <= 32'd0;
	basesoc_sdram_master_p0_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p1_rddata_valid <= 1'd0;
	basesoc_sdram_master_p0_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p0_rddata_en <= 1'd0;
	basesoc_sdram_master_p1_address <= 14'd0;
	basesoc_sdram_master_p1_bank <= 3'd0;
	basesoc_sdram_master_p1_cas_n <= 1'd1;
	basesoc_sdram_master_p1_cs_n <= 1'd1;
	basesoc_sdram_master_p1_ras_n <= 1'd1;
	basesoc_sdram_master_p1_we_n <= 1'd1;
	basesoc_sdram_master_p1_cke <= 1'd0;
	basesoc_sdram_master_p1_odt <= 1'd0;
	basesoc_sdram_master_p1_reset_n <= 1'd0;
	basesoc_sdram_master_p1_act_n <= 1'd1;
	basesoc_sdram_master_p1_wrdata <= 32'd0;
	basesoc_sdram_inti_p2_rddata <= 32'd0;
	basesoc_sdram_master_p1_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p2_rddata_valid <= 1'd0;
	basesoc_sdram_master_p1_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p1_rddata_en <= 1'd0;
	basesoc_sdram_master_p2_address <= 14'd0;
	basesoc_sdram_master_p2_bank <= 3'd0;
	basesoc_sdram_master_p2_cas_n <= 1'd1;
	basesoc_sdram_master_p2_cs_n <= 1'd1;
	basesoc_sdram_master_p2_ras_n <= 1'd1;
	basesoc_sdram_master_p2_we_n <= 1'd1;
	basesoc_sdram_master_p2_cke <= 1'd0;
	basesoc_sdram_master_p2_odt <= 1'd0;
	basesoc_sdram_master_p2_reset_n <= 1'd0;
	basesoc_sdram_master_p2_act_n <= 1'd1;
	basesoc_sdram_master_p2_wrdata <= 32'd0;
	basesoc_sdram_inti_p3_rddata <= 32'd0;
	basesoc_sdram_master_p2_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p3_rddata_valid <= 1'd0;
	basesoc_sdram_master_p2_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p2_rddata_en <= 1'd0;
	basesoc_sdram_master_p3_address <= 14'd0;
	basesoc_sdram_master_p3_bank <= 3'd0;
	basesoc_sdram_master_p3_cas_n <= 1'd1;
	basesoc_sdram_master_p3_cs_n <= 1'd1;
	basesoc_sdram_master_p3_ras_n <= 1'd1;
	basesoc_sdram_master_p3_we_n <= 1'd1;
	basesoc_sdram_master_p3_cke <= 1'd0;
	basesoc_sdram_master_p3_odt <= 1'd0;
	basesoc_sdram_master_p3_reset_n <= 1'd0;
	basesoc_sdram_master_p3_act_n <= 1'd1;
	basesoc_sdram_master_p3_wrdata <= 32'd0;
	basesoc_sdram_master_p3_wrdata_en <= 1'd0;
	basesoc_sdram_master_p3_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p3_rddata_en <= 1'd0;
	basesoc_sdram_slave_p0_rddata <= 32'd0;
	basesoc_sdram_slave_p0_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p1_rddata <= 32'd0;
	basesoc_sdram_slave_p1_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p2_rddata <= 32'd0;
	basesoc_sdram_slave_p2_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p3_rddata <= 32'd0;
	basesoc_sdram_slave_p3_rddata_valid <= 1'd0;
	basesoc_sdram_inti_p0_rddata <= 32'd0;
	basesoc_sdram_inti_p0_rddata_valid <= 1'd0;
	basesoc_sdram_master_p0_address <= 14'd0;
	basesoc_sdram_master_p0_bank <= 3'd0;
	basesoc_sdram_master_p0_cas_n <= 1'd1;
	basesoc_sdram_master_p0_cs_n <= 1'd1;
	basesoc_sdram_master_p0_ras_n <= 1'd1;
	basesoc_sdram_master_p0_we_n <= 1'd1;
	basesoc_sdram_master_p0_cke <= 1'd0;
	basesoc_sdram_master_p0_odt <= 1'd0;
	basesoc_sdram_master_p0_reset_n <= 1'd0;
	basesoc_sdram_master_p0_act_n <= 1'd1;
	if (basesoc_sdram_sel) begin
		basesoc_sdram_master_p0_address <= basesoc_sdram_slave_p0_address;
		basesoc_sdram_master_p0_bank <= basesoc_sdram_slave_p0_bank;
		basesoc_sdram_master_p0_cas_n <= basesoc_sdram_slave_p0_cas_n;
		basesoc_sdram_master_p0_cs_n <= basesoc_sdram_slave_p0_cs_n;
		basesoc_sdram_master_p0_ras_n <= basesoc_sdram_slave_p0_ras_n;
		basesoc_sdram_master_p0_we_n <= basesoc_sdram_slave_p0_we_n;
		basesoc_sdram_master_p0_cke <= basesoc_sdram_slave_p0_cke;
		basesoc_sdram_master_p0_odt <= basesoc_sdram_slave_p0_odt;
		basesoc_sdram_master_p0_reset_n <= basesoc_sdram_slave_p0_reset_n;
		basesoc_sdram_master_p0_act_n <= basesoc_sdram_slave_p0_act_n;
		basesoc_sdram_master_p0_wrdata <= basesoc_sdram_slave_p0_wrdata;
		basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_slave_p0_wrdata_en;
		basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_slave_p0_wrdata_mask;
		basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_slave_p0_rddata_en;
		basesoc_sdram_slave_p0_rddata <= basesoc_sdram_master_p0_rddata;
		basesoc_sdram_slave_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
		basesoc_sdram_master_p1_address <= basesoc_sdram_slave_p1_address;
		basesoc_sdram_master_p1_bank <= basesoc_sdram_slave_p1_bank;
		basesoc_sdram_master_p1_cas_n <= basesoc_sdram_slave_p1_cas_n;
		basesoc_sdram_master_p1_cs_n <= basesoc_sdram_slave_p1_cs_n;
		basesoc_sdram_master_p1_ras_n <= basesoc_sdram_slave_p1_ras_n;
		basesoc_sdram_master_p1_we_n <= basesoc_sdram_slave_p1_we_n;
		basesoc_sdram_master_p1_cke <= basesoc_sdram_slave_p1_cke;
		basesoc_sdram_master_p1_odt <= basesoc_sdram_slave_p1_odt;
		basesoc_sdram_master_p1_reset_n <= basesoc_sdram_slave_p1_reset_n;
		basesoc_sdram_master_p1_act_n <= basesoc_sdram_slave_p1_act_n;
		basesoc_sdram_master_p1_wrdata <= basesoc_sdram_slave_p1_wrdata;
		basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_slave_p1_wrdata_en;
		basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_slave_p1_wrdata_mask;
		basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_slave_p1_rddata_en;
		basesoc_sdram_slave_p1_rddata <= basesoc_sdram_master_p1_rddata;
		basesoc_sdram_slave_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
		basesoc_sdram_master_p2_address <= basesoc_sdram_slave_p2_address;
		basesoc_sdram_master_p2_bank <= basesoc_sdram_slave_p2_bank;
		basesoc_sdram_master_p2_cas_n <= basesoc_sdram_slave_p2_cas_n;
		basesoc_sdram_master_p2_cs_n <= basesoc_sdram_slave_p2_cs_n;
		basesoc_sdram_master_p2_ras_n <= basesoc_sdram_slave_p2_ras_n;
		basesoc_sdram_master_p2_we_n <= basesoc_sdram_slave_p2_we_n;
		basesoc_sdram_master_p2_cke <= basesoc_sdram_slave_p2_cke;
		basesoc_sdram_master_p2_odt <= basesoc_sdram_slave_p2_odt;
		basesoc_sdram_master_p2_reset_n <= basesoc_sdram_slave_p2_reset_n;
		basesoc_sdram_master_p2_act_n <= basesoc_sdram_slave_p2_act_n;
		basesoc_sdram_master_p2_wrdata <= basesoc_sdram_slave_p2_wrdata;
		basesoc_sdram_master_p2_wrdata_en <= basesoc_sdram_slave_p2_wrdata_en;
		basesoc_sdram_master_p2_wrdata_mask <= basesoc_sdram_slave_p2_wrdata_mask;
		basesoc_sdram_master_p2_rddata_en <= basesoc_sdram_slave_p2_rddata_en;
		basesoc_sdram_slave_p2_rddata <= basesoc_sdram_master_p2_rddata;
		basesoc_sdram_slave_p2_rddata_valid <= basesoc_sdram_master_p2_rddata_valid;
		basesoc_sdram_master_p3_address <= basesoc_sdram_slave_p3_address;
		basesoc_sdram_master_p3_bank <= basesoc_sdram_slave_p3_bank;
		basesoc_sdram_master_p3_cas_n <= basesoc_sdram_slave_p3_cas_n;
		basesoc_sdram_master_p3_cs_n <= basesoc_sdram_slave_p3_cs_n;
		basesoc_sdram_master_p3_ras_n <= basesoc_sdram_slave_p3_ras_n;
		basesoc_sdram_master_p3_we_n <= basesoc_sdram_slave_p3_we_n;
		basesoc_sdram_master_p3_cke <= basesoc_sdram_slave_p3_cke;
		basesoc_sdram_master_p3_odt <= basesoc_sdram_slave_p3_odt;
		basesoc_sdram_master_p3_reset_n <= basesoc_sdram_slave_p3_reset_n;
		basesoc_sdram_master_p3_act_n <= basesoc_sdram_slave_p3_act_n;
		basesoc_sdram_master_p3_wrdata <= basesoc_sdram_slave_p3_wrdata;
		basesoc_sdram_master_p3_wrdata_en <= basesoc_sdram_slave_p3_wrdata_en;
		basesoc_sdram_master_p3_wrdata_mask <= basesoc_sdram_slave_p3_wrdata_mask;
		basesoc_sdram_master_p3_rddata_en <= basesoc_sdram_slave_p3_rddata_en;
		basesoc_sdram_slave_p3_rddata <= basesoc_sdram_master_p3_rddata;
		basesoc_sdram_slave_p3_rddata_valid <= basesoc_sdram_master_p3_rddata_valid;
	end else begin
		basesoc_sdram_master_p0_address <= basesoc_sdram_inti_p0_address;
		basesoc_sdram_master_p0_bank <= basesoc_sdram_inti_p0_bank;
		basesoc_sdram_master_p0_cas_n <= basesoc_sdram_inti_p0_cas_n;
		basesoc_sdram_master_p0_cs_n <= basesoc_sdram_inti_p0_cs_n;
		basesoc_sdram_master_p0_ras_n <= basesoc_sdram_inti_p0_ras_n;
		basesoc_sdram_master_p0_we_n <= basesoc_sdram_inti_p0_we_n;
		basesoc_sdram_master_p0_cke <= basesoc_sdram_inti_p0_cke;
		basesoc_sdram_master_p0_odt <= basesoc_sdram_inti_p0_odt;
		basesoc_sdram_master_p0_reset_n <= basesoc_sdram_inti_p0_reset_n;
		basesoc_sdram_master_p0_act_n <= basesoc_sdram_inti_p0_act_n;
		basesoc_sdram_master_p0_wrdata <= basesoc_sdram_inti_p0_wrdata;
		basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_inti_p0_wrdata_en;
		basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_inti_p0_wrdata_mask;
		basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_inti_p0_rddata_en;
		basesoc_sdram_inti_p0_rddata <= basesoc_sdram_master_p0_rddata;
		basesoc_sdram_inti_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
		basesoc_sdram_master_p1_address <= basesoc_sdram_inti_p1_address;
		basesoc_sdram_master_p1_bank <= basesoc_sdram_inti_p1_bank;
		basesoc_sdram_master_p1_cas_n <= basesoc_sdram_inti_p1_cas_n;
		basesoc_sdram_master_p1_cs_n <= basesoc_sdram_inti_p1_cs_n;
		basesoc_sdram_master_p1_ras_n <= basesoc_sdram_inti_p1_ras_n;
		basesoc_sdram_master_p1_we_n <= basesoc_sdram_inti_p1_we_n;
		basesoc_sdram_master_p1_cke <= basesoc_sdram_inti_p1_cke;
		basesoc_sdram_master_p1_odt <= basesoc_sdram_inti_p1_odt;
		basesoc_sdram_master_p1_reset_n <= basesoc_sdram_inti_p1_reset_n;
		basesoc_sdram_master_p1_act_n <= basesoc_sdram_inti_p1_act_n;
		basesoc_sdram_master_p1_wrdata <= basesoc_sdram_inti_p1_wrdata;
		basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_inti_p1_wrdata_en;
		basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_inti_p1_wrdata_mask;
		basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_inti_p1_rddata_en;
		basesoc_sdram_inti_p1_rddata <= basesoc_sdram_master_p1_rddata;
		basesoc_sdram_inti_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
		basesoc_sdram_master_p2_address <= basesoc_sdram_inti_p2_address;
		basesoc_sdram_master_p2_bank <= basesoc_sdram_inti_p2_bank;
		basesoc_sdram_master_p2_cas_n <= basesoc_sdram_inti_p2_cas_n;
		basesoc_sdram_master_p2_cs_n <= basesoc_sdram_inti_p2_cs_n;
		basesoc_sdram_master_p2_ras_n <= basesoc_sdram_inti_p2_ras_n;
		basesoc_sdram_master_p2_we_n <= basesoc_sdram_inti_p2_we_n;
		basesoc_sdram_master_p2_cke <= basesoc_sdram_inti_p2_cke;
		basesoc_sdram_master_p2_odt <= basesoc_sdram_inti_p2_odt;
		basesoc_sdram_master_p2_reset_n <= basesoc_sdram_inti_p2_reset_n;
		basesoc_sdram_master_p2_act_n <= basesoc_sdram_inti_p2_act_n;
		basesoc_sdram_master_p2_wrdata <= basesoc_sdram_inti_p2_wrdata;
		basesoc_sdram_master_p2_wrdata_en <= basesoc_sdram_inti_p2_wrdata_en;
		basesoc_sdram_master_p2_wrdata_mask <= basesoc_sdram_inti_p2_wrdata_mask;
		basesoc_sdram_master_p2_rddata_en <= basesoc_sdram_inti_p2_rddata_en;
		basesoc_sdram_inti_p2_rddata <= basesoc_sdram_master_p2_rddata;
		basesoc_sdram_inti_p2_rddata_valid <= basesoc_sdram_master_p2_rddata_valid;
		basesoc_sdram_master_p3_address <= basesoc_sdram_inti_p3_address;
		basesoc_sdram_master_p3_bank <= basesoc_sdram_inti_p3_bank;
		basesoc_sdram_master_p3_cas_n <= basesoc_sdram_inti_p3_cas_n;
		basesoc_sdram_master_p3_cs_n <= basesoc_sdram_inti_p3_cs_n;
		basesoc_sdram_master_p3_ras_n <= basesoc_sdram_inti_p3_ras_n;
		basesoc_sdram_master_p3_we_n <= basesoc_sdram_inti_p3_we_n;
		basesoc_sdram_master_p3_cke <= basesoc_sdram_inti_p3_cke;
		basesoc_sdram_master_p3_odt <= basesoc_sdram_inti_p3_odt;
		basesoc_sdram_master_p3_reset_n <= basesoc_sdram_inti_p3_reset_n;
		basesoc_sdram_master_p3_act_n <= basesoc_sdram_inti_p3_act_n;
		basesoc_sdram_master_p3_wrdata <= basesoc_sdram_inti_p3_wrdata;
		basesoc_sdram_master_p3_wrdata_en <= basesoc_sdram_inti_p3_wrdata_en;
		basesoc_sdram_master_p3_wrdata_mask <= basesoc_sdram_inti_p3_wrdata_mask;
		basesoc_sdram_master_p3_rddata_en <= basesoc_sdram_inti_p3_rddata_en;
		basesoc_sdram_inti_p3_rddata <= basesoc_sdram_master_p3_rddata;
		basesoc_sdram_inti_p3_rddata_valid <= basesoc_sdram_master_p3_rddata_valid;
	end
end
assign basesoc_sdram_inti_p0_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p1_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p2_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p3_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p0_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p1_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p2_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p3_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p0_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p1_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p2_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p3_reset_n = basesoc_sdram_reset_n;
always @(*) begin
	basesoc_sdram_inti_p0_cas_n <= 1'd1;
	basesoc_sdram_inti_p0_cs_n <= 1'd1;
	basesoc_sdram_inti_p0_ras_n <= 1'd1;
	basesoc_sdram_inti_p0_we_n <= 1'd1;
	if (basesoc_sdram_phaseinjector0_command_issue_re) begin
		basesoc_sdram_inti_p0_cs_n <= {1{(~basesoc_sdram_phaseinjector0_command_storage[0])}};
		basesoc_sdram_inti_p0_we_n <= (~basesoc_sdram_phaseinjector0_command_storage[1]);
		basesoc_sdram_inti_p0_cas_n <= (~basesoc_sdram_phaseinjector0_command_storage[2]);
		basesoc_sdram_inti_p0_ras_n <= (~basesoc_sdram_phaseinjector0_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p0_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p0_we_n <= 1'd1;
		basesoc_sdram_inti_p0_cas_n <= 1'd1;
		basesoc_sdram_inti_p0_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p0_address = basesoc_sdram_phaseinjector0_address_storage;
assign basesoc_sdram_inti_p0_bank = basesoc_sdram_phaseinjector0_baddress_storage;
assign basesoc_sdram_inti_p0_wrdata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_command_storage[4]);
assign basesoc_sdram_inti_p0_rddata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_command_storage[5]);
assign basesoc_sdram_inti_p0_wrdata = basesoc_sdram_phaseinjector0_wrdata_storage;
assign basesoc_sdram_inti_p0_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p1_cas_n <= 1'd1;
	basesoc_sdram_inti_p1_cs_n <= 1'd1;
	basesoc_sdram_inti_p1_ras_n <= 1'd1;
	basesoc_sdram_inti_p1_we_n <= 1'd1;
	if (basesoc_sdram_phaseinjector1_command_issue_re) begin
		basesoc_sdram_inti_p1_cs_n <= {1{(~basesoc_sdram_phaseinjector1_command_storage[0])}};
		basesoc_sdram_inti_p1_we_n <= (~basesoc_sdram_phaseinjector1_command_storage[1]);
		basesoc_sdram_inti_p1_cas_n <= (~basesoc_sdram_phaseinjector1_command_storage[2]);
		basesoc_sdram_inti_p1_ras_n <= (~basesoc_sdram_phaseinjector1_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p1_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p1_we_n <= 1'd1;
		basesoc_sdram_inti_p1_cas_n <= 1'd1;
		basesoc_sdram_inti_p1_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p1_address = basesoc_sdram_phaseinjector1_address_storage;
assign basesoc_sdram_inti_p1_bank = basesoc_sdram_phaseinjector1_baddress_storage;
assign basesoc_sdram_inti_p1_wrdata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_command_storage[4]);
assign basesoc_sdram_inti_p1_rddata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_command_storage[5]);
assign basesoc_sdram_inti_p1_wrdata = basesoc_sdram_phaseinjector1_wrdata_storage;
assign basesoc_sdram_inti_p1_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p2_cas_n <= 1'd1;
	basesoc_sdram_inti_p2_cs_n <= 1'd1;
	basesoc_sdram_inti_p2_ras_n <= 1'd1;
	basesoc_sdram_inti_p2_we_n <= 1'd1;
	if (basesoc_sdram_phaseinjector2_command_issue_re) begin
		basesoc_sdram_inti_p2_cs_n <= {1{(~basesoc_sdram_phaseinjector2_command_storage[0])}};
		basesoc_sdram_inti_p2_we_n <= (~basesoc_sdram_phaseinjector2_command_storage[1]);
		basesoc_sdram_inti_p2_cas_n <= (~basesoc_sdram_phaseinjector2_command_storage[2]);
		basesoc_sdram_inti_p2_ras_n <= (~basesoc_sdram_phaseinjector2_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p2_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p2_we_n <= 1'd1;
		basesoc_sdram_inti_p2_cas_n <= 1'd1;
		basesoc_sdram_inti_p2_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p2_address = basesoc_sdram_phaseinjector2_address_storage;
assign basesoc_sdram_inti_p2_bank = basesoc_sdram_phaseinjector2_baddress_storage;
assign basesoc_sdram_inti_p2_wrdata_en = (basesoc_sdram_phaseinjector2_command_issue_re & basesoc_sdram_phaseinjector2_command_storage[4]);
assign basesoc_sdram_inti_p2_rddata_en = (basesoc_sdram_phaseinjector2_command_issue_re & basesoc_sdram_phaseinjector2_command_storage[5]);
assign basesoc_sdram_inti_p2_wrdata = basesoc_sdram_phaseinjector2_wrdata_storage;
assign basesoc_sdram_inti_p2_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p3_cas_n <= 1'd1;
	basesoc_sdram_inti_p3_cs_n <= 1'd1;
	basesoc_sdram_inti_p3_ras_n <= 1'd1;
	basesoc_sdram_inti_p3_we_n <= 1'd1;
	if (basesoc_sdram_phaseinjector3_command_issue_re) begin
		basesoc_sdram_inti_p3_cs_n <= {1{(~basesoc_sdram_phaseinjector3_command_storage[0])}};
		basesoc_sdram_inti_p3_we_n <= (~basesoc_sdram_phaseinjector3_command_storage[1]);
		basesoc_sdram_inti_p3_cas_n <= (~basesoc_sdram_phaseinjector3_command_storage[2]);
		basesoc_sdram_inti_p3_ras_n <= (~basesoc_sdram_phaseinjector3_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p3_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p3_we_n <= 1'd1;
		basesoc_sdram_inti_p3_cas_n <= 1'd1;
		basesoc_sdram_inti_p3_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p3_address = basesoc_sdram_phaseinjector3_address_storage;
assign basesoc_sdram_inti_p3_bank = basesoc_sdram_phaseinjector3_baddress_storage;
assign basesoc_sdram_inti_p3_wrdata_en = (basesoc_sdram_phaseinjector3_command_issue_re & basesoc_sdram_phaseinjector3_command_storage[4]);
assign basesoc_sdram_inti_p3_rddata_en = (basesoc_sdram_phaseinjector3_command_issue_re & basesoc_sdram_phaseinjector3_command_storage[5]);
assign basesoc_sdram_inti_p3_wrdata = basesoc_sdram_phaseinjector3_wrdata_storage;
assign basesoc_sdram_inti_p3_wrdata_mask = 1'd0;
assign basesoc_sdram_bankmachine0_req_valid = basesoc_sdram_interface_bank0_valid;
assign basesoc_sdram_interface_bank0_ready = basesoc_sdram_bankmachine0_req_ready;
assign basesoc_sdram_bankmachine0_req_we = basesoc_sdram_interface_bank0_we;
assign basesoc_sdram_bankmachine0_req_addr = basesoc_sdram_interface_bank0_addr;
assign basesoc_sdram_interface_bank0_lock = basesoc_sdram_bankmachine0_req_lock;
assign basesoc_sdram_interface_bank0_wdata_ready = basesoc_sdram_bankmachine0_req_wdata_ready;
assign basesoc_sdram_interface_bank0_rdata_valid = basesoc_sdram_bankmachine0_req_rdata_valid;
assign basesoc_sdram_bankmachine1_req_valid = basesoc_sdram_interface_bank1_valid;
assign basesoc_sdram_interface_bank1_ready = basesoc_sdram_bankmachine1_req_ready;
assign basesoc_sdram_bankmachine1_req_we = basesoc_sdram_interface_bank1_we;
assign basesoc_sdram_bankmachine1_req_addr = basesoc_sdram_interface_bank1_addr;
assign basesoc_sdram_interface_bank1_lock = basesoc_sdram_bankmachine1_req_lock;
assign basesoc_sdram_interface_bank1_wdata_ready = basesoc_sdram_bankmachine1_req_wdata_ready;
assign basesoc_sdram_interface_bank1_rdata_valid = basesoc_sdram_bankmachine1_req_rdata_valid;
assign basesoc_sdram_bankmachine2_req_valid = basesoc_sdram_interface_bank2_valid;
assign basesoc_sdram_interface_bank2_ready = basesoc_sdram_bankmachine2_req_ready;
assign basesoc_sdram_bankmachine2_req_we = basesoc_sdram_interface_bank2_we;
assign basesoc_sdram_bankmachine2_req_addr = basesoc_sdram_interface_bank2_addr;
assign basesoc_sdram_interface_bank2_lock = basesoc_sdram_bankmachine2_req_lock;
assign basesoc_sdram_interface_bank2_wdata_ready = basesoc_sdram_bankmachine2_req_wdata_ready;
assign basesoc_sdram_interface_bank2_rdata_valid = basesoc_sdram_bankmachine2_req_rdata_valid;
assign basesoc_sdram_bankmachine3_req_valid = basesoc_sdram_interface_bank3_valid;
assign basesoc_sdram_interface_bank3_ready = basesoc_sdram_bankmachine3_req_ready;
assign basesoc_sdram_bankmachine3_req_we = basesoc_sdram_interface_bank3_we;
assign basesoc_sdram_bankmachine3_req_addr = basesoc_sdram_interface_bank3_addr;
assign basesoc_sdram_interface_bank3_lock = basesoc_sdram_bankmachine3_req_lock;
assign basesoc_sdram_interface_bank3_wdata_ready = basesoc_sdram_bankmachine3_req_wdata_ready;
assign basesoc_sdram_interface_bank3_rdata_valid = basesoc_sdram_bankmachine3_req_rdata_valid;
assign basesoc_sdram_bankmachine4_req_valid = basesoc_sdram_interface_bank4_valid;
assign basesoc_sdram_interface_bank4_ready = basesoc_sdram_bankmachine4_req_ready;
assign basesoc_sdram_bankmachine4_req_we = basesoc_sdram_interface_bank4_we;
assign basesoc_sdram_bankmachine4_req_addr = basesoc_sdram_interface_bank4_addr;
assign basesoc_sdram_interface_bank4_lock = basesoc_sdram_bankmachine4_req_lock;
assign basesoc_sdram_interface_bank4_wdata_ready = basesoc_sdram_bankmachine4_req_wdata_ready;
assign basesoc_sdram_interface_bank4_rdata_valid = basesoc_sdram_bankmachine4_req_rdata_valid;
assign basesoc_sdram_bankmachine5_req_valid = basesoc_sdram_interface_bank5_valid;
assign basesoc_sdram_interface_bank5_ready = basesoc_sdram_bankmachine5_req_ready;
assign basesoc_sdram_bankmachine5_req_we = basesoc_sdram_interface_bank5_we;
assign basesoc_sdram_bankmachine5_req_addr = basesoc_sdram_interface_bank5_addr;
assign basesoc_sdram_interface_bank5_lock = basesoc_sdram_bankmachine5_req_lock;
assign basesoc_sdram_interface_bank5_wdata_ready = basesoc_sdram_bankmachine5_req_wdata_ready;
assign basesoc_sdram_interface_bank5_rdata_valid = basesoc_sdram_bankmachine5_req_rdata_valid;
assign basesoc_sdram_bankmachine6_req_valid = basesoc_sdram_interface_bank6_valid;
assign basesoc_sdram_interface_bank6_ready = basesoc_sdram_bankmachine6_req_ready;
assign basesoc_sdram_bankmachine6_req_we = basesoc_sdram_interface_bank6_we;
assign basesoc_sdram_bankmachine6_req_addr = basesoc_sdram_interface_bank6_addr;
assign basesoc_sdram_interface_bank6_lock = basesoc_sdram_bankmachine6_req_lock;
assign basesoc_sdram_interface_bank6_wdata_ready = basesoc_sdram_bankmachine6_req_wdata_ready;
assign basesoc_sdram_interface_bank6_rdata_valid = basesoc_sdram_bankmachine6_req_rdata_valid;
assign basesoc_sdram_bankmachine7_req_valid = basesoc_sdram_interface_bank7_valid;
assign basesoc_sdram_interface_bank7_ready = basesoc_sdram_bankmachine7_req_ready;
assign basesoc_sdram_bankmachine7_req_we = basesoc_sdram_interface_bank7_we;
assign basesoc_sdram_bankmachine7_req_addr = basesoc_sdram_interface_bank7_addr;
assign basesoc_sdram_interface_bank7_lock = basesoc_sdram_bankmachine7_req_lock;
assign basesoc_sdram_interface_bank7_wdata_ready = basesoc_sdram_bankmachine7_req_wdata_ready;
assign basesoc_sdram_interface_bank7_rdata_valid = basesoc_sdram_bankmachine7_req_rdata_valid;
assign basesoc_sdram_timer_wait = (~basesoc_sdram_timer_done0);
assign basesoc_sdram_postponer_req_i = basesoc_sdram_timer_done0;
assign basesoc_sdram_wants_refresh = basesoc_sdram_postponer_req_o;
assign basesoc_sdram_wants_zqcs = basesoc_sdram_zqcs_timer_done0;
assign basesoc_sdram_zqcs_timer_wait = (~basesoc_sdram_zqcs_executer_done);
assign basesoc_sdram_timer_done1 = (basesoc_sdram_timer_count1 == 1'd0);
assign basesoc_sdram_timer_done0 = basesoc_sdram_timer_done1;
assign basesoc_sdram_timer_count0 = basesoc_sdram_timer_count1;
assign basesoc_sdram_sequencer_start1 = (basesoc_sdram_sequencer_start0 | (basesoc_sdram_sequencer_count != 1'd0));
assign basesoc_sdram_sequencer_done0 = (basesoc_sdram_sequencer_done1 & (basesoc_sdram_sequencer_count == 1'd0));
assign basesoc_sdram_zqcs_timer_done1 = (basesoc_sdram_zqcs_timer_count1 == 1'd0);
assign basesoc_sdram_zqcs_timer_done0 = basesoc_sdram_zqcs_timer_done1;
assign basesoc_sdram_zqcs_timer_count0 = basesoc_sdram_zqcs_timer_count1;
always @(*) begin
	basesoc_sdram_zqcs_executer_start <= 1'd0;
	basesoc_sdram_cmd_last <= 1'd0;
	basesoc_sdram_sequencer_start0 <= 1'd0;
	refresher_next_state <= 2'd0;
	basesoc_sdram_cmd_valid <= 1'd0;
	refresher_next_state <= refresher_state;
	case (refresher_state)
		1'd1: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_cmd_ready) begin
				basesoc_sdram_sequencer_start0 <= 1'd1;
				refresher_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_sequencer_done0) begin
				if (basesoc_sdram_wants_zqcs) begin
					basesoc_sdram_zqcs_executer_start <= 1'd1;
					refresher_next_state <= 2'd3;
				end else begin
					basesoc_sdram_cmd_valid <= 1'd0;
					basesoc_sdram_cmd_last <= 1'd1;
					refresher_next_state <= 1'd0;
				end
			end
		end
		2'd3: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_zqcs_executer_done) begin
				basesoc_sdram_cmd_valid <= 1'd0;
				basesoc_sdram_cmd_last <= 1'd1;
				refresher_next_state <= 1'd0;
			end
		end
		default: begin
			if (1'd1) begin
				if (basesoc_sdram_wants_refresh) begin
					refresher_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine0_req_valid;
assign basesoc_sdram_bankmachine0_req_ready = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine0_req_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine0_req_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_valid = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine0_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_source_ready = (basesoc_sdram_bankmachine0_req_wdata_ready | basesoc_sdram_bankmachine0_req_rdata_valid);
assign basesoc_sdram_bankmachine0_req_lock = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine0_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine0_row_hit = (basesoc_sdram_bankmachine0_row == basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine0_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine0_cmd_payload_a <= basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine0_cmd_payload_a <= ((basesoc_sdram_bankmachine0_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine0_twtpcon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_cmd_payload_is_write);
assign basesoc_sdram_bankmachine0_trccon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
assign basesoc_sdram_bankmachine0_trascon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
always @(*) begin
	basesoc_sdram_bankmachine0_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine0_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine0_auto_precharge <= (basesoc_sdram_bankmachine0_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din = {basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable | basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re);
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine0_cmd_buffer_source_valid) | basesoc_sdram_bankmachine0_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine0_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine0_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_valid <= 1'd0;
	bankmachine0_next_state <= 4'd0;
	basesoc_sdram_bankmachine0_row_open <= 1'd0;
	basesoc_sdram_bankmachine0_row_close <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine0_req_wdata_ready <= 1'd0;
	bankmachine0_next_state <= bankmachine0_state;
	case (bankmachine0_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
				basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine0_cmd_ready) begin
					bankmachine0_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
				bankmachine0_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine0_trccon_ready) begin
				basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine0_row_open <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine0_cmd_ready) begin
					bankmachine0_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine0_twtpcon_ready) begin
				basesoc_sdram_bankmachine0_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
			basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine0_refresh_req)) begin
				bankmachine0_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine0_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine0_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine0_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine0_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine0_refresh_req) begin
				bankmachine0_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine0_row_opened) begin
						if (basesoc_sdram_bankmachine0_row_hit) begin
							basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine0_req_wdata_ready <= basesoc_sdram_bankmachine0_cmd_ready;
								basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine0_req_rdata_valid <= basesoc_sdram_bankmachine0_cmd_ready;
								basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine0_cmd_ready & basesoc_sdram_bankmachine0_auto_precharge)) begin
								bankmachine0_next_state <= 2'd2;
							end
						end else begin
							bankmachine0_next_state <= 1'd1;
						end
					end else begin
						bankmachine0_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine1_req_valid;
assign basesoc_sdram_bankmachine1_req_ready = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine1_req_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine1_req_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_valid = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine1_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_source_ready = (basesoc_sdram_bankmachine1_req_wdata_ready | basesoc_sdram_bankmachine1_req_rdata_valid);
assign basesoc_sdram_bankmachine1_req_lock = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine1_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine1_row_hit = (basesoc_sdram_bankmachine1_row == basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine1_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine1_cmd_payload_a <= basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine1_cmd_payload_a <= ((basesoc_sdram_bankmachine1_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine1_twtpcon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_cmd_payload_is_write);
assign basesoc_sdram_bankmachine1_trccon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
assign basesoc_sdram_bankmachine1_trascon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
always @(*) begin
	basesoc_sdram_bankmachine1_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine1_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine1_auto_precharge <= (basesoc_sdram_bankmachine1_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din = {basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable | basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re);
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine1_cmd_buffer_source_valid) | basesoc_sdram_bankmachine1_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine1_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine1_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_valid <= 1'd0;
	bankmachine1_next_state <= 4'd0;
	basesoc_sdram_bankmachine1_row_open <= 1'd0;
	basesoc_sdram_bankmachine1_row_close <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine1_req_wdata_ready <= 1'd0;
	bankmachine1_next_state <= bankmachine1_state;
	case (bankmachine1_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
				basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine1_cmd_ready) begin
					bankmachine1_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
				bankmachine1_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine1_trccon_ready) begin
				basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine1_row_open <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine1_cmd_ready) begin
					bankmachine1_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine1_twtpcon_ready) begin
				basesoc_sdram_bankmachine1_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
			basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine1_refresh_req)) begin
				bankmachine1_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine1_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine1_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine1_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine1_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine1_refresh_req) begin
				bankmachine1_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine1_row_opened) begin
						if (basesoc_sdram_bankmachine1_row_hit) begin
							basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine1_req_wdata_ready <= basesoc_sdram_bankmachine1_cmd_ready;
								basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine1_req_rdata_valid <= basesoc_sdram_bankmachine1_cmd_ready;
								basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine1_cmd_ready & basesoc_sdram_bankmachine1_auto_precharge)) begin
								bankmachine1_next_state <= 2'd2;
							end
						end else begin
							bankmachine1_next_state <= 1'd1;
						end
					end else begin
						bankmachine1_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine2_req_valid;
assign basesoc_sdram_bankmachine2_req_ready = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine2_req_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine2_req_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_valid = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine2_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_source_ready = (basesoc_sdram_bankmachine2_req_wdata_ready | basesoc_sdram_bankmachine2_req_rdata_valid);
assign basesoc_sdram_bankmachine2_req_lock = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine2_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine2_row_hit = (basesoc_sdram_bankmachine2_row == basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine2_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine2_cmd_payload_a <= basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine2_cmd_payload_a <= ((basesoc_sdram_bankmachine2_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine2_twtpcon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_cmd_payload_is_write);
assign basesoc_sdram_bankmachine2_trccon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
assign basesoc_sdram_bankmachine2_trascon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
always @(*) begin
	basesoc_sdram_bankmachine2_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine2_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine2_auto_precharge <= (basesoc_sdram_bankmachine2_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din = {basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable | basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re);
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine2_cmd_buffer_source_valid) | basesoc_sdram_bankmachine2_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine2_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine2_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_valid <= 1'd0;
	bankmachine2_next_state <= 4'd0;
	basesoc_sdram_bankmachine2_row_open <= 1'd0;
	basesoc_sdram_bankmachine2_row_close <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine2_req_wdata_ready <= 1'd0;
	bankmachine2_next_state <= bankmachine2_state;
	case (bankmachine2_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
				basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine2_cmd_ready) begin
					bankmachine2_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
				bankmachine2_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine2_trccon_ready) begin
				basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine2_row_open <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine2_cmd_ready) begin
					bankmachine2_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine2_twtpcon_ready) begin
				basesoc_sdram_bankmachine2_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
			basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine2_refresh_req)) begin
				bankmachine2_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine2_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine2_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine2_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine2_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine2_refresh_req) begin
				bankmachine2_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine2_row_opened) begin
						if (basesoc_sdram_bankmachine2_row_hit) begin
							basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine2_req_wdata_ready <= basesoc_sdram_bankmachine2_cmd_ready;
								basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine2_req_rdata_valid <= basesoc_sdram_bankmachine2_cmd_ready;
								basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine2_cmd_ready & basesoc_sdram_bankmachine2_auto_precharge)) begin
								bankmachine2_next_state <= 2'd2;
							end
						end else begin
							bankmachine2_next_state <= 1'd1;
						end
					end else begin
						bankmachine2_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine3_req_valid;
assign basesoc_sdram_bankmachine3_req_ready = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine3_req_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine3_req_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_valid = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine3_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_source_ready = (basesoc_sdram_bankmachine3_req_wdata_ready | basesoc_sdram_bankmachine3_req_rdata_valid);
assign basesoc_sdram_bankmachine3_req_lock = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine3_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine3_row_hit = (basesoc_sdram_bankmachine3_row == basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine3_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine3_cmd_payload_a <= basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine3_cmd_payload_a <= ((basesoc_sdram_bankmachine3_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine3_twtpcon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_cmd_payload_is_write);
assign basesoc_sdram_bankmachine3_trccon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
assign basesoc_sdram_bankmachine3_trascon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
always @(*) begin
	basesoc_sdram_bankmachine3_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine3_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine3_auto_precharge <= (basesoc_sdram_bankmachine3_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din = {basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable | basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re);
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine3_cmd_buffer_source_valid) | basesoc_sdram_bankmachine3_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine3_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine3_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_valid <= 1'd0;
	bankmachine3_next_state <= 4'd0;
	basesoc_sdram_bankmachine3_row_open <= 1'd0;
	basesoc_sdram_bankmachine3_row_close <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine3_req_wdata_ready <= 1'd0;
	bankmachine3_next_state <= bankmachine3_state;
	case (bankmachine3_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
				basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine3_cmd_ready) begin
					bankmachine3_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
				bankmachine3_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine3_trccon_ready) begin
				basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine3_row_open <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine3_cmd_ready) begin
					bankmachine3_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine3_twtpcon_ready) begin
				basesoc_sdram_bankmachine3_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
			basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine3_refresh_req)) begin
				bankmachine3_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine3_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine3_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine3_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine3_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine3_refresh_req) begin
				bankmachine3_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine3_row_opened) begin
						if (basesoc_sdram_bankmachine3_row_hit) begin
							basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine3_req_wdata_ready <= basesoc_sdram_bankmachine3_cmd_ready;
								basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine3_req_rdata_valid <= basesoc_sdram_bankmachine3_cmd_ready;
								basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine3_cmd_ready & basesoc_sdram_bankmachine3_auto_precharge)) begin
								bankmachine3_next_state <= 2'd2;
							end
						end else begin
							bankmachine3_next_state <= 1'd1;
						end
					end else begin
						bankmachine3_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine4_req_valid;
assign basesoc_sdram_bankmachine4_req_ready = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine4_req_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine4_req_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_valid = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine4_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_source_ready = (basesoc_sdram_bankmachine4_req_wdata_ready | basesoc_sdram_bankmachine4_req_rdata_valid);
assign basesoc_sdram_bankmachine4_req_lock = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine4_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine4_row_hit = (basesoc_sdram_bankmachine4_row == basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine4_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine4_cmd_payload_a <= basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine4_cmd_payload_a <= ((basesoc_sdram_bankmachine4_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine4_twtpcon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_cmd_payload_is_write);
assign basesoc_sdram_bankmachine4_trccon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
assign basesoc_sdram_bankmachine4_trascon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
always @(*) begin
	basesoc_sdram_bankmachine4_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine4_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine4_auto_precharge <= (basesoc_sdram_bankmachine4_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din = {basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable | basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re);
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine4_cmd_buffer_source_valid) | basesoc_sdram_bankmachine4_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine4_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine4_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_valid <= 1'd0;
	bankmachine4_next_state <= 4'd0;
	basesoc_sdram_bankmachine4_row_open <= 1'd0;
	basesoc_sdram_bankmachine4_row_close <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine4_req_wdata_ready <= 1'd0;
	bankmachine4_next_state <= bankmachine4_state;
	case (bankmachine4_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
				basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine4_cmd_ready) begin
					bankmachine4_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
				bankmachine4_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine4_trccon_ready) begin
				basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine4_row_open <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine4_cmd_ready) begin
					bankmachine4_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine4_twtpcon_ready) begin
				basesoc_sdram_bankmachine4_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
			basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine4_refresh_req)) begin
				bankmachine4_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine4_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine4_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine4_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine4_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine4_refresh_req) begin
				bankmachine4_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine4_row_opened) begin
						if (basesoc_sdram_bankmachine4_row_hit) begin
							basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine4_req_wdata_ready <= basesoc_sdram_bankmachine4_cmd_ready;
								basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine4_req_rdata_valid <= basesoc_sdram_bankmachine4_cmd_ready;
								basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine4_cmd_ready & basesoc_sdram_bankmachine4_auto_precharge)) begin
								bankmachine4_next_state <= 2'd2;
							end
						end else begin
							bankmachine4_next_state <= 1'd1;
						end
					end else begin
						bankmachine4_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine5_req_valid;
assign basesoc_sdram_bankmachine5_req_ready = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine5_req_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine5_req_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_valid = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine5_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_source_ready = (basesoc_sdram_bankmachine5_req_wdata_ready | basesoc_sdram_bankmachine5_req_rdata_valid);
assign basesoc_sdram_bankmachine5_req_lock = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine5_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine5_row_hit = (basesoc_sdram_bankmachine5_row == basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine5_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine5_cmd_payload_a <= basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine5_cmd_payload_a <= ((basesoc_sdram_bankmachine5_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine5_twtpcon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_cmd_payload_is_write);
assign basesoc_sdram_bankmachine5_trccon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
assign basesoc_sdram_bankmachine5_trascon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
always @(*) begin
	basesoc_sdram_bankmachine5_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine5_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine5_auto_precharge <= (basesoc_sdram_bankmachine5_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din = {basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable | basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re);
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine5_cmd_buffer_source_valid) | basesoc_sdram_bankmachine5_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine5_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine5_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_valid <= 1'd0;
	bankmachine5_next_state <= 4'd0;
	basesoc_sdram_bankmachine5_row_open <= 1'd0;
	basesoc_sdram_bankmachine5_row_close <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine5_req_wdata_ready <= 1'd0;
	bankmachine5_next_state <= bankmachine5_state;
	case (bankmachine5_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
				basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine5_cmd_ready) begin
					bankmachine5_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
				bankmachine5_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine5_trccon_ready) begin
				basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine5_row_open <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine5_cmd_ready) begin
					bankmachine5_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine5_twtpcon_ready) begin
				basesoc_sdram_bankmachine5_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
			basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine5_refresh_req)) begin
				bankmachine5_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine5_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine5_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine5_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine5_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine5_refresh_req) begin
				bankmachine5_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine5_row_opened) begin
						if (basesoc_sdram_bankmachine5_row_hit) begin
							basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine5_req_wdata_ready <= basesoc_sdram_bankmachine5_cmd_ready;
								basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine5_req_rdata_valid <= basesoc_sdram_bankmachine5_cmd_ready;
								basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine5_cmd_ready & basesoc_sdram_bankmachine5_auto_precharge)) begin
								bankmachine5_next_state <= 2'd2;
							end
						end else begin
							bankmachine5_next_state <= 1'd1;
						end
					end else begin
						bankmachine5_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine6_req_valid;
assign basesoc_sdram_bankmachine6_req_ready = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine6_req_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine6_req_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_valid = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine6_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_source_ready = (basesoc_sdram_bankmachine6_req_wdata_ready | basesoc_sdram_bankmachine6_req_rdata_valid);
assign basesoc_sdram_bankmachine6_req_lock = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine6_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine6_row_hit = (basesoc_sdram_bankmachine6_row == basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine6_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine6_cmd_payload_a <= basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine6_cmd_payload_a <= ((basesoc_sdram_bankmachine6_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine6_twtpcon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_cmd_payload_is_write);
assign basesoc_sdram_bankmachine6_trccon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
assign basesoc_sdram_bankmachine6_trascon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
always @(*) begin
	basesoc_sdram_bankmachine6_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine6_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine6_auto_precharge <= (basesoc_sdram_bankmachine6_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din = {basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable | basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re);
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine6_cmd_buffer_source_valid) | basesoc_sdram_bankmachine6_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine6_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine6_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_valid <= 1'd0;
	bankmachine6_next_state <= 4'd0;
	basesoc_sdram_bankmachine6_row_open <= 1'd0;
	basesoc_sdram_bankmachine6_row_close <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine6_req_wdata_ready <= 1'd0;
	bankmachine6_next_state <= bankmachine6_state;
	case (bankmachine6_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
				basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine6_cmd_ready) begin
					bankmachine6_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
				bankmachine6_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine6_trccon_ready) begin
				basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine6_row_open <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine6_cmd_ready) begin
					bankmachine6_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine6_twtpcon_ready) begin
				basesoc_sdram_bankmachine6_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
			basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine6_refresh_req)) begin
				bankmachine6_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine6_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine6_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine6_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine6_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine6_refresh_req) begin
				bankmachine6_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine6_row_opened) begin
						if (basesoc_sdram_bankmachine6_row_hit) begin
							basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine6_req_wdata_ready <= basesoc_sdram_bankmachine6_cmd_ready;
								basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine6_req_rdata_valid <= basesoc_sdram_bankmachine6_cmd_ready;
								basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine6_cmd_ready & basesoc_sdram_bankmachine6_auto_precharge)) begin
								bankmachine6_next_state <= 2'd2;
							end
						end else begin
							bankmachine6_next_state <= 1'd1;
						end
					end else begin
						bankmachine6_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine7_req_valid;
assign basesoc_sdram_bankmachine7_req_ready = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine7_req_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine7_req_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_valid = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine7_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_source_ready = (basesoc_sdram_bankmachine7_req_wdata_ready | basesoc_sdram_bankmachine7_req_rdata_valid);
assign basesoc_sdram_bankmachine7_req_lock = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine7_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine7_row_hit = (basesoc_sdram_bankmachine7_row == basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:7]);
assign basesoc_sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_payload_a <= 14'd0;
	if (basesoc_sdram_bankmachine7_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine7_cmd_payload_a <= basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:7];
	end else begin
		basesoc_sdram_bankmachine7_cmd_payload_a <= ((basesoc_sdram_bankmachine7_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine7_twtpcon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_cmd_payload_is_write);
assign basesoc_sdram_bankmachine7_trccon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
assign basesoc_sdram_bankmachine7_trascon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
always @(*) begin
	basesoc_sdram_bankmachine7_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine7_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr[20:7] != basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:7])) begin
			basesoc_sdram_bankmachine7_auto_precharge <= (basesoc_sdram_bankmachine7_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din = {basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable | basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re);
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine7_cmd_buffer_source_valid) | basesoc_sdram_bankmachine7_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine7_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine7_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_valid <= 1'd0;
	bankmachine7_next_state <= 4'd0;
	basesoc_sdram_bankmachine7_row_open <= 1'd0;
	basesoc_sdram_bankmachine7_row_close <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine7_req_wdata_ready <= 1'd0;
	bankmachine7_next_state <= bankmachine7_state;
	case (bankmachine7_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
				basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine7_cmd_ready) begin
					bankmachine7_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
				bankmachine7_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine7_trccon_ready) begin
				basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine7_row_open <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine7_cmd_ready) begin
					bankmachine7_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine7_twtpcon_ready) begin
				basesoc_sdram_bankmachine7_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
			basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine7_refresh_req)) begin
				bankmachine7_next_state <= 1'd0;
			end
		end
		3'd5: begin
			bankmachine7_next_state <= 3'd6;
		end
		3'd6: begin
			bankmachine7_next_state <= 2'd3;
		end
		3'd7: begin
			bankmachine7_next_state <= 4'd8;
		end
		4'd8: begin
			bankmachine7_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine7_refresh_req) begin
				bankmachine7_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine7_row_opened) begin
						if (basesoc_sdram_bankmachine7_row_hit) begin
							basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine7_req_wdata_ready <= basesoc_sdram_bankmachine7_cmd_ready;
								basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine7_req_rdata_valid <= basesoc_sdram_bankmachine7_cmd_ready;
								basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine7_cmd_ready & basesoc_sdram_bankmachine7_auto_precharge)) begin
								bankmachine7_next_state <= 2'd2;
							end
						end else begin
							bankmachine7_next_state <= 1'd1;
						end
					end else begin
						bankmachine7_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_rdcmdphase = (a7ddrphy_rdphase_storage - 1'd1);
assign basesoc_sdram_wrcmdphase = (a7ddrphy_wrphase_storage - 1'd1);
assign basesoc_sdram_trrdcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_tfawcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_ras_allowed = (basesoc_sdram_trrdcon_ready & basesoc_sdram_tfawcon_ready);
assign basesoc_sdram_tccdcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_cmd_payload_is_write | basesoc_sdram_choose_req_cmd_payload_is_read));
assign basesoc_sdram_cas_allowed = basesoc_sdram_tccdcon_ready;
assign basesoc_sdram_twtrcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
assign basesoc_sdram_read_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_read) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_read)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_read)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_read)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_read)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_read)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_read)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_read));
assign basesoc_sdram_write_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_write) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_write)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_write)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_write)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_write)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_write)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_write)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_write));
assign basesoc_sdram_max_time0 = (basesoc_sdram_time0 == 1'd0);
assign basesoc_sdram_max_time1 = (basesoc_sdram_time1 == 1'd0);
assign basesoc_sdram_bankmachine0_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine1_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine2_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine3_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine4_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine5_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine6_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine7_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_go_to_refresh = (((((((basesoc_sdram_bankmachine0_refresh_gnt & basesoc_sdram_bankmachine1_refresh_gnt) & basesoc_sdram_bankmachine2_refresh_gnt) & basesoc_sdram_bankmachine3_refresh_gnt) & basesoc_sdram_bankmachine4_refresh_gnt) & basesoc_sdram_bankmachine5_refresh_gnt) & basesoc_sdram_bankmachine6_refresh_gnt) & basesoc_sdram_bankmachine7_refresh_gnt);
assign basesoc_sdram_interface_rdata = {basesoc_sdram_dfi_p3_rddata, basesoc_sdram_dfi_p2_rddata, basesoc_sdram_dfi_p1_rddata, basesoc_sdram_dfi_p0_rddata};
assign {basesoc_sdram_dfi_p3_wrdata, basesoc_sdram_dfi_p2_wrdata, basesoc_sdram_dfi_p1_wrdata, basesoc_sdram_dfi_p0_wrdata} = basesoc_sdram_interface_wdata;
assign {basesoc_sdram_dfi_p3_wrdata_mask, basesoc_sdram_dfi_p2_wrdata_mask, basesoc_sdram_dfi_p1_wrdata_mask, basesoc_sdram_dfi_p0_wrdata_mask} = (~basesoc_sdram_interface_wdata_we);
always @(*) begin
	basesoc_sdram_choose_cmd_valids <= 8'd0;
	basesoc_sdram_choose_cmd_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
end
assign basesoc_sdram_choose_cmd_request = basesoc_sdram_choose_cmd_valids;
assign basesoc_sdram_choose_cmd_cmd_valid = rhs_array_muxed0;
assign basesoc_sdram_choose_cmd_cmd_payload_a = rhs_array_muxed1;
assign basesoc_sdram_choose_cmd_cmd_payload_ba = rhs_array_muxed2;
assign basesoc_sdram_choose_cmd_cmd_payload_is_read = rhs_array_muxed3;
assign basesoc_sdram_choose_cmd_cmd_payload_is_write = rhs_array_muxed4;
assign basesoc_sdram_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed5;
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_cas <= t_array_muxed0;
	end
end
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_ras <= t_array_muxed1;
	end
end
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_we <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_we <= t_array_muxed2;
	end
end
assign basesoc_sdram_choose_cmd_ce = (basesoc_sdram_choose_cmd_cmd_ready | (~basesoc_sdram_choose_cmd_cmd_valid));
always @(*) begin
	basesoc_sdram_choose_req_valids <= 8'd0;
	basesoc_sdram_choose_req_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
end
assign basesoc_sdram_choose_req_request = basesoc_sdram_choose_req_valids;
assign basesoc_sdram_choose_req_cmd_valid = rhs_array_muxed6;
assign basesoc_sdram_choose_req_cmd_payload_a = rhs_array_muxed7;
assign basesoc_sdram_choose_req_cmd_payload_ba = rhs_array_muxed8;
assign basesoc_sdram_choose_req_cmd_payload_is_read = rhs_array_muxed9;
assign basesoc_sdram_choose_req_cmd_payload_is_write = rhs_array_muxed10;
assign basesoc_sdram_choose_req_cmd_payload_is_cmd = rhs_array_muxed11;
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_cas <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_cas <= t_array_muxed3;
	end
end
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_ras <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_ras <= t_array_muxed4;
	end
end
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_we <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_we <= t_array_muxed5;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd0))) begin
		basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd0))) begin
		basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd1))) begin
		basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd1))) begin
		basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd2))) begin
		basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd2))) begin
		basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd3))) begin
		basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd3))) begin
		basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd4))) begin
		basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd4))) begin
		basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd5))) begin
		basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd5))) begin
		basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd6))) begin
		basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd6))) begin
		basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd7))) begin
		basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd7))) begin
		basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
end
assign basesoc_sdram_choose_req_ce = (basesoc_sdram_choose_req_cmd_ready | (~basesoc_sdram_choose_req_cmd_valid));
assign basesoc_sdram_dfi_p0_reset_n = 1'd1;
assign basesoc_sdram_dfi_p0_cke = {1{basesoc_sdram_steerer0}};
assign basesoc_sdram_dfi_p0_odt = {1{basesoc_sdram_steerer1}};
assign basesoc_sdram_dfi_p1_reset_n = 1'd1;
assign basesoc_sdram_dfi_p1_cke = {1{basesoc_sdram_steerer2}};
assign basesoc_sdram_dfi_p1_odt = {1{basesoc_sdram_steerer3}};
assign basesoc_sdram_dfi_p2_reset_n = 1'd1;
assign basesoc_sdram_dfi_p2_cke = {1{basesoc_sdram_steerer4}};
assign basesoc_sdram_dfi_p2_odt = {1{basesoc_sdram_steerer5}};
assign basesoc_sdram_dfi_p3_reset_n = 1'd1;
assign basesoc_sdram_dfi_p3_cke = {1{basesoc_sdram_steerer6}};
assign basesoc_sdram_dfi_p3_odt = {1{basesoc_sdram_steerer7}};
assign basesoc_sdram_tfawcon_count = ((((basesoc_sdram_tfawcon_window[0] + basesoc_sdram_tfawcon_window[1]) + basesoc_sdram_tfawcon_window[2]) + basesoc_sdram_tfawcon_window[3]) + basesoc_sdram_tfawcon_window[4]);
always @(*) begin
	basesoc_sdram_steerer_sel0 <= 2'd0;
	basesoc_sdram_cmd_ready <= 1'd0;
	basesoc_sdram_steerer_sel1 <= 2'd0;
	basesoc_sdram_steerer_sel2 <= 2'd0;
	basesoc_sdram_choose_cmd_want_activates <= 1'd0;
	basesoc_sdram_steerer_sel3 <= 2'd0;
	basesoc_sdram_en0 <= 1'd0;
	basesoc_sdram_choose_cmd_cmd_ready <= 1'd0;
	basesoc_sdram_choose_req_want_reads <= 1'd0;
	multiplexer_next_state <= 4'd0;
	basesoc_sdram_choose_req_want_writes <= 1'd0;
	basesoc_sdram_choose_req_cmd_ready <= 1'd0;
	basesoc_sdram_en1 <= 1'd0;
	multiplexer_next_state <= multiplexer_state;
	case (multiplexer_state)
		1'd1: begin
			basesoc_sdram_en1 <= 1'd1;
			basesoc_sdram_choose_req_want_writes <= 1'd1;
			if (1'd0) begin
				basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
			end else begin
				basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
				basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
				basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
			end
			basesoc_sdram_steerer_sel0 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 1'd1;
			end
			basesoc_sdram_steerer_sel1 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 1'd1;
			end
			basesoc_sdram_steerer_sel2 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 1'd1;
			end
			basesoc_sdram_steerer_sel3 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 1'd1;
			end
			if (basesoc_sdram_read_available) begin
				if (((~basesoc_sdram_write_available) | basesoc_sdram_max_time1)) begin
					multiplexer_next_state <= 2'd3;
				end
			end
			if (basesoc_sdram_go_to_refresh) begin
				multiplexer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_sdram_steerer_sel0 <= 2'd3;
			basesoc_sdram_cmd_ready <= 1'd1;
			if (basesoc_sdram_cmd_last) begin
				multiplexer_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (basesoc_sdram_twtrcon_ready) begin
				multiplexer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			multiplexer_next_state <= 3'd5;
		end
		3'd5: begin
			multiplexer_next_state <= 3'd6;
		end
		3'd6: begin
			multiplexer_next_state <= 3'd7;
		end
		3'd7: begin
			multiplexer_next_state <= 4'd8;
		end
		4'd8: begin
			multiplexer_next_state <= 4'd9;
		end
		4'd9: begin
			multiplexer_next_state <= 4'd10;
		end
		4'd10: begin
			multiplexer_next_state <= 1'd1;
		end
		default: begin
			basesoc_sdram_en0 <= 1'd1;
			basesoc_sdram_choose_req_want_reads <= 1'd1;
			if (1'd0) begin
				basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
			end else begin
				basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
				basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
				basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
			end
			basesoc_sdram_steerer_sel0 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 1'd1;
			end
			basesoc_sdram_steerer_sel1 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 1'd1;
			end
			basesoc_sdram_steerer_sel2 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 1'd1;
			end
			basesoc_sdram_steerer_sel3 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 1'd1;
			end
			if (basesoc_sdram_write_available) begin
				if (((~basesoc_sdram_read_available) | basesoc_sdram_max_time0)) begin
					multiplexer_next_state <= 3'd4;
				end
			end
			if (basesoc_sdram_go_to_refresh) begin
				multiplexer_next_state <= 2'd2;
			end
		end
	endcase
end
assign roundrobin0_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin0_ce = ((~basesoc_sdram_interface_bank0_valid) & (~basesoc_sdram_interface_bank0_lock));
assign basesoc_sdram_interface_bank0_addr = rhs_array_muxed12;
assign basesoc_sdram_interface_bank0_we = rhs_array_muxed13;
assign basesoc_sdram_interface_bank0_valid = rhs_array_muxed14;
assign roundrobin1_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin1_ce = ((~basesoc_sdram_interface_bank1_valid) & (~basesoc_sdram_interface_bank1_lock));
assign basesoc_sdram_interface_bank1_addr = rhs_array_muxed15;
assign basesoc_sdram_interface_bank1_we = rhs_array_muxed16;
assign basesoc_sdram_interface_bank1_valid = rhs_array_muxed17;
assign roundrobin2_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin2_ce = ((~basesoc_sdram_interface_bank2_valid) & (~basesoc_sdram_interface_bank2_lock));
assign basesoc_sdram_interface_bank2_addr = rhs_array_muxed18;
assign basesoc_sdram_interface_bank2_we = rhs_array_muxed19;
assign basesoc_sdram_interface_bank2_valid = rhs_array_muxed20;
assign roundrobin3_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin3_ce = ((~basesoc_sdram_interface_bank3_valid) & (~basesoc_sdram_interface_bank3_lock));
assign basesoc_sdram_interface_bank3_addr = rhs_array_muxed21;
assign basesoc_sdram_interface_bank3_we = rhs_array_muxed22;
assign basesoc_sdram_interface_bank3_valid = rhs_array_muxed23;
assign roundrobin4_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin4_ce = ((~basesoc_sdram_interface_bank4_valid) & (~basesoc_sdram_interface_bank4_lock));
assign basesoc_sdram_interface_bank4_addr = rhs_array_muxed24;
assign basesoc_sdram_interface_bank4_we = rhs_array_muxed25;
assign basesoc_sdram_interface_bank4_valid = rhs_array_muxed26;
assign roundrobin5_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin5_ce = ((~basesoc_sdram_interface_bank5_valid) & (~basesoc_sdram_interface_bank5_lock));
assign basesoc_sdram_interface_bank5_addr = rhs_array_muxed27;
assign basesoc_sdram_interface_bank5_we = rhs_array_muxed28;
assign basesoc_sdram_interface_bank5_valid = rhs_array_muxed29;
assign roundrobin6_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin6_ce = ((~basesoc_sdram_interface_bank6_valid) & (~basesoc_sdram_interface_bank6_lock));
assign basesoc_sdram_interface_bank6_addr = rhs_array_muxed30;
assign basesoc_sdram_interface_bank6_we = rhs_array_muxed31;
assign basesoc_sdram_interface_bank6_valid = rhs_array_muxed32;
assign roundrobin7_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin7_ce = ((~basesoc_sdram_interface_bank7_valid) & (~basesoc_sdram_interface_bank7_lock));
assign basesoc_sdram_interface_bank7_addr = rhs_array_muxed33;
assign basesoc_sdram_interface_bank7_we = rhs_array_muxed34;
assign basesoc_sdram_interface_bank7_valid = rhs_array_muxed35;
assign basesoc_port_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank0_ready)) | (((roundrobin1_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank1_ready)) | (((roundrobin2_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank2_ready)) | (((roundrobin3_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank3_ready)) | (((roundrobin4_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank4_ready)) | (((roundrobin5_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank5_ready)) | (((roundrobin6_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank6_ready)) | (((roundrobin7_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0)))))) & basesoc_sdram_interface_bank7_ready));
assign basesoc_port_wdata_ready = new_master_wdata_ready1;
assign basesoc_port_rdata_valid = new_master_rdata_valid8;
always @(*) begin
	basesoc_sdram_interface_wdata <= 128'd0;
	basesoc_sdram_interface_wdata_we <= 16'd0;
	case ({new_master_wdata_ready1})
		1'd1: begin
			basesoc_sdram_interface_wdata <= basesoc_port_wdata_payload_data;
			basesoc_sdram_interface_wdata_we <= basesoc_port_wdata_payload_we;
		end
		default: begin
			basesoc_sdram_interface_wdata <= 1'd0;
			basesoc_sdram_interface_wdata_we <= 1'd0;
		end
	endcase
end
assign basesoc_port_rdata_payload_data = basesoc_sdram_interface_rdata;
assign roundrobin0_grant = 1'd0;
assign roundrobin1_grant = 1'd0;
assign roundrobin2_grant = 1'd0;
assign roundrobin3_grant = 1'd0;
assign roundrobin4_grant = 1'd0;
assign roundrobin5_grant = 1'd0;
assign roundrobin6_grant = 1'd0;
assign roundrobin7_grant = 1'd0;
assign basesoc_data_port_adr = basesoc_wb_sdram_adr[10:2];
always @(*) begin
	basesoc_data_port_dat_w <= 128'd0;
	basesoc_data_port_we <= 16'd0;
	if (basesoc_write_from_slave) begin
		basesoc_data_port_dat_w <= basesoc_interface_dat_r;
		basesoc_data_port_we <= {16{1'd1}};
	end else begin
		basesoc_data_port_dat_w <= {4{basesoc_wb_sdram_dat_w}};
		if ((((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb) & basesoc_wb_sdram_we) & basesoc_wb_sdram_ack)) begin
			basesoc_data_port_we <= {({4{(basesoc_wb_sdram_adr[1:0] == 2'd3)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 2'd2)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 1'd1)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 1'd0)}} & basesoc_wb_sdram_sel)};
		end
	end
end
assign basesoc_interface_dat_w = basesoc_data_port_dat_r;
assign basesoc_interface_sel = 16'd65535;
always @(*) begin
	basesoc_wb_sdram_dat_r <= 32'd0;
	case (basesoc_adr_offset_r)
		1'd0: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[31:0];
		end
		1'd1: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[63:32];
		end
		2'd2: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[95:64];
		end
		default: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[127:96];
		end
	endcase
end
assign {basesoc_tag_do_dirty, basesoc_tag_do_tag} = basesoc_tag_port_dat_r;
assign basesoc_tag_port_dat_w = {basesoc_tag_di_dirty, basesoc_tag_di_tag};
assign basesoc_tag_port_adr = basesoc_wb_sdram_adr[10:2];
assign basesoc_tag_di_tag = basesoc_wb_sdram_adr[29:11];
assign basesoc_interface_adr = {basesoc_tag_do_tag, basesoc_wb_sdram_adr[10:2]};
always @(*) begin
	basesoc_tag_di_dirty <= 1'd0;
	basesoc_word_clr <= 1'd0;
	basesoc_word_inc <= 1'd0;
	basesoc_write_from_slave <= 1'd0;
	basesoc_interface_cyc <= 1'd0;
	basesoc_interface_stb <= 1'd0;
	basesoc_tag_port_we <= 1'd0;
	basesoc_interface_we <= 1'd0;
	fullmemorywe_next_state <= 2'd0;
	basesoc_wb_sdram_ack <= 1'd0;
	fullmemorywe_next_state <= fullmemorywe_state;
	case (fullmemorywe_state)
		1'd1: begin
			basesoc_word_clr <= 1'd1;
			if ((basesoc_tag_do_tag == basesoc_wb_sdram_adr[29:11])) begin
				basesoc_wb_sdram_ack <= 1'd1;
				if (basesoc_wb_sdram_we) begin
					basesoc_tag_di_dirty <= 1'd1;
					basesoc_tag_port_we <= 1'd1;
				end
				fullmemorywe_next_state <= 1'd0;
			end else begin
				if (basesoc_tag_do_dirty) begin
					fullmemorywe_next_state <= 2'd2;
				end else begin
					basesoc_tag_port_we <= 1'd1;
					basesoc_word_clr <= 1'd1;
					fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			basesoc_interface_stb <= 1'd1;
			basesoc_interface_cyc <= 1'd1;
			basesoc_interface_we <= 1'd1;
			if (basesoc_interface_ack) begin
				basesoc_word_inc <= 1'd1;
				if (1'd1) begin
					basesoc_tag_port_we <= 1'd1;
					basesoc_word_clr <= 1'd1;
					fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			basesoc_interface_stb <= 1'd1;
			basesoc_interface_cyc <= 1'd1;
			basesoc_interface_we <= 1'd0;
			if (basesoc_interface_ack) begin
				basesoc_write_from_slave <= 1'd1;
				basesoc_word_inc <= 1'd1;
				if (1'd1) begin
					fullmemorywe_next_state <= 1'd1;
				end else begin
					fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		default: begin
			if ((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb)) begin
				fullmemorywe_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_port_cmd_payload_addr = (basesoc_interface_adr - 27'd67108864);
assign basesoc_port_cmd_payload_we = basesoc_interface_we;
assign basesoc_port_cmd_last = (~basesoc_interface_we);
assign basesoc_port_flush = (~basesoc_interface_cyc);
always @(*) begin
	basesoc_port_wdata_valid <= 1'd0;
	basesoc_port_wdata_valid <= (basesoc_interface_stb & basesoc_interface_we);
	if (1'd1) begin
		if ((~basesoc_is_ongoing)) begin
			basesoc_port_wdata_valid <= 1'd0;
		end
	end
end
assign basesoc_port_wdata_payload_data = basesoc_interface_dat_w;
assign basesoc_port_wdata_payload_we = basesoc_interface_sel;
assign basesoc_port_rdata_ready = 1'd1;
always @(*) begin
	litedramwishbone2native_next_state <= 2'd0;
	basesoc_port_cmd_valid <= 1'd0;
	basesoc_interface_dat_r <= 128'd0;
	basesoc_interface_ack <= 1'd0;
	basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
	basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
	basesoc_is_ongoing <= 1'd0;
	litedramwishbone2native_next_state <= litedramwishbone2native_state;
	case (litedramwishbone2native_state)
		1'd1: begin
			basesoc_is_ongoing <= 1'd1;
			basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
			if ((basesoc_port_wdata_valid & basesoc_port_wdata_ready)) begin
				basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
				litedramwishbone2native_next_state <= 1'd0;
			end
		end
		2'd2: begin
			basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
			if (basesoc_port_rdata_valid) begin
				basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
				basesoc_interface_dat_r <= basesoc_port_rdata_payload_data;
				litedramwishbone2native_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_port_cmd_valid <= (basesoc_interface_cyc & basesoc_interface_stb);
			if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & basesoc_interface_we)) begin
				litedramwishbone2native_next_state <= 1'd1;
			end
			if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & (~basesoc_interface_we))) begin
				litedramwishbone2native_next_state <= 2'd2;
			end
			basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
		end
	endcase
end
assign eth_rx_clk = eth_clocks_rx;
assign eth_tx_clk = eth_clocks_tx;
assign ethphy_reset0 = (ethphy_reset_storage | ethphy_reset1);
assign eth_rst_n = (~ethphy_reset0);
assign ethphy_counter_done = (ethphy_counter == 9'd256);
assign ethphy_counter_ce = (~ethphy_counter_done);
assign ethphy_reset1 = (~ethphy_counter_done);
assign ethphy_liteethphymiitx_converter_sink_valid = ethphy_liteethphymiitx_sink_sink_valid;
assign ethphy_liteethphymiitx_converter_sink_payload_data = ethphy_liteethphymiitx_sink_sink_payload_data;
assign ethphy_liteethphymiitx_sink_sink_ready = ethphy_liteethphymiitx_converter_sink_ready;
assign ethphy_liteethphymiitx_converter_source_ready = 1'd1;
assign ethphy_liteethphymiitx_converter_converter_sink_valid = ethphy_liteethphymiitx_converter_sink_valid;
assign ethphy_liteethphymiitx_converter_converter_sink_first = ethphy_liteethphymiitx_converter_sink_first;
assign ethphy_liteethphymiitx_converter_converter_sink_last = ethphy_liteethphymiitx_converter_sink_last;
assign ethphy_liteethphymiitx_converter_sink_ready = ethphy_liteethphymiitx_converter_converter_sink_ready;
always @(*) begin
	ethphy_liteethphymiitx_converter_converter_sink_payload_data <= 8'd0;
	ethphy_liteethphymiitx_converter_converter_sink_payload_data[3:0] <= ethphy_liteethphymiitx_converter_sink_payload_data[3:0];
	ethphy_liteethphymiitx_converter_converter_sink_payload_data[7:4] <= ethphy_liteethphymiitx_converter_sink_payload_data[7:4];
end
assign ethphy_liteethphymiitx_converter_source_valid = ethphy_liteethphymiitx_converter_source_source_valid;
assign ethphy_liteethphymiitx_converter_source_first = ethphy_liteethphymiitx_converter_source_source_first;
assign ethphy_liteethphymiitx_converter_source_last = ethphy_liteethphymiitx_converter_source_source_last;
assign ethphy_liteethphymiitx_converter_source_source_ready = ethphy_liteethphymiitx_converter_source_ready;
assign {ethphy_liteethphymiitx_converter_source_payload_data} = ethphy_liteethphymiitx_converter_source_source_payload_data;
assign ethphy_liteethphymiitx_converter_source_source_valid = ethphy_liteethphymiitx_converter_converter_source_valid;
assign ethphy_liteethphymiitx_converter_converter_source_ready = ethphy_liteethphymiitx_converter_source_source_ready;
assign ethphy_liteethphymiitx_converter_source_source_first = ethphy_liteethphymiitx_converter_converter_source_first;
assign ethphy_liteethphymiitx_converter_source_source_last = ethphy_liteethphymiitx_converter_converter_source_last;
assign ethphy_liteethphymiitx_converter_source_source_payload_data = ethphy_liteethphymiitx_converter_converter_source_payload_data;
assign ethphy_liteethphymiitx_converter_converter_first = (ethphy_liteethphymiitx_converter_converter_mux == 1'd0);
assign ethphy_liteethphymiitx_converter_converter_last = (ethphy_liteethphymiitx_converter_converter_mux == 1'd1);
assign ethphy_liteethphymiitx_converter_converter_source_valid = ethphy_liteethphymiitx_converter_converter_sink_valid;
assign ethphy_liteethphymiitx_converter_converter_source_first = (ethphy_liteethphymiitx_converter_converter_sink_first & ethphy_liteethphymiitx_converter_converter_first);
assign ethphy_liteethphymiitx_converter_converter_source_last = (ethphy_liteethphymiitx_converter_converter_sink_last & ethphy_liteethphymiitx_converter_converter_last);
assign ethphy_liteethphymiitx_converter_converter_sink_ready = (ethphy_liteethphymiitx_converter_converter_last & ethphy_liteethphymiitx_converter_converter_source_ready);
always @(*) begin
	ethphy_liteethphymiitx_converter_converter_source_payload_data <= 4'd0;
	case (ethphy_liteethphymiitx_converter_converter_mux)
		1'd0: begin
			ethphy_liteethphymiitx_converter_converter_source_payload_data <= ethphy_liteethphymiitx_converter_converter_sink_payload_data[3:0];
		end
		default: begin
			ethphy_liteethphymiitx_converter_converter_source_payload_data <= ethphy_liteethphymiitx_converter_converter_sink_payload_data[7:4];
		end
	endcase
end
assign ethphy_liteethphymiitx_converter_converter_source_payload_valid_token_count = ethphy_liteethphymiitx_converter_converter_last;
assign ethphy_liteethphymiirx_converter_sink_last = (~eth_rx_dv);
assign ethphy_liteethphymiirx_source_source_valid = ethphy_liteethphymiirx_converter_source_valid;
assign ethphy_liteethphymiirx_converter_source_ready = ethphy_liteethphymiirx_source_source_ready;
assign ethphy_liteethphymiirx_source_source_first = ethphy_liteethphymiirx_converter_source_first;
assign ethphy_liteethphymiirx_source_source_last = ethphy_liteethphymiirx_converter_source_last;
assign ethphy_liteethphymiirx_source_source_payload_data = ethphy_liteethphymiirx_converter_source_payload_data;
assign ethphy_liteethphymiirx_converter_converter_sink_valid = ethphy_liteethphymiirx_converter_sink_valid;
assign ethphy_liteethphymiirx_converter_converter_sink_first = ethphy_liteethphymiirx_converter_sink_first;
assign ethphy_liteethphymiirx_converter_converter_sink_last = ethphy_liteethphymiirx_converter_sink_last;
assign ethphy_liteethphymiirx_converter_sink_ready = ethphy_liteethphymiirx_converter_converter_sink_ready;
assign ethphy_liteethphymiirx_converter_converter_sink_payload_data = {ethphy_liteethphymiirx_converter_sink_payload_data};
assign ethphy_liteethphymiirx_converter_source_valid = ethphy_liteethphymiirx_converter_source_source_valid;
assign ethphy_liteethphymiirx_converter_source_first = ethphy_liteethphymiirx_converter_source_source_first;
assign ethphy_liteethphymiirx_converter_source_last = ethphy_liteethphymiirx_converter_source_source_last;
assign ethphy_liteethphymiirx_converter_source_source_ready = ethphy_liteethphymiirx_converter_source_ready;
always @(*) begin
	ethphy_liteethphymiirx_converter_source_payload_data <= 8'd0;
	ethphy_liteethphymiirx_converter_source_payload_data[3:0] <= ethphy_liteethphymiirx_converter_source_source_payload_data[3:0];
	ethphy_liteethphymiirx_converter_source_payload_data[7:4] <= ethphy_liteethphymiirx_converter_source_source_payload_data[7:4];
end
assign ethphy_liteethphymiirx_converter_source_source_valid = ethphy_liteethphymiirx_converter_converter_source_valid;
assign ethphy_liteethphymiirx_converter_converter_source_ready = ethphy_liteethphymiirx_converter_source_source_ready;
assign ethphy_liteethphymiirx_converter_source_source_first = ethphy_liteethphymiirx_converter_converter_source_first;
assign ethphy_liteethphymiirx_converter_source_source_last = ethphy_liteethphymiirx_converter_converter_source_last;
assign ethphy_liteethphymiirx_converter_source_source_payload_data = ethphy_liteethphymiirx_converter_converter_source_payload_data;
assign ethphy_liteethphymiirx_converter_converter_sink_ready = ((~ethphy_liteethphymiirx_converter_converter_strobe_all) | ethphy_liteethphymiirx_converter_converter_source_ready);
assign ethphy_liteethphymiirx_converter_converter_source_valid = ethphy_liteethphymiirx_converter_converter_strobe_all;
assign ethphy_liteethphymiirx_converter_converter_load_part = (ethphy_liteethphymiirx_converter_converter_sink_valid & ethphy_liteethphymiirx_converter_converter_sink_ready);
assign eth_mdc = ethphy__w_storage[0];
assign ethphy_data_oe = ethphy__w_storage[1];
assign ethphy_data_w = ethphy__w_storage[2];
assign basesoc_ethmac_sink_valid = basesoc_ethmac_source_source_valid;
assign basesoc_ethmac_source_source_ready = basesoc_ethmac_sink_ready;
assign basesoc_ethmac_sink_first = basesoc_ethmac_source_source_first;
assign basesoc_ethmac_sink_last = basesoc_ethmac_source_source_last;
assign basesoc_ethmac_sink_payload_data = basesoc_ethmac_source_source_payload_data;
assign basesoc_ethmac_sink_payload_last_be = basesoc_ethmac_source_source_payload_last_be;
assign basesoc_ethmac_sink_payload_error = basesoc_ethmac_source_source_payload_error;
assign basesoc_ethmac_sink_sink_valid = basesoc_ethmac_source_valid;
assign basesoc_ethmac_source_ready = basesoc_ethmac_sink_sink_ready;
assign basesoc_ethmac_sink_sink_first = basesoc_ethmac_source_first;
assign basesoc_ethmac_sink_sink_last = basesoc_ethmac_source_last;
assign basesoc_ethmac_sink_sink_payload_data = basesoc_ethmac_source_payload_data;
assign basesoc_ethmac_sink_sink_payload_last_be = basesoc_ethmac_source_payload_last_be;
assign basesoc_ethmac_sink_sink_payload_error = basesoc_ethmac_source_payload_error;
assign basesoc_ethmac_tx_cdc_cdc_sink_valid = basesoc_ethmac_tx_cdc_sink_sink_valid;
assign basesoc_ethmac_tx_cdc_sink_sink_ready = basesoc_ethmac_tx_cdc_cdc_sink_ready;
assign basesoc_ethmac_tx_cdc_cdc_sink_first = basesoc_ethmac_tx_cdc_sink_sink_first;
assign basesoc_ethmac_tx_cdc_cdc_sink_last = basesoc_ethmac_tx_cdc_sink_sink_last;
assign basesoc_ethmac_tx_cdc_cdc_sink_payload_data = basesoc_ethmac_tx_cdc_sink_sink_payload_data;
assign basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be = basesoc_ethmac_tx_cdc_sink_sink_payload_last_be;
assign basesoc_ethmac_tx_cdc_cdc_sink_payload_error = basesoc_ethmac_tx_cdc_sink_sink_payload_error;
assign basesoc_ethmac_tx_cdc_source_source_valid = basesoc_ethmac_tx_cdc_cdc_source_valid;
assign basesoc_ethmac_tx_cdc_cdc_source_ready = basesoc_ethmac_tx_cdc_source_source_ready;
assign basesoc_ethmac_tx_cdc_source_source_first = basesoc_ethmac_tx_cdc_cdc_source_first;
assign basesoc_ethmac_tx_cdc_source_source_last = basesoc_ethmac_tx_cdc_cdc_source_last;
assign basesoc_ethmac_tx_cdc_source_source_payload_data = basesoc_ethmac_tx_cdc_cdc_source_payload_data;
assign basesoc_ethmac_tx_cdc_source_source_payload_last_be = basesoc_ethmac_tx_cdc_cdc_source_payload_last_be;
assign basesoc_ethmac_tx_cdc_source_source_payload_error = basesoc_ethmac_tx_cdc_cdc_source_payload_error;
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_din = {basesoc_ethmac_tx_cdc_cdc_fifo_in_last, basesoc_ethmac_tx_cdc_cdc_fifo_in_first, basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error, basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be, basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data};
assign {basesoc_ethmac_tx_cdc_cdc_fifo_out_last, basesoc_ethmac_tx_cdc_cdc_fifo_out_first, basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error, basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be, basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data} = basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout;
assign basesoc_ethmac_tx_cdc_cdc_sink_ready = basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable;
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_we = basesoc_ethmac_tx_cdc_cdc_sink_valid;
assign basesoc_ethmac_tx_cdc_cdc_fifo_in_first = basesoc_ethmac_tx_cdc_cdc_sink_first;
assign basesoc_ethmac_tx_cdc_cdc_fifo_in_last = basesoc_ethmac_tx_cdc_cdc_sink_last;
assign basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data = basesoc_ethmac_tx_cdc_cdc_sink_payload_data;
assign basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be = basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be;
assign basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error = basesoc_ethmac_tx_cdc_cdc_sink_payload_error;
assign basesoc_ethmac_tx_cdc_cdc_source_valid = basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable;
assign basesoc_ethmac_tx_cdc_cdc_source_first = basesoc_ethmac_tx_cdc_cdc_fifo_out_first;
assign basesoc_ethmac_tx_cdc_cdc_source_last = basesoc_ethmac_tx_cdc_cdc_fifo_out_last;
assign basesoc_ethmac_tx_cdc_cdc_source_payload_data = basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data;
assign basesoc_ethmac_tx_cdc_cdc_source_payload_last_be = basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
assign basesoc_ethmac_tx_cdc_cdc_source_payload_error = basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error;
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_re = basesoc_ethmac_tx_cdc_cdc_source_ready;
assign basesoc_ethmac_tx_cdc_cdc_graycounter0_ce = (basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable & basesoc_ethmac_tx_cdc_cdc_asyncfifo_we);
assign basesoc_ethmac_tx_cdc_cdc_graycounter1_ce = (basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable & basesoc_ethmac_tx_cdc_cdc_asyncfifo_re);
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable = (((basesoc_ethmac_tx_cdc_cdc_graycounter0_q[5] == basesoc_ethmac_tx_cdc_cdc_consume_wdomain[5]) | (basesoc_ethmac_tx_cdc_cdc_graycounter0_q[4] == basesoc_ethmac_tx_cdc_cdc_consume_wdomain[4])) | (basesoc_ethmac_tx_cdc_cdc_graycounter0_q[3:0] != basesoc_ethmac_tx_cdc_cdc_consume_wdomain[3:0]));
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable = (basesoc_ethmac_tx_cdc_cdc_graycounter1_q != basesoc_ethmac_tx_cdc_cdc_produce_rdomain);
assign basesoc_ethmac_tx_cdc_cdc_wrport_adr = basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary[4:0];
assign basesoc_ethmac_tx_cdc_cdc_wrport_dat_w = basesoc_ethmac_tx_cdc_cdc_asyncfifo_din;
assign basesoc_ethmac_tx_cdc_cdc_wrport_we = basesoc_ethmac_tx_cdc_cdc_graycounter0_ce;
assign basesoc_ethmac_tx_cdc_cdc_rdport_adr = basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout = basesoc_ethmac_tx_cdc_cdc_rdport_dat_r;
always @(*) begin
	basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
	if (basesoc_ethmac_tx_cdc_cdc_graycounter0_ce) begin
		basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= (basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary;
	end
end
assign basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next = (basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary ^ basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
	if (basesoc_ethmac_tx_cdc_cdc_graycounter1_ce) begin
		basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= (basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary;
	end
end
assign basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next = (basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary ^ basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign basesoc_ethmac_tx_converter_converter_sink_valid = basesoc_ethmac_tx_converter_sink_valid;
assign basesoc_ethmac_tx_converter_converter_sink_first = basesoc_ethmac_tx_converter_sink_first;
assign basesoc_ethmac_tx_converter_converter_sink_last = basesoc_ethmac_tx_converter_sink_last;
assign basesoc_ethmac_tx_converter_sink_ready = basesoc_ethmac_tx_converter_converter_sink_ready;
always @(*) begin
	basesoc_ethmac_tx_converter_converter_sink_payload_data <= 40'd0;
	basesoc_ethmac_tx_converter_converter_sink_payload_data[7:0] <= basesoc_ethmac_tx_converter_sink_payload_data[7:0];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[8] <= basesoc_ethmac_tx_converter_sink_payload_last_be[0];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[9] <= basesoc_ethmac_tx_converter_sink_payload_error[0];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[17:10] <= basesoc_ethmac_tx_converter_sink_payload_data[15:8];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[18] <= basesoc_ethmac_tx_converter_sink_payload_last_be[1];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[19] <= basesoc_ethmac_tx_converter_sink_payload_error[1];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[27:20] <= basesoc_ethmac_tx_converter_sink_payload_data[23:16];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[28] <= basesoc_ethmac_tx_converter_sink_payload_last_be[2];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[29] <= basesoc_ethmac_tx_converter_sink_payload_error[2];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[37:30] <= basesoc_ethmac_tx_converter_sink_payload_data[31:24];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[38] <= basesoc_ethmac_tx_converter_sink_payload_last_be[3];
	basesoc_ethmac_tx_converter_converter_sink_payload_data[39] <= basesoc_ethmac_tx_converter_sink_payload_error[3];
end
assign basesoc_ethmac_tx_converter_source_valid = basesoc_ethmac_tx_converter_source_source_valid;
assign basesoc_ethmac_tx_converter_source_first = basesoc_ethmac_tx_converter_source_source_first;
assign basesoc_ethmac_tx_converter_source_last = basesoc_ethmac_tx_converter_source_source_last;
assign basesoc_ethmac_tx_converter_source_source_ready = basesoc_ethmac_tx_converter_source_ready;
assign {basesoc_ethmac_tx_converter_source_payload_error, basesoc_ethmac_tx_converter_source_payload_last_be, basesoc_ethmac_tx_converter_source_payload_data} = basesoc_ethmac_tx_converter_source_source_payload_data;
assign basesoc_ethmac_tx_converter_source_source_valid = basesoc_ethmac_tx_converter_converter_source_valid;
assign basesoc_ethmac_tx_converter_converter_source_ready = basesoc_ethmac_tx_converter_source_source_ready;
assign basesoc_ethmac_tx_converter_source_source_first = basesoc_ethmac_tx_converter_converter_source_first;
assign basesoc_ethmac_tx_converter_source_source_last = basesoc_ethmac_tx_converter_converter_source_last;
assign basesoc_ethmac_tx_converter_source_source_payload_data = basesoc_ethmac_tx_converter_converter_source_payload_data;
assign basesoc_ethmac_tx_converter_converter_first = (basesoc_ethmac_tx_converter_converter_mux == 1'd0);
assign basesoc_ethmac_tx_converter_converter_last = (basesoc_ethmac_tx_converter_converter_mux == 2'd3);
assign basesoc_ethmac_tx_converter_converter_source_valid = basesoc_ethmac_tx_converter_converter_sink_valid;
assign basesoc_ethmac_tx_converter_converter_source_first = (basesoc_ethmac_tx_converter_converter_sink_first & basesoc_ethmac_tx_converter_converter_first);
assign basesoc_ethmac_tx_converter_converter_source_last = (basesoc_ethmac_tx_converter_converter_sink_last & basesoc_ethmac_tx_converter_converter_last);
assign basesoc_ethmac_tx_converter_converter_sink_ready = (basesoc_ethmac_tx_converter_converter_last & basesoc_ethmac_tx_converter_converter_source_ready);
always @(*) begin
	basesoc_ethmac_tx_converter_converter_source_payload_data <= 10'd0;
	case (basesoc_ethmac_tx_converter_converter_mux)
		1'd0: begin
			basesoc_ethmac_tx_converter_converter_source_payload_data <= basesoc_ethmac_tx_converter_converter_sink_payload_data[9:0];
		end
		1'd1: begin
			basesoc_ethmac_tx_converter_converter_source_payload_data <= basesoc_ethmac_tx_converter_converter_sink_payload_data[19:10];
		end
		2'd2: begin
			basesoc_ethmac_tx_converter_converter_source_payload_data <= basesoc_ethmac_tx_converter_converter_sink_payload_data[29:20];
		end
		default: begin
			basesoc_ethmac_tx_converter_converter_source_payload_data <= basesoc_ethmac_tx_converter_converter_sink_payload_data[39:30];
		end
	endcase
end
assign basesoc_ethmac_tx_converter_converter_source_payload_valid_token_count = basesoc_ethmac_tx_converter_converter_last;
always @(*) begin
	basesoc_ethmac_tx_last_be_source_valid <= 1'd0;
	basesoc_ethmac_tx_last_be_source_first <= 1'd0;
	basesoc_ethmac_tx_last_be_source_last <= 1'd0;
	basesoc_ethmac_tx_last_be_source_payload_data <= 8'd0;
	txdatapath_liteethmactxlastbe_next_state <= 1'd0;
	basesoc_ethmac_tx_last_be_source_payload_last_be <= 1'd0;
	basesoc_ethmac_tx_last_be_source_payload_error <= 1'd0;
	basesoc_ethmac_tx_last_be_sink_ready <= 1'd0;
	txdatapath_liteethmactxlastbe_next_state <= txdatapath_liteethmactxlastbe_state;
	case (txdatapath_liteethmactxlastbe_state)
		1'd1: begin
			basesoc_ethmac_tx_last_be_sink_ready <= 1'd1;
			if ((basesoc_ethmac_tx_last_be_sink_valid & basesoc_ethmac_tx_last_be_sink_last)) begin
				txdatapath_liteethmactxlastbe_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_ethmac_tx_last_be_source_valid <= basesoc_ethmac_tx_last_be_sink_valid;
			basesoc_ethmac_tx_last_be_sink_ready <= basesoc_ethmac_tx_last_be_source_ready;
			basesoc_ethmac_tx_last_be_source_first <= basesoc_ethmac_tx_last_be_sink_first;
			basesoc_ethmac_tx_last_be_source_last <= basesoc_ethmac_tx_last_be_sink_last;
			basesoc_ethmac_tx_last_be_source_payload_data <= basesoc_ethmac_tx_last_be_sink_payload_data;
			basesoc_ethmac_tx_last_be_source_payload_last_be <= basesoc_ethmac_tx_last_be_sink_payload_last_be;
			basesoc_ethmac_tx_last_be_source_payload_error <= basesoc_ethmac_tx_last_be_sink_payload_error;
			basesoc_ethmac_tx_last_be_source_last <= (basesoc_ethmac_tx_last_be_sink_payload_last_be != 1'd0);
			if ((basesoc_ethmac_tx_last_be_sink_valid & basesoc_ethmac_tx_last_be_sink_ready)) begin
				if ((basesoc_ethmac_tx_last_be_source_last & (~basesoc_ethmac_tx_last_be_sink_last))) begin
					txdatapath_liteethmactxlastbe_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign basesoc_ethmac_tx_padding_counter_done = (basesoc_ethmac_tx_padding_counter >= 6'd59);
always @(*) begin
	txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
	basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 16'd0;
	basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd0;
	basesoc_ethmac_tx_padding_source_valid <= 1'd0;
	basesoc_ethmac_tx_padding_source_first <= 1'd0;
	basesoc_ethmac_tx_padding_source_last <= 1'd0;
	basesoc_ethmac_tx_padding_source_payload_data <= 8'd0;
	basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd0;
	basesoc_ethmac_tx_padding_source_payload_error <= 1'd0;
	basesoc_ethmac_tx_padding_sink_ready <= 1'd0;
	txdatapath_liteethmacpaddinginserter_next_state <= txdatapath_liteethmacpaddinginserter_state;
	case (txdatapath_liteethmacpaddinginserter_state)
		1'd1: begin
			basesoc_ethmac_tx_padding_source_valid <= 1'd1;
			if (basesoc_ethmac_tx_padding_counter_done) begin
				basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd1;
				basesoc_ethmac_tx_padding_source_last <= 1'd1;
			end
			basesoc_ethmac_tx_padding_source_payload_data <= 1'd0;
			if ((basesoc_ethmac_tx_padding_source_valid & basesoc_ethmac_tx_padding_source_ready)) begin
				basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (basesoc_ethmac_tx_padding_counter + 1'd1);
				basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
				if (basesoc_ethmac_tx_padding_counter_done) begin
					basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
					basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
					txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_ethmac_tx_padding_source_valid <= basesoc_ethmac_tx_padding_sink_valid;
			basesoc_ethmac_tx_padding_sink_ready <= basesoc_ethmac_tx_padding_source_ready;
			basesoc_ethmac_tx_padding_source_first <= basesoc_ethmac_tx_padding_sink_first;
			basesoc_ethmac_tx_padding_source_last <= basesoc_ethmac_tx_padding_sink_last;
			basesoc_ethmac_tx_padding_source_payload_data <= basesoc_ethmac_tx_padding_sink_payload_data;
			basesoc_ethmac_tx_padding_source_payload_last_be <= basesoc_ethmac_tx_padding_sink_payload_last_be;
			basesoc_ethmac_tx_padding_source_payload_error <= basesoc_ethmac_tx_padding_sink_payload_error;
			if ((basesoc_ethmac_tx_padding_source_valid & basesoc_ethmac_tx_padding_source_ready)) begin
				basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (basesoc_ethmac_tx_padding_counter + 1'd1);
				basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
				if (basesoc_ethmac_tx_padding_sink_last) begin
					if ((~basesoc_ethmac_tx_padding_counter_done)) begin
						basesoc_ethmac_tx_padding_source_last <= 1'd0;
						basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd0;
						txdatapath_liteethmacpaddinginserter_next_state <= 1'd1;
					end else begin
						if (((basesoc_ethmac_tx_padding_counter == 6'd59) & (basesoc_ethmac_tx_padding_sink_payload_last_be < 1'd1))) begin
							basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd1;
						end else begin
							basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
							basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
						end
					end
				end
			end
		end
	endcase
end
assign basesoc_ethmac_liteethmaccrc32inserter_cnt_done = (basesoc_ethmac_liteethmaccrc32inserter_cnt == 1'd0);
assign basesoc_ethmac_liteethmaccrc32inserter_sink_valid = basesoc_ethmac_bufferizeendpoints_source_valid;
assign basesoc_ethmac_bufferizeendpoints_source_ready = basesoc_ethmac_liteethmaccrc32inserter_sink_ready;
assign basesoc_ethmac_liteethmaccrc32inserter_sink_first = basesoc_ethmac_bufferizeendpoints_source_first;
assign basesoc_ethmac_liteethmaccrc32inserter_sink_last = basesoc_ethmac_bufferizeendpoints_source_last;
assign basesoc_ethmac_liteethmaccrc32inserter_sink_payload_data = basesoc_ethmac_bufferizeendpoints_source_payload_data;
assign basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be = basesoc_ethmac_bufferizeendpoints_source_payload_last_be;
assign basesoc_ethmac_liteethmaccrc32inserter_sink_payload_error = basesoc_ethmac_bufferizeendpoints_source_payload_error;
always @(*) begin
	basesoc_ethmac_liteethmaccrc32inserter_last_be1 <= 1'd0;
	if ((basesoc_ethmac_liteethmaccrc32inserter_last_be0 != 1'd0)) begin
		basesoc_ethmac_liteethmaccrc32inserter_last_be1 <= basesoc_ethmac_liteethmaccrc32inserter_last_be0;
	end else begin
		basesoc_ethmac_liteethmaccrc32inserter_last_be1 <= 1'd1;
	end
end
assign basesoc_ethmac_liteethmaccrc32inserter_data1 = basesoc_ethmac_liteethmaccrc32inserter_data0[7:0];
assign basesoc_ethmac_liteethmaccrc32inserter_last = basesoc_ethmac_liteethmaccrc32inserter_reg;
always @(*) begin
	basesoc_ethmac_liteethmaccrc32inserter_value <= 32'd0;
	basesoc_ethmac_liteethmaccrc32inserter_error <= 1'd0;
	if (basesoc_ethmac_liteethmaccrc32inserter_last_be1) begin
		basesoc_ethmac_liteethmaccrc32inserter_value <= {t_slice_proxy31[0], t_slice_proxy30[1], t_slice_proxy29[2], t_slice_proxy28[3], t_slice_proxy27[4], t_slice_proxy26[5], t_slice_proxy25[6], t_slice_proxy24[7], t_slice_proxy23[8], t_slice_proxy22[9], t_slice_proxy21[10], t_slice_proxy20[11], t_slice_proxy19[12], t_slice_proxy18[13], t_slice_proxy17[14], t_slice_proxy16[15], t_slice_proxy15[16], t_slice_proxy14[17], t_slice_proxy13[18], t_slice_proxy12[19], t_slice_proxy11[20], t_slice_proxy10[21], t_slice_proxy9[22], t_slice_proxy8[23], t_slice_proxy7[24], t_slice_proxy6[25], t_slice_proxy5[26], t_slice_proxy4[27], t_slice_proxy3[28], t_slice_proxy2[29], t_slice_proxy1[30], t_slice_proxy0[31]};
		basesoc_ethmac_liteethmaccrc32inserter_error <= (basesoc_ethmac_liteethmaccrc32inserter_next != 32'd3338984827);
	end
end
always @(*) begin
	basesoc_ethmac_liteethmaccrc32inserter_next <= 32'd0;
	basesoc_ethmac_liteethmaccrc32inserter_next[0] <= (((basesoc_ethmac_liteethmaccrc32inserter_last[24] ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[1] <= (((((((basesoc_ethmac_liteethmaccrc32inserter_last[25] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[2] <= (((((((((basesoc_ethmac_liteethmaccrc32inserter_last[26] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[3] <= (((((((basesoc_ethmac_liteethmaccrc32inserter_last[27] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[4] <= (((((((((basesoc_ethmac_liteethmaccrc32inserter_last[28] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[5] <= (((((((((((((basesoc_ethmac_liteethmaccrc32inserter_last[29] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[6] <= (((((((((((basesoc_ethmac_liteethmaccrc32inserter_last[30] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[7] <= (((((((((basesoc_ethmac_liteethmaccrc32inserter_last[31] ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[8] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[0] ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[9] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[1] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[10] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[2] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[11] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[3] ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[12] <= ((((((((((((basesoc_ethmac_liteethmaccrc32inserter_last[4] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[13] <= ((((((((((((basesoc_ethmac_liteethmaccrc32inserter_last[5] ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[14] <= ((((((((((basesoc_ethmac_liteethmaccrc32inserter_last[6] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]);
	basesoc_ethmac_liteethmaccrc32inserter_next[15] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[7] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]);
	basesoc_ethmac_liteethmaccrc32inserter_next[16] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[8] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[17] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[9] ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[18] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[10] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]);
	basesoc_ethmac_liteethmaccrc32inserter_next[19] <= ((((basesoc_ethmac_liteethmaccrc32inserter_last[11] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]);
	basesoc_ethmac_liteethmaccrc32inserter_next[20] <= ((basesoc_ethmac_liteethmaccrc32inserter_last[12] ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]);
	basesoc_ethmac_liteethmaccrc32inserter_next[21] <= ((basesoc_ethmac_liteethmaccrc32inserter_last[13] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]);
	basesoc_ethmac_liteethmaccrc32inserter_next[22] <= ((basesoc_ethmac_liteethmaccrc32inserter_last[14] ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[23] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[15] ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[24] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[16] ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[25] <= ((((basesoc_ethmac_liteethmaccrc32inserter_last[17] ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]);
	basesoc_ethmac_liteethmaccrc32inserter_next[26] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[18] ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[24]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[7]);
	basesoc_ethmac_liteethmaccrc32inserter_next[27] <= ((((((((basesoc_ethmac_liteethmaccrc32inserter_last[19] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[25]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[6]);
	basesoc_ethmac_liteethmaccrc32inserter_next[28] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[20] ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[26]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[5]);
	basesoc_ethmac_liteethmaccrc32inserter_next[29] <= ((((((basesoc_ethmac_liteethmaccrc32inserter_last[21] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[30]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[1]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[27]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[4]);
	basesoc_ethmac_liteethmaccrc32inserter_next[30] <= ((((basesoc_ethmac_liteethmaccrc32inserter_last[22] ^ basesoc_ethmac_liteethmaccrc32inserter_last[31]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[0]) ^ basesoc_ethmac_liteethmaccrc32inserter_last[28]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[3]);
	basesoc_ethmac_liteethmaccrc32inserter_next[31] <= ((basesoc_ethmac_liteethmaccrc32inserter_last[23] ^ basesoc_ethmac_liteethmaccrc32inserter_last[29]) ^ basesoc_ethmac_liteethmaccrc32inserter_data1[2]);
end
always @(*) begin
	basesoc_ethmac_liteethmaccrc32inserter_sink_ready <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_is_ongoing0 <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_is_ongoing1 <= 1'd0;
	txdatapath_bufferizeendpoints_next_state <= 2'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_valid <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_ce <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_reset <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_first <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_last <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= 8'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_source_payload_error <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= 32'd0;
	basesoc_ethmac_liteethmaccrc32inserter_data0 <= 8'd0;
	basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_last_be0 <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= 1'd0;
	basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd0;
	txdatapath_bufferizeendpoints_next_state <= txdatapath_bufferizeendpoints_state;
	case (txdatapath_bufferizeendpoints_state)
		1'd1: begin
			basesoc_ethmac_liteethmaccrc32inserter_ce <= (basesoc_ethmac_liteethmaccrc32inserter_sink_valid & basesoc_ethmac_liteethmaccrc32inserter_source_ready);
			basesoc_ethmac_liteethmaccrc32inserter_data0 <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_data;
			basesoc_ethmac_liteethmaccrc32inserter_last_be0 <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be;
			basesoc_ethmac_liteethmaccrc32inserter_source_valid <= basesoc_ethmac_liteethmaccrc32inserter_sink_valid;
			basesoc_ethmac_liteethmaccrc32inserter_sink_ready <= basesoc_ethmac_liteethmaccrc32inserter_source_ready;
			basesoc_ethmac_liteethmaccrc32inserter_source_first <= basesoc_ethmac_liteethmaccrc32inserter_sink_first;
			basesoc_ethmac_liteethmaccrc32inserter_source_last <= basesoc_ethmac_liteethmaccrc32inserter_sink_last;
			basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_data;
			basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be;
			basesoc_ethmac_liteethmaccrc32inserter_source_payload_error <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_error;
			basesoc_ethmac_liteethmaccrc32inserter_source_last <= 1'd0;
			basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be <= 1'd0;
			if (basesoc_ethmac_liteethmaccrc32inserter_sink_last) begin
				if (basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be) begin
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= cases_slice_proxy[7:0];
				end
				if ((1'd0 & (basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be <= 4'd15))) begin
					basesoc_ethmac_liteethmaccrc32inserter_source_last <= 1'd1;
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be <= (basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be <<< -3'd3);
				end
			end else begin
				basesoc_ethmac_liteethmaccrc32inserter_ce <= (basesoc_ethmac_liteethmaccrc32inserter_sink_valid & basesoc_ethmac_liteethmaccrc32inserter_source_ready);
			end
			if (((basesoc_ethmac_liteethmaccrc32inserter_sink_valid & basesoc_ethmac_liteethmaccrc32inserter_sink_last) & basesoc_ethmac_liteethmaccrc32inserter_source_ready)) begin
				if ((1'd0 & (basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be <= 4'd15))) begin
					txdatapath_bufferizeendpoints_next_state <= 1'd0;
				end else begin
					basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= basesoc_ethmac_liteethmaccrc32inserter_value;
					basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd1;
					if (1'd0) begin
						basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= (basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be >>> 3'd4);
						basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
					end else begin
						basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= basesoc_ethmac_liteethmaccrc32inserter_sink_payload_last_be;
						basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
					end
					txdatapath_bufferizeendpoints_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			basesoc_ethmac_liteethmaccrc32inserter_source_valid <= 1'd1;
			case (basesoc_ethmac_liteethmaccrc32inserter_cnt)
				1'd0: begin
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= basesoc_ethmac_liteethmaccrc32inserter_crc_packet[31:24];
				end
				1'd1: begin
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= basesoc_ethmac_liteethmaccrc32inserter_crc_packet[23:16];
				end
				2'd2: begin
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= basesoc_ethmac_liteethmaccrc32inserter_crc_packet[15:8];
				end
				default: begin
					basesoc_ethmac_liteethmaccrc32inserter_source_payload_data <= basesoc_ethmac_liteethmaccrc32inserter_crc_packet[7:0];
				end
			endcase
			if (basesoc_ethmac_liteethmaccrc32inserter_cnt_done) begin
				basesoc_ethmac_liteethmaccrc32inserter_source_last <= 1'd1;
				if (basesoc_ethmac_liteethmaccrc32inserter_source_ready) begin
					txdatapath_bufferizeendpoints_next_state <= 1'd0;
				end
			end
			basesoc_ethmac_liteethmaccrc32inserter_is_ongoing1 <= 1'd1;
		end
		default: begin
			basesoc_ethmac_liteethmaccrc32inserter_reset <= 1'd1;
			basesoc_ethmac_liteethmaccrc32inserter_sink_ready <= 1'd1;
			if (basesoc_ethmac_liteethmaccrc32inserter_sink_valid) begin
				basesoc_ethmac_liteethmaccrc32inserter_sink_ready <= 1'd0;
				txdatapath_bufferizeendpoints_next_state <= 1'd1;
			end
			basesoc_ethmac_liteethmaccrc32inserter_is_ongoing0 <= 1'd1;
		end
	endcase
end
assign basesoc_ethmac_bufferizeendpoints_sink_ready = ((~basesoc_ethmac_bufferizeendpoints_source_valid) | basesoc_ethmac_bufferizeendpoints_source_ready);
assign basesoc_ethmac_tx_preamble_source_payload_last_be = basesoc_ethmac_tx_preamble_sink_payload_last_be;
always @(*) begin
	basesoc_ethmac_tx_preamble_sink_ready <= 1'd0;
	txdatapath_liteethmacpreambleinserter_next_state <= 2'd0;
	basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 3'd0;
	basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd0;
	basesoc_ethmac_tx_preamble_source_valid <= 1'd0;
	basesoc_ethmac_tx_preamble_source_first <= 1'd0;
	basesoc_ethmac_tx_preamble_source_last <= 1'd0;
	basesoc_ethmac_tx_preamble_source_payload_data <= 8'd0;
	basesoc_ethmac_tx_preamble_source_payload_error <= 1'd0;
	basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_sink_payload_data;
	txdatapath_liteethmacpreambleinserter_next_state <= txdatapath_liteethmacpreambleinserter_state;
	case (txdatapath_liteethmacpreambleinserter_state)
		1'd1: begin
			basesoc_ethmac_tx_preamble_source_valid <= 1'd1;
			case (basesoc_ethmac_tx_preamble_count)
				1'd0: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[7:0];
				end
				1'd1: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[15:8];
				end
				2'd2: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[23:16];
				end
				2'd3: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[31:24];
				end
				3'd4: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[39:32];
				end
				3'd5: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[47:40];
				end
				3'd6: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[55:48];
				end
				default: begin
					basesoc_ethmac_tx_preamble_source_payload_data <= basesoc_ethmac_tx_preamble_preamble[63:56];
				end
			endcase
			if (basesoc_ethmac_tx_preamble_source_ready) begin
				if ((basesoc_ethmac_tx_preamble_count == 3'd7)) begin
					txdatapath_liteethmacpreambleinserter_next_state <= 2'd2;
				end else begin
					basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= (basesoc_ethmac_tx_preamble_count + 1'd1);
					basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
				end
			end
		end
		2'd2: begin
			basesoc_ethmac_tx_preamble_source_valid <= basesoc_ethmac_tx_preamble_sink_valid;
			basesoc_ethmac_tx_preamble_sink_ready <= basesoc_ethmac_tx_preamble_source_ready;
			basesoc_ethmac_tx_preamble_source_first <= basesoc_ethmac_tx_preamble_sink_first;
			basesoc_ethmac_tx_preamble_source_last <= basesoc_ethmac_tx_preamble_sink_last;
			basesoc_ethmac_tx_preamble_source_payload_error <= basesoc_ethmac_tx_preamble_sink_payload_error;
			if (((basesoc_ethmac_tx_preamble_sink_valid & basesoc_ethmac_tx_preamble_sink_last) & basesoc_ethmac_tx_preamble_source_ready)) begin
				txdatapath_liteethmacpreambleinserter_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_ethmac_tx_preamble_sink_ready <= 1'd1;
			basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 1'd0;
			basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
			if (basesoc_ethmac_tx_preamble_sink_valid) begin
				basesoc_ethmac_tx_preamble_sink_ready <= 1'd0;
				txdatapath_liteethmacpreambleinserter_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	txdatapath_liteethmacgap_next_state <= 1'd0;
	basesoc_ethmac_tx_gap_source_valid <= 1'd0;
	basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 4'd0;
	basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd0;
	basesoc_ethmac_tx_gap_source_first <= 1'd0;
	basesoc_ethmac_tx_gap_source_last <= 1'd0;
	basesoc_ethmac_tx_gap_source_payload_data <= 8'd0;
	basesoc_ethmac_tx_gap_source_payload_last_be <= 1'd0;
	basesoc_ethmac_tx_gap_source_payload_error <= 1'd0;
	basesoc_ethmac_tx_gap_sink_ready <= 1'd0;
	txdatapath_liteethmacgap_next_state <= txdatapath_liteethmacgap_state;
	case (txdatapath_liteethmacgap_state)
		1'd1: begin
			basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= (basesoc_ethmac_tx_gap_counter + 1'd1);
			basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
			if ((basesoc_ethmac_tx_gap_counter == 4'd11)) begin
				txdatapath_liteethmacgap_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 1'd0;
			basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
			basesoc_ethmac_tx_gap_source_valid <= basesoc_ethmac_tx_gap_sink_valid;
			basesoc_ethmac_tx_gap_sink_ready <= basesoc_ethmac_tx_gap_source_ready;
			basesoc_ethmac_tx_gap_source_first <= basesoc_ethmac_tx_gap_sink_first;
			basesoc_ethmac_tx_gap_source_last <= basesoc_ethmac_tx_gap_sink_last;
			basesoc_ethmac_tx_gap_source_payload_data <= basesoc_ethmac_tx_gap_sink_payload_data;
			basesoc_ethmac_tx_gap_source_payload_last_be <= basesoc_ethmac_tx_gap_sink_payload_last_be;
			basesoc_ethmac_tx_gap_source_payload_error <= basesoc_ethmac_tx_gap_sink_payload_error;
			if (((basesoc_ethmac_tx_gap_sink_valid & basesoc_ethmac_tx_gap_sink_last) & basesoc_ethmac_tx_gap_sink_ready)) begin
				txdatapath_liteethmacgap_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_ethmac_tx_cdc_sink_sink_valid = basesoc_ethmac_sink_valid;
assign basesoc_ethmac_sink_ready = basesoc_ethmac_tx_cdc_sink_sink_ready;
assign basesoc_ethmac_tx_cdc_sink_sink_first = basesoc_ethmac_sink_first;
assign basesoc_ethmac_tx_cdc_sink_sink_last = basesoc_ethmac_sink_last;
assign basesoc_ethmac_tx_cdc_sink_sink_payload_data = basesoc_ethmac_sink_payload_data;
assign basesoc_ethmac_tx_cdc_sink_sink_payload_last_be = basesoc_ethmac_sink_payload_last_be;
assign basesoc_ethmac_tx_cdc_sink_sink_payload_error = basesoc_ethmac_sink_payload_error;
assign basesoc_ethmac_tx_converter_sink_valid = basesoc_ethmac_tx_cdc_source_source_valid;
assign basesoc_ethmac_tx_cdc_source_source_ready = basesoc_ethmac_tx_converter_sink_ready;
assign basesoc_ethmac_tx_converter_sink_first = basesoc_ethmac_tx_cdc_source_source_first;
assign basesoc_ethmac_tx_converter_sink_last = basesoc_ethmac_tx_cdc_source_source_last;
assign basesoc_ethmac_tx_converter_sink_payload_data = basesoc_ethmac_tx_cdc_source_source_payload_data;
assign basesoc_ethmac_tx_converter_sink_payload_last_be = basesoc_ethmac_tx_cdc_source_source_payload_last_be;
assign basesoc_ethmac_tx_converter_sink_payload_error = basesoc_ethmac_tx_cdc_source_source_payload_error;
assign basesoc_ethmac_tx_last_be_sink_valid = basesoc_ethmac_tx_converter_source_valid;
assign basesoc_ethmac_tx_converter_source_ready = basesoc_ethmac_tx_last_be_sink_ready;
assign basesoc_ethmac_tx_last_be_sink_first = basesoc_ethmac_tx_converter_source_first;
assign basesoc_ethmac_tx_last_be_sink_last = basesoc_ethmac_tx_converter_source_last;
assign basesoc_ethmac_tx_last_be_sink_payload_data = basesoc_ethmac_tx_converter_source_payload_data;
assign basesoc_ethmac_tx_last_be_sink_payload_last_be = basesoc_ethmac_tx_converter_source_payload_last_be;
assign basesoc_ethmac_tx_last_be_sink_payload_error = basesoc_ethmac_tx_converter_source_payload_error;
assign basesoc_ethmac_tx_padding_sink_valid = basesoc_ethmac_tx_last_be_source_valid;
assign basesoc_ethmac_tx_last_be_source_ready = basesoc_ethmac_tx_padding_sink_ready;
assign basesoc_ethmac_tx_padding_sink_first = basesoc_ethmac_tx_last_be_source_first;
assign basesoc_ethmac_tx_padding_sink_last = basesoc_ethmac_tx_last_be_source_last;
assign basesoc_ethmac_tx_padding_sink_payload_data = basesoc_ethmac_tx_last_be_source_payload_data;
assign basesoc_ethmac_tx_padding_sink_payload_last_be = basesoc_ethmac_tx_last_be_source_payload_last_be;
assign basesoc_ethmac_tx_padding_sink_payload_error = basesoc_ethmac_tx_last_be_source_payload_error;
assign basesoc_ethmac_bufferizeendpoints_sink_valid = basesoc_ethmac_tx_padding_source_valid;
assign basesoc_ethmac_tx_padding_source_ready = basesoc_ethmac_bufferizeendpoints_sink_ready;
assign basesoc_ethmac_bufferizeendpoints_sink_first = basesoc_ethmac_tx_padding_source_first;
assign basesoc_ethmac_bufferizeendpoints_sink_last = basesoc_ethmac_tx_padding_source_last;
assign basesoc_ethmac_bufferizeendpoints_sink_payload_data = basesoc_ethmac_tx_padding_source_payload_data;
assign basesoc_ethmac_bufferizeendpoints_sink_payload_last_be = basesoc_ethmac_tx_padding_source_payload_last_be;
assign basesoc_ethmac_bufferizeendpoints_sink_payload_error = basesoc_ethmac_tx_padding_source_payload_error;
assign basesoc_ethmac_tx_preamble_sink_valid = basesoc_ethmac_liteethmaccrc32inserter_source_valid;
assign basesoc_ethmac_liteethmaccrc32inserter_source_ready = basesoc_ethmac_tx_preamble_sink_ready;
assign basesoc_ethmac_tx_preamble_sink_first = basesoc_ethmac_liteethmaccrc32inserter_source_first;
assign basesoc_ethmac_tx_preamble_sink_last = basesoc_ethmac_liteethmaccrc32inserter_source_last;
assign basesoc_ethmac_tx_preamble_sink_payload_data = basesoc_ethmac_liteethmaccrc32inserter_source_payload_data;
assign basesoc_ethmac_tx_preamble_sink_payload_last_be = basesoc_ethmac_liteethmaccrc32inserter_source_payload_last_be;
assign basesoc_ethmac_tx_preamble_sink_payload_error = basesoc_ethmac_liteethmaccrc32inserter_source_payload_error;
assign basesoc_ethmac_tx_gap_sink_valid = basesoc_ethmac_tx_preamble_source_valid;
assign basesoc_ethmac_tx_preamble_source_ready = basesoc_ethmac_tx_gap_sink_ready;
assign basesoc_ethmac_tx_gap_sink_first = basesoc_ethmac_tx_preamble_source_first;
assign basesoc_ethmac_tx_gap_sink_last = basesoc_ethmac_tx_preamble_source_last;
assign basesoc_ethmac_tx_gap_sink_payload_data = basesoc_ethmac_tx_preamble_source_payload_data;
assign basesoc_ethmac_tx_gap_sink_payload_last_be = basesoc_ethmac_tx_preamble_source_payload_last_be;
assign basesoc_ethmac_tx_gap_sink_payload_error = basesoc_ethmac_tx_preamble_source_payload_error;
assign ethphy_liteethphymiitx_sink_sink_valid = basesoc_ethmac_tx_gap_source_valid;
assign basesoc_ethmac_tx_gap_source_ready = ethphy_liteethphymiitx_sink_sink_ready;
assign ethphy_liteethphymiitx_sink_sink_first = basesoc_ethmac_tx_gap_source_first;
assign ethphy_liteethphymiitx_sink_sink_last = basesoc_ethmac_tx_gap_source_last;
assign ethphy_liteethphymiitx_sink_sink_payload_data = basesoc_ethmac_tx_gap_source_payload_data;
assign ethphy_liteethphymiitx_sink_sink_payload_last_be = basesoc_ethmac_tx_gap_source_payload_last_be;
assign ethphy_liteethphymiitx_sink_sink_payload_error = basesoc_ethmac_tx_gap_source_payload_error;
assign basesoc_ethmac_pulsesynchronizer0_i = basesoc_ethmac_rx_preamble_error;
assign basesoc_ethmac_pulsesynchronizer1_i = basesoc_ethmac_rx_crc_error;
assign basesoc_ethmac_rx_preamble_source_payload_data = basesoc_ethmac_rx_preamble_sink_payload_data;
assign basesoc_ethmac_rx_preamble_source_payload_last_be = basesoc_ethmac_rx_preamble_sink_payload_last_be;
always @(*) begin
	basesoc_ethmac_rx_preamble_source_first <= 1'd0;
	basesoc_ethmac_rx_preamble_source_payload_error <= 1'd0;
	basesoc_ethmac_rx_preamble_error <= 1'd0;
	basesoc_ethmac_rx_preamble_source_valid <= 1'd0;
	rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
	basesoc_ethmac_rx_preamble_sink_ready <= 1'd0;
	basesoc_ethmac_rx_preamble_source_last <= 1'd0;
	rxdatapath_liteethmacpreamblechecker_next_state <= rxdatapath_liteethmacpreamblechecker_state;
	case (rxdatapath_liteethmacpreamblechecker_state)
		1'd1: begin
			basesoc_ethmac_rx_preamble_source_valid <= basesoc_ethmac_rx_preamble_sink_valid;
			basesoc_ethmac_rx_preamble_sink_ready <= basesoc_ethmac_rx_preamble_source_ready;
			basesoc_ethmac_rx_preamble_source_first <= basesoc_ethmac_rx_preamble_sink_first;
			basesoc_ethmac_rx_preamble_source_last <= basesoc_ethmac_rx_preamble_sink_last;
			basesoc_ethmac_rx_preamble_source_payload_error <= basesoc_ethmac_rx_preamble_sink_payload_error;
			if (((basesoc_ethmac_rx_preamble_source_valid & basesoc_ethmac_rx_preamble_source_last) & basesoc_ethmac_rx_preamble_source_ready)) begin
				rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_ethmac_rx_preamble_sink_ready <= 1'd1;
			if (((basesoc_ethmac_rx_preamble_sink_valid & (~basesoc_ethmac_rx_preamble_sink_last)) & (basesoc_ethmac_rx_preamble_sink_payload_data == basesoc_ethmac_rx_preamble_preamble[63:56]))) begin
				rxdatapath_liteethmacpreamblechecker_next_state <= 1'd1;
			end
			if ((basesoc_ethmac_rx_preamble_sink_valid & basesoc_ethmac_rx_preamble_sink_last)) begin
				basesoc_ethmac_rx_preamble_error <= 1'd1;
			end
		end
	endcase
end
assign basesoc_ethmac_pulsesynchronizer0_o = (basesoc_ethmac_pulsesynchronizer0_toggle_o ^ basesoc_ethmac_pulsesynchronizer0_toggle_o_r);
assign basesoc_ethmac_rx_crc_fifo_full = (basesoc_ethmac_rx_crc_syncfifo_level == 3'd4);
assign basesoc_ethmac_rx_crc_fifo_in = (basesoc_ethmac_rx_crc_sink_sink_valid & ((~basesoc_ethmac_rx_crc_fifo_full) | basesoc_ethmac_rx_crc_fifo_out));
assign basesoc_ethmac_rx_crc_fifo_out = (basesoc_ethmac_rx_crc_source_source_valid & basesoc_ethmac_rx_crc_source_source_ready);
assign basesoc_ethmac_rx_crc_syncfifo_sink_first = basesoc_ethmac_rx_crc_sink_sink_first;
assign basesoc_ethmac_rx_crc_syncfifo_sink_last = basesoc_ethmac_rx_crc_sink_sink_last;
assign basesoc_ethmac_rx_crc_syncfifo_sink_payload_data = basesoc_ethmac_rx_crc_sink_sink_payload_data;
assign basesoc_ethmac_rx_crc_syncfifo_sink_payload_last_be = basesoc_ethmac_rx_crc_sink_sink_payload_last_be;
assign basesoc_ethmac_rx_crc_syncfifo_sink_payload_error = basesoc_ethmac_rx_crc_sink_sink_payload_error;
always @(*) begin
	basesoc_ethmac_rx_crc_syncfifo_sink_valid <= 1'd0;
	basesoc_ethmac_rx_crc_syncfifo_sink_valid <= basesoc_ethmac_rx_crc_sink_sink_valid;
	basesoc_ethmac_rx_crc_syncfifo_sink_valid <= basesoc_ethmac_rx_crc_fifo_in;
end
always @(*) begin
	basesoc_ethmac_rx_crc_sink_sink_ready <= 1'd0;
	basesoc_ethmac_rx_crc_sink_sink_ready <= basesoc_ethmac_rx_crc_syncfifo_sink_ready;
	basesoc_ethmac_rx_crc_sink_sink_ready <= basesoc_ethmac_rx_crc_fifo_in;
end
assign basesoc_ethmac_rx_crc_crc_data0 = basesoc_ethmac_rx_crc_sink_sink_payload_data;
assign basesoc_ethmac_rx_crc_crc_last_be0 = basesoc_ethmac_rx_crc_sink_sink_payload_last_be;
assign basesoc_ethmac_rx_crc_sink_sink_valid = basesoc_ethmac_rx_crc_source_valid;
assign basesoc_ethmac_rx_crc_source_ready = basesoc_ethmac_rx_crc_sink_sink_ready;
assign basesoc_ethmac_rx_crc_sink_sink_first = basesoc_ethmac_rx_crc_source_first;
assign basesoc_ethmac_rx_crc_sink_sink_last = basesoc_ethmac_rx_crc_source_last;
assign basesoc_ethmac_rx_crc_sink_sink_payload_data = basesoc_ethmac_rx_crc_source_payload_data;
assign basesoc_ethmac_rx_crc_sink_sink_payload_last_be = basesoc_ethmac_rx_crc_source_payload_last_be;
assign basesoc_ethmac_rx_crc_sink_sink_payload_error = basesoc_ethmac_rx_crc_source_payload_error;
always @(*) begin
	basesoc_ethmac_rx_crc_crc_last_be1 <= 1'd0;
	if ((basesoc_ethmac_rx_crc_crc_last_be0 != 1'd0)) begin
		basesoc_ethmac_rx_crc_crc_last_be1 <= basesoc_ethmac_rx_crc_crc_last_be0;
	end else begin
		basesoc_ethmac_rx_crc_crc_last_be1 <= 1'd1;
	end
end
assign basesoc_ethmac_rx_crc_crc_data1 = basesoc_ethmac_rx_crc_crc_data0[7:0];
assign basesoc_ethmac_rx_crc_crc_last = basesoc_ethmac_rx_crc_crc_reg;
always @(*) begin
	basesoc_ethmac_rx_crc_crc_value <= 32'd0;
	basesoc_ethmac_rx_crc_crc_error0 <= 1'd0;
	if (basesoc_ethmac_rx_crc_crc_last_be1) begin
		basesoc_ethmac_rx_crc_crc_value <= {t_slice_proxy63[0], t_slice_proxy62[1], t_slice_proxy61[2], t_slice_proxy60[3], t_slice_proxy59[4], t_slice_proxy58[5], t_slice_proxy57[6], t_slice_proxy56[7], t_slice_proxy55[8], t_slice_proxy54[9], t_slice_proxy53[10], t_slice_proxy52[11], t_slice_proxy51[12], t_slice_proxy50[13], t_slice_proxy49[14], t_slice_proxy48[15], t_slice_proxy47[16], t_slice_proxy46[17], t_slice_proxy45[18], t_slice_proxy44[19], t_slice_proxy43[20], t_slice_proxy42[21], t_slice_proxy41[22], t_slice_proxy40[23], t_slice_proxy39[24], t_slice_proxy38[25], t_slice_proxy37[26], t_slice_proxy36[27], t_slice_proxy35[28], t_slice_proxy34[29], t_slice_proxy33[30], t_slice_proxy32[31]};
		basesoc_ethmac_rx_crc_crc_error0 <= (basesoc_ethmac_rx_crc_crc_next != 32'd3338984827);
	end
end
always @(*) begin
	basesoc_ethmac_rx_crc_crc_next <= 32'd0;
	basesoc_ethmac_rx_crc_crc_next[0] <= (((basesoc_ethmac_rx_crc_crc_last[24] ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[1] <= (((((((basesoc_ethmac_rx_crc_crc_last[25] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[2] <= (((((((((basesoc_ethmac_rx_crc_crc_last[26] ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[3] <= (((((((basesoc_ethmac_rx_crc_crc_last[27] ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[4] <= (((((((((basesoc_ethmac_rx_crc_crc_last[28] ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[5] <= (((((((((((((basesoc_ethmac_rx_crc_crc_last[29] ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[6] <= (((((((((((basesoc_ethmac_rx_crc_crc_last[30] ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[7] <= (((((((((basesoc_ethmac_rx_crc_crc_last[31] ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[8] <= ((((((((basesoc_ethmac_rx_crc_crc_last[0] ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[9] <= ((((((((basesoc_ethmac_rx_crc_crc_last[1] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[10] <= ((((((((basesoc_ethmac_rx_crc_crc_last[2] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[11] <= ((((((((basesoc_ethmac_rx_crc_crc_last[3] ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[12] <= ((((((((((((basesoc_ethmac_rx_crc_crc_last[4] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[13] <= ((((((((((((basesoc_ethmac_rx_crc_crc_last[5] ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[14] <= ((((((((((basesoc_ethmac_rx_crc_crc_last[6] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]);
	basesoc_ethmac_rx_crc_crc_next[15] <= ((((((((basesoc_ethmac_rx_crc_crc_last[7] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]);
	basesoc_ethmac_rx_crc_crc_next[16] <= ((((((basesoc_ethmac_rx_crc_crc_last[8] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[17] <= ((((((basesoc_ethmac_rx_crc_crc_last[9] ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[18] <= ((((((basesoc_ethmac_rx_crc_crc_last[10] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]);
	basesoc_ethmac_rx_crc_crc_next[19] <= ((((basesoc_ethmac_rx_crc_crc_last[11] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]);
	basesoc_ethmac_rx_crc_crc_next[20] <= ((basesoc_ethmac_rx_crc_crc_last[12] ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]);
	basesoc_ethmac_rx_crc_crc_next[21] <= ((basesoc_ethmac_rx_crc_crc_last[13] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]);
	basesoc_ethmac_rx_crc_crc_next[22] <= ((basesoc_ethmac_rx_crc_crc_last[14] ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[23] <= ((((((basesoc_ethmac_rx_crc_crc_last[15] ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_data1[6]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[24] <= ((((((basesoc_ethmac_rx_crc_crc_last[16] ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[25] <= ((((basesoc_ethmac_rx_crc_crc_last[17] ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]);
	basesoc_ethmac_rx_crc_crc_next[26] <= ((((((((basesoc_ethmac_rx_crc_crc_last[18] ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]) ^ basesoc_ethmac_rx_crc_crc_last[24]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_data1[7]);
	basesoc_ethmac_rx_crc_crc_next[27] <= ((((((((basesoc_ethmac_rx_crc_crc_last[19] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]) ^ basesoc_ethmac_rx_crc_crc_last[25]) ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_data1[6]);
	basesoc_ethmac_rx_crc_crc_next[28] <= ((((((basesoc_ethmac_rx_crc_crc_last[20] ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]) ^ basesoc_ethmac_rx_crc_crc_last[26]) ^ basesoc_ethmac_rx_crc_crc_data1[5]);
	basesoc_ethmac_rx_crc_crc_next[29] <= ((((((basesoc_ethmac_rx_crc_crc_last[21] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[30]) ^ basesoc_ethmac_rx_crc_crc_data1[1]) ^ basesoc_ethmac_rx_crc_crc_last[27]) ^ basesoc_ethmac_rx_crc_crc_data1[4]);
	basesoc_ethmac_rx_crc_crc_next[30] <= ((((basesoc_ethmac_rx_crc_crc_last[22] ^ basesoc_ethmac_rx_crc_crc_last[31]) ^ basesoc_ethmac_rx_crc_crc_data1[0]) ^ basesoc_ethmac_rx_crc_crc_last[28]) ^ basesoc_ethmac_rx_crc_crc_data1[3]);
	basesoc_ethmac_rx_crc_crc_next[31] <= ((basesoc_ethmac_rx_crc_crc_last[23] ^ basesoc_ethmac_rx_crc_crc_last[29]) ^ basesoc_ethmac_rx_crc_crc_data1[2]);
end
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_din = {basesoc_ethmac_rx_crc_syncfifo_fifo_in_last, basesoc_ethmac_rx_crc_syncfifo_fifo_in_first, basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_error, basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_last_be, basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_data};
assign {basesoc_ethmac_rx_crc_syncfifo_fifo_out_last, basesoc_ethmac_rx_crc_syncfifo_fifo_out_first, basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_error, basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_last_be, basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_data} = basesoc_ethmac_rx_crc_syncfifo_syncfifo_dout;
assign basesoc_ethmac_rx_crc_syncfifo_sink_ready = basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable;
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_we = basesoc_ethmac_rx_crc_syncfifo_sink_valid;
assign basesoc_ethmac_rx_crc_syncfifo_fifo_in_first = basesoc_ethmac_rx_crc_syncfifo_sink_first;
assign basesoc_ethmac_rx_crc_syncfifo_fifo_in_last = basesoc_ethmac_rx_crc_syncfifo_sink_last;
assign basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_data = basesoc_ethmac_rx_crc_syncfifo_sink_payload_data;
assign basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_last_be = basesoc_ethmac_rx_crc_syncfifo_sink_payload_last_be;
assign basesoc_ethmac_rx_crc_syncfifo_fifo_in_payload_error = basesoc_ethmac_rx_crc_syncfifo_sink_payload_error;
assign basesoc_ethmac_rx_crc_syncfifo_source_valid = basesoc_ethmac_rx_crc_syncfifo_syncfifo_readable;
assign basesoc_ethmac_rx_crc_syncfifo_source_first = basesoc_ethmac_rx_crc_syncfifo_fifo_out_first;
assign basesoc_ethmac_rx_crc_syncfifo_source_last = basesoc_ethmac_rx_crc_syncfifo_fifo_out_last;
assign basesoc_ethmac_rx_crc_syncfifo_source_payload_data = basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_data;
assign basesoc_ethmac_rx_crc_syncfifo_source_payload_last_be = basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_last_be;
assign basesoc_ethmac_rx_crc_syncfifo_source_payload_error = basesoc_ethmac_rx_crc_syncfifo_fifo_out_payload_error;
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_re = basesoc_ethmac_rx_crc_syncfifo_source_ready;
always @(*) begin
	basesoc_ethmac_rx_crc_syncfifo_wrport_adr <= 3'd0;
	if (basesoc_ethmac_rx_crc_syncfifo_replace) begin
		basesoc_ethmac_rx_crc_syncfifo_wrport_adr <= (basesoc_ethmac_rx_crc_syncfifo_produce - 1'd1);
	end else begin
		basesoc_ethmac_rx_crc_syncfifo_wrport_adr <= basesoc_ethmac_rx_crc_syncfifo_produce;
	end
end
assign basesoc_ethmac_rx_crc_syncfifo_wrport_dat_w = basesoc_ethmac_rx_crc_syncfifo_syncfifo_din;
assign basesoc_ethmac_rx_crc_syncfifo_wrport_we = (basesoc_ethmac_rx_crc_syncfifo_syncfifo_we & (basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable | basesoc_ethmac_rx_crc_syncfifo_replace));
assign basesoc_ethmac_rx_crc_syncfifo_do_read = (basesoc_ethmac_rx_crc_syncfifo_syncfifo_readable & basesoc_ethmac_rx_crc_syncfifo_syncfifo_re);
assign basesoc_ethmac_rx_crc_syncfifo_rdport_adr = basesoc_ethmac_rx_crc_syncfifo_consume;
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_dout = basesoc_ethmac_rx_crc_syncfifo_rdport_dat_r;
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable = (basesoc_ethmac_rx_crc_syncfifo_level != 3'd5);
assign basesoc_ethmac_rx_crc_syncfifo_syncfifo_readable = (basesoc_ethmac_rx_crc_syncfifo_level != 1'd0);
always @(*) begin
	basesoc_ethmac_rx_crc_syncfifo_source_ready <= 1'd0;
	rxdatapath_bufferizeendpoints_next_state <= 2'd0;
	basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value0 <= 1'd0;
	basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd0;
	basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value1 <= 1'd0;
	basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd0;
	basesoc_ethmac_rx_crc_fifo_reset <= 1'd0;
	basesoc_ethmac_rx_crc_source_source_valid <= 1'd0;
	basesoc_ethmac_rx_crc_crc_ce <= 1'd0;
	basesoc_ethmac_rx_crc_source_source_first <= 1'd0;
	basesoc_ethmac_rx_crc_crc_reset <= 1'd0;
	basesoc_ethmac_rx_crc_source_source_last <= 1'd0;
	basesoc_ethmac_rx_crc_source_source_payload_data <= 8'd0;
	basesoc_ethmac_rx_crc_source_source_payload_last_be <= 1'd0;
	basesoc_ethmac_rx_crc_source_source_payload_error <= 1'd0;
	basesoc_ethmac_rx_crc_error <= 1'd0;
	rxdatapath_bufferizeendpoints_next_state <= rxdatapath_bufferizeendpoints_state;
	case (rxdatapath_bufferizeendpoints_state)
		1'd1: begin
			if ((basesoc_ethmac_rx_crc_sink_sink_valid & basesoc_ethmac_rx_crc_sink_sink_ready)) begin
				basesoc_ethmac_rx_crc_crc_ce <= 1'd1;
				rxdatapath_bufferizeendpoints_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_ethmac_rx_crc_syncfifo_source_ready <= basesoc_ethmac_rx_crc_fifo_out;
			basesoc_ethmac_rx_crc_source_source_valid <= (basesoc_ethmac_rx_crc_sink_sink_valid & basesoc_ethmac_rx_crc_fifo_full);
			basesoc_ethmac_rx_crc_source_source_payload_data <= basesoc_ethmac_rx_crc_syncfifo_source_payload_data;
			basesoc_ethmac_rx_crc_source_source_payload_last_be <= basesoc_ethmac_rx_crc_syncfifo_source_payload_last_be;
			basesoc_ethmac_rx_crc_source_source_payload_error <= basesoc_ethmac_rx_crc_syncfifo_source_payload_error;
			if (1'd1) begin
				basesoc_ethmac_rx_crc_source_source_last <= basesoc_ethmac_rx_crc_sink_sink_last;
				basesoc_ethmac_rx_crc_source_source_payload_last_be <= basesoc_ethmac_rx_crc_sink_sink_payload_last_be;
			end else begin
				if ((basesoc_ethmac_rx_crc_sink_sink_payload_last_be & 4'd15)) begin
					basesoc_ethmac_rx_crc_source_source_last <= basesoc_ethmac_rx_crc_sink_sink_last;
					basesoc_ethmac_rx_crc_source_source_payload_last_be <= (basesoc_ethmac_rx_crc_sink_sink_payload_last_be <<< -3'd3);
				end else begin
					basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value0 <= (basesoc_ethmac_rx_crc_sink_sink_payload_last_be >>> 3'd4);
					basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd1;
					basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value1 <= basesoc_ethmac_rx_crc_crc_error0;
					basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd1;
				end
			end
			basesoc_ethmac_rx_crc_source_source_payload_error <= (basesoc_ethmac_rx_crc_sink_sink_payload_error | {1{(basesoc_ethmac_rx_crc_crc_error0 & basesoc_ethmac_rx_crc_sink_sink_last)}});
			basesoc_ethmac_rx_crc_error <= ((basesoc_ethmac_rx_crc_sink_sink_valid & basesoc_ethmac_rx_crc_sink_sink_last) & basesoc_ethmac_rx_crc_crc_error0);
			if ((basesoc_ethmac_rx_crc_sink_sink_valid & basesoc_ethmac_rx_crc_sink_sink_ready)) begin
				basesoc_ethmac_rx_crc_crc_ce <= 1'd1;
				if ((basesoc_ethmac_rx_crc_sink_sink_last & (basesoc_ethmac_rx_crc_sink_sink_payload_last_be > 4'd15))) begin
					rxdatapath_bufferizeendpoints_next_state <= 2'd3;
				end else begin
					if (basesoc_ethmac_rx_crc_sink_sink_last) begin
						rxdatapath_bufferizeendpoints_next_state <= 1'd0;
					end
				end
			end
		end
		2'd3: begin
			basesoc_ethmac_rx_crc_source_source_valid <= basesoc_ethmac_rx_crc_syncfifo_source_valid;
			basesoc_ethmac_rx_crc_syncfifo_source_ready <= basesoc_ethmac_rx_crc_source_source_ready;
			basesoc_ethmac_rx_crc_source_source_first <= basesoc_ethmac_rx_crc_syncfifo_source_first;
			basesoc_ethmac_rx_crc_source_source_last <= basesoc_ethmac_rx_crc_syncfifo_source_last;
			basesoc_ethmac_rx_crc_source_source_payload_data <= basesoc_ethmac_rx_crc_syncfifo_source_payload_data;
			basesoc_ethmac_rx_crc_source_source_payload_last_be <= basesoc_ethmac_rx_crc_syncfifo_source_payload_last_be;
			basesoc_ethmac_rx_crc_source_source_payload_error <= basesoc_ethmac_rx_crc_syncfifo_source_payload_error;
			basesoc_ethmac_rx_crc_source_source_payload_error <= (basesoc_ethmac_rx_crc_syncfifo_source_payload_error | {1{basesoc_ethmac_rx_crc_crc_error1}});
			basesoc_ethmac_rx_crc_source_source_payload_last_be <= basesoc_ethmac_rx_crc_last_be;
			if ((basesoc_ethmac_rx_crc_source_source_valid & basesoc_ethmac_rx_crc_source_source_ready)) begin
				rxdatapath_bufferizeendpoints_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_ethmac_rx_crc_crc_reset <= 1'd1;
			basesoc_ethmac_rx_crc_fifo_reset <= 1'd1;
			rxdatapath_bufferizeendpoints_next_state <= 1'd1;
		end
	endcase
end
assign basesoc_ethmac_rx_crc_sink_ready = ((~basesoc_ethmac_rx_crc_source_valid) | basesoc_ethmac_rx_crc_source_ready);
assign basesoc_ethmac_pulsesynchronizer1_o = (basesoc_ethmac_pulsesynchronizer1_toggle_o ^ basesoc_ethmac_pulsesynchronizer1_toggle_o_r);
assign basesoc_ethmac_rx_padding_source_valid = basesoc_ethmac_rx_padding_sink_valid;
assign basesoc_ethmac_rx_padding_sink_ready = basesoc_ethmac_rx_padding_source_ready;
assign basesoc_ethmac_rx_padding_source_first = basesoc_ethmac_rx_padding_sink_first;
assign basesoc_ethmac_rx_padding_source_last = basesoc_ethmac_rx_padding_sink_last;
assign basesoc_ethmac_rx_padding_source_payload_data = basesoc_ethmac_rx_padding_sink_payload_data;
assign basesoc_ethmac_rx_padding_source_payload_last_be = basesoc_ethmac_rx_padding_sink_payload_last_be;
assign basesoc_ethmac_rx_padding_source_payload_error = basesoc_ethmac_rx_padding_sink_payload_error;
assign basesoc_ethmac_rx_last_be_source_valid = basesoc_ethmac_rx_last_be_sink_valid;
assign basesoc_ethmac_rx_last_be_sink_ready = basesoc_ethmac_rx_last_be_source_ready;
assign basesoc_ethmac_rx_last_be_source_first = basesoc_ethmac_rx_last_be_sink_first;
assign basesoc_ethmac_rx_last_be_source_last = basesoc_ethmac_rx_last_be_sink_last;
assign basesoc_ethmac_rx_last_be_source_payload_data = basesoc_ethmac_rx_last_be_sink_payload_data;
assign basesoc_ethmac_rx_last_be_source_payload_error = basesoc_ethmac_rx_last_be_sink_payload_error;
always @(*) begin
	basesoc_ethmac_rx_last_be_source_payload_last_be <= 1'd0;
	basesoc_ethmac_rx_last_be_source_payload_last_be <= basesoc_ethmac_rx_last_be_sink_payload_last_be;
	if (1'd1) begin
		basesoc_ethmac_rx_last_be_source_payload_last_be <= basesoc_ethmac_rx_last_be_sink_last;
	end
end
assign basesoc_ethmac_rx_converter_converter_sink_valid = basesoc_ethmac_rx_converter_sink_valid;
assign basesoc_ethmac_rx_converter_converter_sink_first = basesoc_ethmac_rx_converter_sink_first;
assign basesoc_ethmac_rx_converter_converter_sink_last = basesoc_ethmac_rx_converter_sink_last;
assign basesoc_ethmac_rx_converter_sink_ready = basesoc_ethmac_rx_converter_converter_sink_ready;
assign basesoc_ethmac_rx_converter_converter_sink_payload_data = {basesoc_ethmac_rx_converter_sink_payload_error, basesoc_ethmac_rx_converter_sink_payload_last_be, basesoc_ethmac_rx_converter_sink_payload_data};
assign basesoc_ethmac_rx_converter_source_valid = basesoc_ethmac_rx_converter_source_source_valid;
assign basesoc_ethmac_rx_converter_source_first = basesoc_ethmac_rx_converter_source_source_first;
assign basesoc_ethmac_rx_converter_source_last = basesoc_ethmac_rx_converter_source_source_last;
assign basesoc_ethmac_rx_converter_source_source_ready = basesoc_ethmac_rx_converter_source_ready;
always @(*) begin
	basesoc_ethmac_rx_converter_source_payload_data <= 32'd0;
	basesoc_ethmac_rx_converter_source_payload_data[7:0] <= basesoc_ethmac_rx_converter_source_source_payload_data[7:0];
	basesoc_ethmac_rx_converter_source_payload_data[15:8] <= basesoc_ethmac_rx_converter_source_source_payload_data[17:10];
	basesoc_ethmac_rx_converter_source_payload_data[23:16] <= basesoc_ethmac_rx_converter_source_source_payload_data[27:20];
	basesoc_ethmac_rx_converter_source_payload_data[31:24] <= basesoc_ethmac_rx_converter_source_source_payload_data[37:30];
end
always @(*) begin
	basesoc_ethmac_rx_converter_source_payload_last_be <= 4'd0;
	basesoc_ethmac_rx_converter_source_payload_last_be[0] <= basesoc_ethmac_rx_converter_source_source_payload_data[8];
	basesoc_ethmac_rx_converter_source_payload_last_be[1] <= basesoc_ethmac_rx_converter_source_source_payload_data[18];
	basesoc_ethmac_rx_converter_source_payload_last_be[2] <= basesoc_ethmac_rx_converter_source_source_payload_data[28];
	basesoc_ethmac_rx_converter_source_payload_last_be[3] <= basesoc_ethmac_rx_converter_source_source_payload_data[38];
end
always @(*) begin
	basesoc_ethmac_rx_converter_source_payload_error <= 4'd0;
	basesoc_ethmac_rx_converter_source_payload_error[0] <= basesoc_ethmac_rx_converter_source_source_payload_data[9];
	basesoc_ethmac_rx_converter_source_payload_error[1] <= basesoc_ethmac_rx_converter_source_source_payload_data[19];
	basesoc_ethmac_rx_converter_source_payload_error[2] <= basesoc_ethmac_rx_converter_source_source_payload_data[29];
	basesoc_ethmac_rx_converter_source_payload_error[3] <= basesoc_ethmac_rx_converter_source_source_payload_data[39];
end
assign basesoc_ethmac_rx_converter_source_source_valid = basesoc_ethmac_rx_converter_converter_source_valid;
assign basesoc_ethmac_rx_converter_converter_source_ready = basesoc_ethmac_rx_converter_source_source_ready;
assign basesoc_ethmac_rx_converter_source_source_first = basesoc_ethmac_rx_converter_converter_source_first;
assign basesoc_ethmac_rx_converter_source_source_last = basesoc_ethmac_rx_converter_converter_source_last;
assign basesoc_ethmac_rx_converter_source_source_payload_data = basesoc_ethmac_rx_converter_converter_source_payload_data;
assign basesoc_ethmac_rx_converter_converter_sink_ready = ((~basesoc_ethmac_rx_converter_converter_strobe_all) | basesoc_ethmac_rx_converter_converter_source_ready);
assign basesoc_ethmac_rx_converter_converter_source_valid = basesoc_ethmac_rx_converter_converter_strobe_all;
assign basesoc_ethmac_rx_converter_converter_load_part = (basesoc_ethmac_rx_converter_converter_sink_valid & basesoc_ethmac_rx_converter_converter_sink_ready);
assign basesoc_ethmac_rx_cdc_cdc_sink_valid = basesoc_ethmac_rx_cdc_sink_sink_valid;
assign basesoc_ethmac_rx_cdc_sink_sink_ready = basesoc_ethmac_rx_cdc_cdc_sink_ready;
assign basesoc_ethmac_rx_cdc_cdc_sink_first = basesoc_ethmac_rx_cdc_sink_sink_first;
assign basesoc_ethmac_rx_cdc_cdc_sink_last = basesoc_ethmac_rx_cdc_sink_sink_last;
assign basesoc_ethmac_rx_cdc_cdc_sink_payload_data = basesoc_ethmac_rx_cdc_sink_sink_payload_data;
assign basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be = basesoc_ethmac_rx_cdc_sink_sink_payload_last_be;
assign basesoc_ethmac_rx_cdc_cdc_sink_payload_error = basesoc_ethmac_rx_cdc_sink_sink_payload_error;
assign basesoc_ethmac_rx_cdc_source_source_valid = basesoc_ethmac_rx_cdc_cdc_source_valid;
assign basesoc_ethmac_rx_cdc_cdc_source_ready = basesoc_ethmac_rx_cdc_source_source_ready;
assign basesoc_ethmac_rx_cdc_source_source_first = basesoc_ethmac_rx_cdc_cdc_source_first;
assign basesoc_ethmac_rx_cdc_source_source_last = basesoc_ethmac_rx_cdc_cdc_source_last;
assign basesoc_ethmac_rx_cdc_source_source_payload_data = basesoc_ethmac_rx_cdc_cdc_source_payload_data;
assign basesoc_ethmac_rx_cdc_source_source_payload_last_be = basesoc_ethmac_rx_cdc_cdc_source_payload_last_be;
assign basesoc_ethmac_rx_cdc_source_source_payload_error = basesoc_ethmac_rx_cdc_cdc_source_payload_error;
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_din = {basesoc_ethmac_rx_cdc_cdc_fifo_in_last, basesoc_ethmac_rx_cdc_cdc_fifo_in_first, basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error, basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be, basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data};
assign {basesoc_ethmac_rx_cdc_cdc_fifo_out_last, basesoc_ethmac_rx_cdc_cdc_fifo_out_first, basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error, basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be, basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data} = basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout;
assign basesoc_ethmac_rx_cdc_cdc_sink_ready = basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable;
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_we = basesoc_ethmac_rx_cdc_cdc_sink_valid;
assign basesoc_ethmac_rx_cdc_cdc_fifo_in_first = basesoc_ethmac_rx_cdc_cdc_sink_first;
assign basesoc_ethmac_rx_cdc_cdc_fifo_in_last = basesoc_ethmac_rx_cdc_cdc_sink_last;
assign basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data = basesoc_ethmac_rx_cdc_cdc_sink_payload_data;
assign basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be = basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be;
assign basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error = basesoc_ethmac_rx_cdc_cdc_sink_payload_error;
assign basesoc_ethmac_rx_cdc_cdc_source_valid = basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable;
assign basesoc_ethmac_rx_cdc_cdc_source_first = basesoc_ethmac_rx_cdc_cdc_fifo_out_first;
assign basesoc_ethmac_rx_cdc_cdc_source_last = basesoc_ethmac_rx_cdc_cdc_fifo_out_last;
assign basesoc_ethmac_rx_cdc_cdc_source_payload_data = basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data;
assign basesoc_ethmac_rx_cdc_cdc_source_payload_last_be = basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
assign basesoc_ethmac_rx_cdc_cdc_source_payload_error = basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error;
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_re = basesoc_ethmac_rx_cdc_cdc_source_ready;
assign basesoc_ethmac_rx_cdc_cdc_graycounter0_ce = (basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable & basesoc_ethmac_rx_cdc_cdc_asyncfifo_we);
assign basesoc_ethmac_rx_cdc_cdc_graycounter1_ce = (basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable & basesoc_ethmac_rx_cdc_cdc_asyncfifo_re);
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable = (((basesoc_ethmac_rx_cdc_cdc_graycounter0_q[5] == basesoc_ethmac_rx_cdc_cdc_consume_wdomain[5]) | (basesoc_ethmac_rx_cdc_cdc_graycounter0_q[4] == basesoc_ethmac_rx_cdc_cdc_consume_wdomain[4])) | (basesoc_ethmac_rx_cdc_cdc_graycounter0_q[3:0] != basesoc_ethmac_rx_cdc_cdc_consume_wdomain[3:0]));
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable = (basesoc_ethmac_rx_cdc_cdc_graycounter1_q != basesoc_ethmac_rx_cdc_cdc_produce_rdomain);
assign basesoc_ethmac_rx_cdc_cdc_wrport_adr = basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary[4:0];
assign basesoc_ethmac_rx_cdc_cdc_wrport_dat_w = basesoc_ethmac_rx_cdc_cdc_asyncfifo_din;
assign basesoc_ethmac_rx_cdc_cdc_wrport_we = basesoc_ethmac_rx_cdc_cdc_graycounter0_ce;
assign basesoc_ethmac_rx_cdc_cdc_rdport_adr = basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout = basesoc_ethmac_rx_cdc_cdc_rdport_dat_r;
always @(*) begin
	basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
	if (basesoc_ethmac_rx_cdc_cdc_graycounter0_ce) begin
		basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= (basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary;
	end
end
assign basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next = (basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary ^ basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
	if (basesoc_ethmac_rx_cdc_cdc_graycounter1_ce) begin
		basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= (basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary;
	end
end
assign basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next = (basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary ^ basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign basesoc_ethmac_rx_preamble_sink_valid = ethphy_liteethphymiirx_source_source_valid;
assign ethphy_liteethphymiirx_source_source_ready = basesoc_ethmac_rx_preamble_sink_ready;
assign basesoc_ethmac_rx_preamble_sink_first = ethphy_liteethphymiirx_source_source_first;
assign basesoc_ethmac_rx_preamble_sink_last = ethphy_liteethphymiirx_source_source_last;
assign basesoc_ethmac_rx_preamble_sink_payload_data = ethphy_liteethphymiirx_source_source_payload_data;
assign basesoc_ethmac_rx_preamble_sink_payload_last_be = ethphy_liteethphymiirx_source_source_payload_last_be;
assign basesoc_ethmac_rx_preamble_sink_payload_error = ethphy_liteethphymiirx_source_source_payload_error;
assign basesoc_ethmac_rx_crc_sink_valid = basesoc_ethmac_rx_preamble_source_valid;
assign basesoc_ethmac_rx_preamble_source_ready = basesoc_ethmac_rx_crc_sink_ready;
assign basesoc_ethmac_rx_crc_sink_first = basesoc_ethmac_rx_preamble_source_first;
assign basesoc_ethmac_rx_crc_sink_last = basesoc_ethmac_rx_preamble_source_last;
assign basesoc_ethmac_rx_crc_sink_payload_data = basesoc_ethmac_rx_preamble_source_payload_data;
assign basesoc_ethmac_rx_crc_sink_payload_last_be = basesoc_ethmac_rx_preamble_source_payload_last_be;
assign basesoc_ethmac_rx_crc_sink_payload_error = basesoc_ethmac_rx_preamble_source_payload_error;
assign basesoc_ethmac_rx_padding_sink_valid = basesoc_ethmac_rx_crc_source_source_valid;
assign basesoc_ethmac_rx_crc_source_source_ready = basesoc_ethmac_rx_padding_sink_ready;
assign basesoc_ethmac_rx_padding_sink_first = basesoc_ethmac_rx_crc_source_source_first;
assign basesoc_ethmac_rx_padding_sink_last = basesoc_ethmac_rx_crc_source_source_last;
assign basesoc_ethmac_rx_padding_sink_payload_data = basesoc_ethmac_rx_crc_source_source_payload_data;
assign basesoc_ethmac_rx_padding_sink_payload_last_be = basesoc_ethmac_rx_crc_source_source_payload_last_be;
assign basesoc_ethmac_rx_padding_sink_payload_error = basesoc_ethmac_rx_crc_source_source_payload_error;
assign basesoc_ethmac_rx_last_be_sink_valid = basesoc_ethmac_rx_padding_source_valid;
assign basesoc_ethmac_rx_padding_source_ready = basesoc_ethmac_rx_last_be_sink_ready;
assign basesoc_ethmac_rx_last_be_sink_first = basesoc_ethmac_rx_padding_source_first;
assign basesoc_ethmac_rx_last_be_sink_last = basesoc_ethmac_rx_padding_source_last;
assign basesoc_ethmac_rx_last_be_sink_payload_data = basesoc_ethmac_rx_padding_source_payload_data;
assign basesoc_ethmac_rx_last_be_sink_payload_last_be = basesoc_ethmac_rx_padding_source_payload_last_be;
assign basesoc_ethmac_rx_last_be_sink_payload_error = basesoc_ethmac_rx_padding_source_payload_error;
assign basesoc_ethmac_rx_converter_sink_valid = basesoc_ethmac_rx_last_be_source_valid;
assign basesoc_ethmac_rx_last_be_source_ready = basesoc_ethmac_rx_converter_sink_ready;
assign basesoc_ethmac_rx_converter_sink_first = basesoc_ethmac_rx_last_be_source_first;
assign basesoc_ethmac_rx_converter_sink_last = basesoc_ethmac_rx_last_be_source_last;
assign basesoc_ethmac_rx_converter_sink_payload_data = basesoc_ethmac_rx_last_be_source_payload_data;
assign basesoc_ethmac_rx_converter_sink_payload_last_be = basesoc_ethmac_rx_last_be_source_payload_last_be;
assign basesoc_ethmac_rx_converter_sink_payload_error = basesoc_ethmac_rx_last_be_source_payload_error;
assign basesoc_ethmac_rx_cdc_sink_sink_valid = basesoc_ethmac_rx_converter_source_valid;
assign basesoc_ethmac_rx_converter_source_ready = basesoc_ethmac_rx_cdc_sink_sink_ready;
assign basesoc_ethmac_rx_cdc_sink_sink_first = basesoc_ethmac_rx_converter_source_first;
assign basesoc_ethmac_rx_cdc_sink_sink_last = basesoc_ethmac_rx_converter_source_last;
assign basesoc_ethmac_rx_cdc_sink_sink_payload_data = basesoc_ethmac_rx_converter_source_payload_data;
assign basesoc_ethmac_rx_cdc_sink_sink_payload_last_be = basesoc_ethmac_rx_converter_source_payload_last_be;
assign basesoc_ethmac_rx_cdc_sink_sink_payload_error = basesoc_ethmac_rx_converter_source_payload_error;
assign basesoc_ethmac_source_valid = basesoc_ethmac_rx_cdc_source_source_valid;
assign basesoc_ethmac_rx_cdc_source_source_ready = basesoc_ethmac_source_ready;
assign basesoc_ethmac_source_first = basesoc_ethmac_rx_cdc_source_source_first;
assign basesoc_ethmac_source_last = basesoc_ethmac_rx_cdc_source_source_last;
assign basesoc_ethmac_source_payload_data = basesoc_ethmac_rx_cdc_source_source_payload_data;
assign basesoc_ethmac_source_payload_last_be = basesoc_ethmac_rx_cdc_source_source_payload_last_be;
assign basesoc_ethmac_source_payload_error = basesoc_ethmac_rx_cdc_source_source_payload_error;
assign basesoc_ethmac_sram0_sink_valid = basesoc_ethmac_sink_sink_valid;
assign basesoc_ethmac_sink_sink_ready = basesoc_ethmac_sram1_sink_ready;
assign basesoc_ethmac_sram2_sink_first = basesoc_ethmac_sink_sink_first;
assign basesoc_ethmac_sram3_sink_last = basesoc_ethmac_sink_sink_last;
assign basesoc_ethmac_sram4_sink_payload_data = basesoc_ethmac_sink_sink_payload_data;
assign basesoc_ethmac_sram5_sink_payload_last_be = basesoc_ethmac_sink_sink_payload_last_be;
assign basesoc_ethmac_sram6_sink_payload_error = basesoc_ethmac_sink_sink_payload_error;
assign basesoc_ethmac_source_source_valid = basesoc_ethmac_sram83_source_valid;
assign basesoc_ethmac_sram84_source_ready = basesoc_ethmac_source_source_ready;
assign basesoc_ethmac_source_source_first = basesoc_ethmac_sram85_source_first;
assign basesoc_ethmac_source_source_last = basesoc_ethmac_sram86_source_last;
assign basesoc_ethmac_source_source_payload_data = basesoc_ethmac_sram87_source_payload_data;
assign basesoc_ethmac_source_source_payload_last_be = basesoc_ethmac_sram88_source_payload_last_be;
assign basesoc_ethmac_source_source_payload_error = basesoc_ethmac_sram89_source_payload_error;
always @(*) begin
	basesoc_ethmac_length_inc <= 4'd0;
	case (basesoc_ethmac_sram5_sink_payload_last_be)
		1'd1: begin
			basesoc_ethmac_length_inc <= 1'd1;
		end
		2'd2: begin
			basesoc_ethmac_length_inc <= 2'd2;
		end
		3'd4: begin
			basesoc_ethmac_length_inc <= 2'd3;
		end
		4'd8: begin
			basesoc_ethmac_length_inc <= 3'd4;
		end
		5'd16: begin
			basesoc_ethmac_length_inc <= 3'd5;
		end
		6'd32: begin
			basesoc_ethmac_length_inc <= 3'd6;
		end
		7'd64: begin
			basesoc_ethmac_length_inc <= 3'd7;
		end
		default: begin
			basesoc_ethmac_length_inc <= 3'd4;
		end
	endcase
end
assign basesoc_ethmac_sram44_source_ready = basesoc_ethmac_sram20_clear;
assign basesoc_ethmac_sram19_trigger = basesoc_ethmac_sram43_source_valid;
assign basesoc_ethmac_sram7_status = basesoc_ethmac_sram47_source_payload_slot;
assign basesoc_ethmac_sram10_status = basesoc_ethmac_sram48_source_payload_length;
assign basesoc_ethmac_wr_data = basesoc_ethmac_sram4_sink_payload_data;
always @(*) begin
	basesoc_ethmac_sram78_dat_w <= 32'd0;
	basesoc_ethmac_sram79_adr <= 9'd0;
	basesoc_ethmac_sram81_we <= 1'd0;
	basesoc_ethmac_sram75_adr <= 9'd0;
	basesoc_ethmac_sram82_dat_w <= 32'd0;
	basesoc_ethmac_sram77_we <= 1'd0;
	case (basesoc_ethmac_slot)
		1'd0: begin
			basesoc_ethmac_sram75_adr <= basesoc_ethmac_sram35_length[10:2];
			basesoc_ethmac_sram78_dat_w <= basesoc_ethmac_wr_data;
			if ((basesoc_ethmac_sram0_sink_valid & basesoc_ethmac_write)) begin
				basesoc_ethmac_sram77_we <= 1'd1;
			end
		end
		1'd1: begin
			basesoc_ethmac_sram79_adr <= basesoc_ethmac_sram35_length[10:2];
			basesoc_ethmac_sram82_dat_w <= basesoc_ethmac_wr_data;
			if ((basesoc_ethmac_sram0_sink_valid & basesoc_ethmac_write)) begin
				basesoc_ethmac_sram81_we <= 1'd1;
			end
		end
	endcase
end
assign basesoc_ethmac_sram21_available = basesoc_ethmac_sram17_status;
assign basesoc_ethmac_sram25_available = basesoc_ethmac_sram18_pending;
always @(*) begin
	basesoc_ethmac_sram20_clear <= 1'd0;
	if ((basesoc_ethmac_sram28_re & basesoc_ethmac_sram29_r)) begin
		basesoc_ethmac_sram20_clear <= 1'd1;
	end
end
assign basesoc_ethmac_sram16_irq = (basesoc_ethmac_sram26_status & basesoc_ethmac_sram31_storage);
assign basesoc_ethmac_sram17_status = basesoc_ethmac_sram19_trigger;
assign basesoc_ethmac_sram18_pending = basesoc_ethmac_sram19_trigger;
assign basesoc_ethmac_sram53_din = {basesoc_ethmac_sram69_fifo_in_last, basesoc_ethmac_sram68_fifo_in_first, basesoc_ethmac_sram67_fifo_in_payload_length, basesoc_ethmac_sram66_fifo_in_payload_slot};
assign {basesoc_ethmac_sram73_fifo_out_last, basesoc_ethmac_sram72_fifo_out_first, basesoc_ethmac_sram71_fifo_out_payload_length, basesoc_ethmac_sram70_fifo_out_payload_slot} = basesoc_ethmac_sram54_dout;
assign basesoc_ethmac_sram38_sink_ready = basesoc_ethmac_sram50_writable;
assign basesoc_ethmac_sram49_we = basesoc_ethmac_sram37_sink_valid;
assign basesoc_ethmac_sram68_fifo_in_first = basesoc_ethmac_sram39_sink_first;
assign basesoc_ethmac_sram69_fifo_in_last = basesoc_ethmac_sram40_sink_last;
assign basesoc_ethmac_sram66_fifo_in_payload_slot = basesoc_ethmac_sram41_sink_payload_slot;
assign basesoc_ethmac_sram67_fifo_in_payload_length = basesoc_ethmac_sram42_sink_payload_length;
assign basesoc_ethmac_sram43_source_valid = basesoc_ethmac_sram52_readable;
assign basesoc_ethmac_sram45_source_first = basesoc_ethmac_sram72_fifo_out_first;
assign basesoc_ethmac_sram46_source_last = basesoc_ethmac_sram73_fifo_out_last;
assign basesoc_ethmac_sram47_source_payload_slot = basesoc_ethmac_sram70_fifo_out_payload_slot;
assign basesoc_ethmac_sram48_source_payload_length = basesoc_ethmac_sram71_fifo_out_payload_length;
assign basesoc_ethmac_sram51_re = basesoc_ethmac_sram44_source_ready;
always @(*) begin
	basesoc_ethmac_sram59_adr <= 1'd0;
	if (basesoc_ethmac_sram56_replace) begin
		basesoc_ethmac_sram59_adr <= (basesoc_ethmac_sram57_produce - 1'd1);
	end else begin
		basesoc_ethmac_sram59_adr <= basesoc_ethmac_sram57_produce;
	end
end
assign basesoc_ethmac_sram62_dat_w = basesoc_ethmac_sram53_din;
assign basesoc_ethmac_sram61_we = (basesoc_ethmac_sram49_we & (basesoc_ethmac_sram50_writable | basesoc_ethmac_sram56_replace));
assign basesoc_ethmac_sram63_do_read = (basesoc_ethmac_sram52_readable & basesoc_ethmac_sram51_re);
assign basesoc_ethmac_sram64_adr = basesoc_ethmac_sram58_consume;
assign basesoc_ethmac_sram54_dout = basesoc_ethmac_sram65_dat_r;
assign basesoc_ethmac_sram50_writable = (basesoc_ethmac_sram55_level != 2'd2);
assign basesoc_ethmac_sram52_readable = (basesoc_ethmac_sram55_level != 1'd0);
always @(*) begin
	basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= 32'd0;
	basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd0;
	basesoc_ethmac_write <= 1'd0;
	basesoc_ethmac_sram41_sink_payload_slot <= 1'd0;
	basesoc_ethmac_sram42_sink_payload_length <= 11'd0;
	basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= 1'd0;
	basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd0;
	liteethmacsramwriter_next_state <= 2'd0;
	basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 11'd0;
	basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd0;
	basesoc_ethmac_sram37_sink_valid <= 1'd0;
	liteethmacsramwriter_next_state <= liteethmacsramwriter_state;
	case (liteethmacsramwriter_state)
		1'd1: begin
			if ((basesoc_ethmac_sram0_sink_valid & basesoc_ethmac_sram3_sink_last)) begin
				if (((basesoc_ethmac_sram6_sink_payload_error & basesoc_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
					liteethmacsramwriter_next_state <= 2'd2;
				end else begin
					liteethmacsramwriter_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
			basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
			liteethmacsramwriter_next_state <= 1'd0;
		end
		2'd3: begin
			basesoc_ethmac_sram37_sink_valid <= 1'd1;
			basesoc_ethmac_sram41_sink_payload_slot <= basesoc_ethmac_slot;
			basesoc_ethmac_sram42_sink_payload_length <= basesoc_ethmac_sram35_length;
			basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
			basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
			basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= (basesoc_ethmac_slot + 1'd1);
			basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd1;
			liteethmacsramwriter_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_ethmac_sram0_sink_valid) begin
				if (basesoc_ethmac_sram38_sink_ready) begin
					basesoc_ethmac_write <= 1'd1;
					basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= (basesoc_ethmac_sram35_length + basesoc_ethmac_length_inc);
					basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
					if ((basesoc_ethmac_sram35_length >= 11'd1530)) begin
						liteethmacsramwriter_next_state <= 1'd1;
					end
					if (basesoc_ethmac_sram3_sink_last) begin
						if (((basesoc_ethmac_sram6_sink_payload_error & basesoc_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
							liteethmacsramwriter_next_state <= 2'd2;
						end else begin
							liteethmacsramwriter_next_state <= 2'd3;
						end
					end
				end else begin
					basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= (basesoc_ethmac_sram13_status + 1'd1);
					basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd1;
					liteethmacsramwriter_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign basesoc_ethmac_sram123_sink_valid = basesoc_ethmac_start_re;
assign basesoc_ethmac_sram127_sink_payload_slot = basesoc_ethmac_sram100_storage;
assign basesoc_ethmac_sram128_sink_payload_length = basesoc_ethmac_sram102_storage;
assign basesoc_ethmac_sram94_status = basesoc_ethmac_sram124_sink_ready;
assign basesoc_ethmac_sram97_status = basesoc_ethmac_sram141_level;
always @(*) begin
	basesoc_ethmac_sram88_source_payload_last_be <= 4'd0;
	if (basesoc_ethmac_sram86_source_last) begin
		case (basesoc_ethmac_sram134_source_payload_length[1:0])
			1'd1: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 1'd1;
			end
			2'd2: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 2'd2;
			end
			2'd3: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 3'd4;
			end
			3'd4: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 4'd8;
			end
			3'd5: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 5'd16;
			end
			3'd6: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 6'd32;
			end
			3'd7: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 7'd64;
			end
			default: begin
				basesoc_ethmac_sram88_source_payload_last_be <= 4'd8;
			end
		endcase
	end
end
assign basesoc_ethmac_sram163_re = basesoc_ethmac_read;
assign basesoc_ethmac_sram161_adr = basesoc_ethmac_sram122_length[10:2];
assign basesoc_ethmac_sram166_re = basesoc_ethmac_read;
assign basesoc_ethmac_sram164_adr = basesoc_ethmac_sram122_length[10:2];
always @(*) begin
	basesoc_ethmac_rd_data <= 32'd0;
	case (basesoc_ethmac_sram133_source_payload_slot)
		1'd0: begin
			basesoc_ethmac_rd_data <= basesoc_ethmac_sram162_dat_r;
		end
		1'd1: begin
			basesoc_ethmac_rd_data <= basesoc_ethmac_sram165_dat_r;
		end
	endcase
end
assign basesoc_ethmac_sram87_source_payload_data = basesoc_ethmac_rd_data;
assign basesoc_ethmac_sram109_event0 = basesoc_ethmac_sram105_status;
assign basesoc_ethmac_sram113_event0 = basesoc_ethmac_sram106_pending;
always @(*) begin
	basesoc_ethmac_sram108_clear <= 1'd0;
	if ((basesoc_ethmac_sram116_re & basesoc_ethmac_sram117_r)) begin
		basesoc_ethmac_sram108_clear <= 1'd1;
	end
end
assign basesoc_ethmac_sram104_irq = (basesoc_ethmac_sram114_status & basesoc_ethmac_sram119_storage);
assign basesoc_ethmac_sram105_status = 1'd0;
assign basesoc_ethmac_sram139_din = {basesoc_ethmac_sram155_fifo_in_last, basesoc_ethmac_sram154_fifo_in_first, basesoc_ethmac_sram153_fifo_in_payload_length, basesoc_ethmac_sram152_fifo_in_payload_slot};
assign {basesoc_ethmac_sram159_fifo_out_last, basesoc_ethmac_sram158_fifo_out_first, basesoc_ethmac_sram157_fifo_out_payload_length, basesoc_ethmac_sram156_fifo_out_payload_slot} = basesoc_ethmac_sram140_dout;
assign basesoc_ethmac_sram124_sink_ready = basesoc_ethmac_sram136_writable;
assign basesoc_ethmac_sram135_we = basesoc_ethmac_sram123_sink_valid;
assign basesoc_ethmac_sram154_fifo_in_first = basesoc_ethmac_sram125_sink_first;
assign basesoc_ethmac_sram155_fifo_in_last = basesoc_ethmac_sram126_sink_last;
assign basesoc_ethmac_sram152_fifo_in_payload_slot = basesoc_ethmac_sram127_sink_payload_slot;
assign basesoc_ethmac_sram153_fifo_in_payload_length = basesoc_ethmac_sram128_sink_payload_length;
assign basesoc_ethmac_sram129_source_valid = basesoc_ethmac_sram138_readable;
assign basesoc_ethmac_sram131_source_first = basesoc_ethmac_sram158_fifo_out_first;
assign basesoc_ethmac_sram132_source_last = basesoc_ethmac_sram159_fifo_out_last;
assign basesoc_ethmac_sram133_source_payload_slot = basesoc_ethmac_sram156_fifo_out_payload_slot;
assign basesoc_ethmac_sram134_source_payload_length = basesoc_ethmac_sram157_fifo_out_payload_length;
assign basesoc_ethmac_sram137_re = basesoc_ethmac_sram130_source_ready;
always @(*) begin
	basesoc_ethmac_sram145_adr <= 1'd0;
	if (basesoc_ethmac_sram142_replace) begin
		basesoc_ethmac_sram145_adr <= (basesoc_ethmac_sram143_produce - 1'd1);
	end else begin
		basesoc_ethmac_sram145_adr <= basesoc_ethmac_sram143_produce;
	end
end
assign basesoc_ethmac_sram148_dat_w = basesoc_ethmac_sram139_din;
assign basesoc_ethmac_sram147_we = (basesoc_ethmac_sram135_we & (basesoc_ethmac_sram136_writable | basesoc_ethmac_sram142_replace));
assign basesoc_ethmac_sram149_do_read = (basesoc_ethmac_sram138_readable & basesoc_ethmac_sram137_re);
assign basesoc_ethmac_sram150_adr = basesoc_ethmac_sram144_consume;
assign basesoc_ethmac_sram140_dout = basesoc_ethmac_sram151_dat_r;
assign basesoc_ethmac_sram136_writable = (basesoc_ethmac_sram141_level != 2'd2);
assign basesoc_ethmac_sram138_readable = (basesoc_ethmac_sram141_level != 1'd0);
always @(*) begin
	basesoc_ethmac_sram86_source_last <= 1'd0;
	liteethmacsramreader_next_state <= 2'd0;
	basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 11'd0;
	basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd0;
	basesoc_ethmac_sram130_source_ready <= 1'd0;
	basesoc_ethmac_sram107_trigger <= 1'd0;
	basesoc_ethmac_sram83_source_valid <= 1'd0;
	basesoc_ethmac_read <= 1'd0;
	liteethmacsramreader_next_state <= liteethmacsramreader_state;
	case (liteethmacsramreader_state)
		1'd1: begin
			basesoc_ethmac_sram83_source_valid <= 1'd1;
			basesoc_ethmac_sram86_source_last <= (basesoc_ethmac_sram122_length >= basesoc_ethmac_sram134_source_payload_length);
			if (basesoc_ethmac_sram84_source_ready) begin
				basesoc_ethmac_read <= 1'd1;
				basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= (basesoc_ethmac_sram122_length + 3'd4);
				basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
				if (basesoc_ethmac_sram86_source_last) begin
					liteethmacsramreader_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 1'd0;
			basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
			basesoc_ethmac_sram107_trigger <= 1'd1;
			basesoc_ethmac_sram130_source_ready <= 1'd1;
			liteethmacsramreader_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_ethmac_sram129_source_valid) begin
				basesoc_ethmac_read <= 1'd1;
				basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 3'd4;
				basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
				liteethmacsramreader_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_ethmac_sram167_irq = (basesoc_ethmac_sram16_irq | basesoc_ethmac_sram104_irq);
assign basesoc_ethmac_sram2_adr = basesoc_ethmac_interface0_adr[8:0];
assign basesoc_ethmac_interface0_dat_r = basesoc_ethmac_sram2_dat_r;
assign basesoc_ethmac_sram3_adr = basesoc_ethmac_interface1_adr[8:0];
assign basesoc_ethmac_interface1_dat_r = basesoc_ethmac_sram3_dat_r;
always @(*) begin
	basesoc_ethmac_sram4_we <= 4'd0;
	basesoc_ethmac_sram4_we[0] <= (((basesoc_ethmac_interface2_cyc & basesoc_ethmac_interface2_stb) & basesoc_ethmac_interface2_we) & basesoc_ethmac_interface2_sel[0]);
	basesoc_ethmac_sram4_we[1] <= (((basesoc_ethmac_interface2_cyc & basesoc_ethmac_interface2_stb) & basesoc_ethmac_interface2_we) & basesoc_ethmac_interface2_sel[1]);
	basesoc_ethmac_sram4_we[2] <= (((basesoc_ethmac_interface2_cyc & basesoc_ethmac_interface2_stb) & basesoc_ethmac_interface2_we) & basesoc_ethmac_interface2_sel[2]);
	basesoc_ethmac_sram4_we[3] <= (((basesoc_ethmac_interface2_cyc & basesoc_ethmac_interface2_stb) & basesoc_ethmac_interface2_we) & basesoc_ethmac_interface2_sel[3]);
end
assign basesoc_ethmac_sram4_adr = basesoc_ethmac_interface2_adr[8:0];
assign basesoc_ethmac_interface2_dat_r = basesoc_ethmac_sram4_dat_r;
assign basesoc_ethmac_sram4_dat_w = basesoc_ethmac_interface2_dat_w;
always @(*) begin
	basesoc_ethmac_sram5_we <= 4'd0;
	basesoc_ethmac_sram5_we[0] <= (((basesoc_ethmac_interface3_cyc & basesoc_ethmac_interface3_stb) & basesoc_ethmac_interface3_we) & basesoc_ethmac_interface3_sel[0]);
	basesoc_ethmac_sram5_we[1] <= (((basesoc_ethmac_interface3_cyc & basesoc_ethmac_interface3_stb) & basesoc_ethmac_interface3_we) & basesoc_ethmac_interface3_sel[1]);
	basesoc_ethmac_sram5_we[2] <= (((basesoc_ethmac_interface3_cyc & basesoc_ethmac_interface3_stb) & basesoc_ethmac_interface3_we) & basesoc_ethmac_interface3_sel[2]);
	basesoc_ethmac_sram5_we[3] <= (((basesoc_ethmac_interface3_cyc & basesoc_ethmac_interface3_stb) & basesoc_ethmac_interface3_we) & basesoc_ethmac_interface3_sel[3]);
end
assign basesoc_ethmac_sram5_adr = basesoc_ethmac_interface3_adr[8:0];
assign basesoc_ethmac_interface3_dat_r = basesoc_ethmac_sram5_dat_r;
assign basesoc_ethmac_sram5_dat_w = basesoc_ethmac_interface3_dat_w;
always @(*) begin
	basesoc_ethmac_slave_sel <= 4'd0;
	basesoc_ethmac_slave_sel[0] <= (basesoc_ethmac_bus_adr[10:9] == 1'd0);
	basesoc_ethmac_slave_sel[1] <= (basesoc_ethmac_bus_adr[10:9] == 1'd1);
	basesoc_ethmac_slave_sel[2] <= (basesoc_ethmac_bus_adr[10:9] == 2'd2);
	basesoc_ethmac_slave_sel[3] <= (basesoc_ethmac_bus_adr[10:9] == 2'd3);
end
assign basesoc_ethmac_interface0_adr = basesoc_ethmac_bus_adr;
assign basesoc_ethmac_interface0_dat_w = basesoc_ethmac_bus_dat_w;
assign basesoc_ethmac_interface0_sel = basesoc_ethmac_bus_sel;
assign basesoc_ethmac_interface0_stb = basesoc_ethmac_bus_stb;
assign basesoc_ethmac_interface0_we = basesoc_ethmac_bus_we;
assign basesoc_ethmac_interface0_cti = basesoc_ethmac_bus_cti;
assign basesoc_ethmac_interface0_bte = basesoc_ethmac_bus_bte;
assign basesoc_ethmac_interface1_adr = basesoc_ethmac_bus_adr;
assign basesoc_ethmac_interface1_dat_w = basesoc_ethmac_bus_dat_w;
assign basesoc_ethmac_interface1_sel = basesoc_ethmac_bus_sel;
assign basesoc_ethmac_interface1_stb = basesoc_ethmac_bus_stb;
assign basesoc_ethmac_interface1_we = basesoc_ethmac_bus_we;
assign basesoc_ethmac_interface1_cti = basesoc_ethmac_bus_cti;
assign basesoc_ethmac_interface1_bte = basesoc_ethmac_bus_bte;
assign basesoc_ethmac_interface2_adr = basesoc_ethmac_bus_adr;
assign basesoc_ethmac_interface2_dat_w = basesoc_ethmac_bus_dat_w;
assign basesoc_ethmac_interface2_sel = basesoc_ethmac_bus_sel;
assign basesoc_ethmac_interface2_stb = basesoc_ethmac_bus_stb;
assign basesoc_ethmac_interface2_we = basesoc_ethmac_bus_we;
assign basesoc_ethmac_interface2_cti = basesoc_ethmac_bus_cti;
assign basesoc_ethmac_interface2_bte = basesoc_ethmac_bus_bte;
assign basesoc_ethmac_interface3_adr = basesoc_ethmac_bus_adr;
assign basesoc_ethmac_interface3_dat_w = basesoc_ethmac_bus_dat_w;
assign basesoc_ethmac_interface3_sel = basesoc_ethmac_bus_sel;
assign basesoc_ethmac_interface3_stb = basesoc_ethmac_bus_stb;
assign basesoc_ethmac_interface3_we = basesoc_ethmac_bus_we;
assign basesoc_ethmac_interface3_cti = basesoc_ethmac_bus_cti;
assign basesoc_ethmac_interface3_bte = basesoc_ethmac_bus_bte;
assign basesoc_ethmac_interface0_cyc = (basesoc_ethmac_bus_cyc & basesoc_ethmac_slave_sel[0]);
assign basesoc_ethmac_interface1_cyc = (basesoc_ethmac_bus_cyc & basesoc_ethmac_slave_sel[1]);
assign basesoc_ethmac_interface2_cyc = (basesoc_ethmac_bus_cyc & basesoc_ethmac_slave_sel[2]);
assign basesoc_ethmac_interface3_cyc = (basesoc_ethmac_bus_cyc & basesoc_ethmac_slave_sel[3]);
assign basesoc_ethmac_bus_ack = (((basesoc_ethmac_interface0_ack | basesoc_ethmac_interface1_ack) | basesoc_ethmac_interface2_ack) | basesoc_ethmac_interface3_ack);
assign basesoc_ethmac_bus_err = (((basesoc_ethmac_interface0_err | basesoc_ethmac_interface1_err) | basesoc_ethmac_interface2_err) | basesoc_ethmac_interface3_err);
assign basesoc_ethmac_bus_dat_r = (((({32{basesoc_ethmac_slave_sel_r[0]}} & basesoc_ethmac_interface0_dat_r) | ({32{basesoc_ethmac_slave_sel_r[1]}} & basesoc_ethmac_interface1_dat_r)) | ({32{basesoc_ethmac_slave_sel_r[2]}} & basesoc_ethmac_interface2_dat_r)) | ({32{basesoc_ethmac_slave_sel_r[3]}} & basesoc_ethmac_interface3_dat_r));
assign leds_wait = (~leds_done);
always @(*) begin
	user_led2 <= 1'd0;
	user_led3 <= 1'd0;
	user_led4 <= 1'd0;
	user_led0 <= 1'd0;
	user_led1 <= 1'd0;
	if ((leds_mode == 1'd1)) begin
		{user_led4, user_led3, user_led2, user_led1, user_led0} <= leds_storage;
	end else begin
		{user_led4, user_led3, user_led2, user_led1, user_led0} <= leds_chaser;
	end
end
assign leds_done = (leds_count == 1'd0);
always @(*) begin
	sevenseg_abcdefg <= 8'd0;
	case (sevenseg_hexa)
		1'd0: begin
			sevenseg_abcdefg <= 6'd63;
		end
		1'd1: begin
			sevenseg_abcdefg <= 3'd6;
		end
		2'd2: begin
			sevenseg_abcdefg <= 7'd91;
		end
		2'd3: begin
			sevenseg_abcdefg <= 7'd79;
		end
		3'd4: begin
			sevenseg_abcdefg <= 7'd102;
		end
		3'd5: begin
			sevenseg_abcdefg <= 7'd109;
		end
		3'd6: begin
			sevenseg_abcdefg <= 7'd125;
		end
		3'd7: begin
			sevenseg_abcdefg <= 3'd7;
		end
		4'd8: begin
			sevenseg_abcdefg <= 7'd127;
		end
		4'd9: begin
			sevenseg_abcdefg <= 7'd111;
		end
		4'd10: begin
			sevenseg_abcdefg <= 7'd119;
		end
		4'd11: begin
			sevenseg_abcdefg <= 7'd124;
		end
		4'd12: begin
			sevenseg_abcdefg <= 6'd57;
		end
		4'd13: begin
			sevenseg_abcdefg <= 7'd94;
		end
		4'd14: begin
			sevenseg_abcdefg <= 7'd121;
		end
		4'd15: begin
			sevenseg_abcdefg <= 7'd113;
		end
	endcase
end
assign sevenseg_wait = (~sevenseg_done);
assign sevenseg_hexa = sevenseg_xdigits[3:0];
assign {seven_seg0} = (~sevenseg_abcdefg);
assign {seven_seg_ctl2, seven_seg_ctl1, seven_seg_ctl0} = sevenseg_select;
assign sevenseg_done = (sevenseg_count1 == 1'd0);
always @(*) begin
	basesoc_wishbone_dat_r <= 32'd0;
	basesoc_wishbone_ack <= 1'd0;
	next_state <= 2'd0;
	basesoc_dat_w_next_value0 <= 32'd0;
	basesoc_dat_w_next_value_ce0 <= 1'd0;
	basesoc_adr_next_value1 <= 14'd0;
	basesoc_adr_next_value_ce1 <= 1'd0;
	basesoc_we_next_value2 <= 1'd0;
	basesoc_we_next_value_ce2 <= 1'd0;
	next_state <= state;
	case (state)
		1'd1: begin
			basesoc_adr_next_value1 <= 1'd0;
			basesoc_adr_next_value_ce1 <= 1'd1;
			basesoc_we_next_value2 <= 1'd0;
			basesoc_we_next_value_ce2 <= 1'd1;
			next_state <= 2'd2;
		end
		2'd2: begin
			basesoc_wishbone_ack <= 1'd1;
			basesoc_wishbone_dat_r <= basesoc_dat_r;
			next_state <= 1'd0;
		end
		default: begin
			basesoc_dat_w_next_value0 <= basesoc_wishbone_dat_w;
			basesoc_dat_w_next_value_ce0 <= 1'd1;
			if ((basesoc_wishbone_cyc & basesoc_wishbone_stb)) begin
				basesoc_adr_next_value1 <= basesoc_wishbone_adr;
				basesoc_adr_next_value_ce1 <= 1'd1;
				basesoc_we_next_value2 <= (basesoc_wishbone_we & (basesoc_wishbone_sel != 1'd0));
				basesoc_we_next_value_ce2 <= 1'd1;
				next_state <= 1'd1;
			end
		end
	endcase
end
assign shared_adr = rhs_array_muxed36;
assign shared_dat_w = rhs_array_muxed37;
assign shared_sel = rhs_array_muxed38;
assign shared_cyc = rhs_array_muxed39;
assign shared_stb = rhs_array_muxed40;
assign shared_we = rhs_array_muxed41;
assign shared_cti = rhs_array_muxed42;
assign shared_bte = rhs_array_muxed43;
assign basesoc_idbus_dat_r = shared_dat_r;
assign basesoc_idbus_ack = (shared_ack & (grant == 1'd0));
assign basesoc_idbus_err = (shared_err & (grant == 1'd0));
assign request = {basesoc_idbus_cyc};
assign grant = 1'd0;
always @(*) begin
	slave_sel <= 5'd0;
	slave_sel[0] <= (shared_adr[29:15] == 1'd0);
	slave_sel[1] <= (shared_adr[29:11] == 12'd2048);
	slave_sel[2] <= (shared_adr[29:26] == 3'd4);
	slave_sel[3] <= (shared_adr[29:11] == 19'd262144);
	slave_sel[4] <= (shared_adr[29:14] == 16'd33280);
end
assign basesoc_basesoc_ram_bus_adr = shared_adr;
assign basesoc_basesoc_ram_bus_dat_w = shared_dat_w;
assign basesoc_basesoc_ram_bus_sel = shared_sel;
assign basesoc_basesoc_ram_bus_stb = shared_stb;
assign basesoc_basesoc_ram_bus_we = shared_we;
assign basesoc_basesoc_ram_bus_cti = shared_cti;
assign basesoc_basesoc_ram_bus_bte = shared_bte;
assign basesoc_ram_bus_ram_bus_adr = shared_adr;
assign basesoc_ram_bus_ram_bus_dat_w = shared_dat_w;
assign basesoc_ram_bus_ram_bus_sel = shared_sel;
assign basesoc_ram_bus_ram_bus_stb = shared_stb;
assign basesoc_ram_bus_ram_bus_we = shared_we;
assign basesoc_ram_bus_ram_bus_cti = shared_cti;
assign basesoc_ram_bus_ram_bus_bte = shared_bte;
assign basesoc_wb_sdram_adr = shared_adr;
assign basesoc_wb_sdram_dat_w = shared_dat_w;
assign basesoc_wb_sdram_sel = shared_sel;
assign basesoc_wb_sdram_stb = shared_stb;
assign basesoc_wb_sdram_we = shared_we;
assign basesoc_wb_sdram_cti = shared_cti;
assign basesoc_wb_sdram_bte = shared_bte;
assign basesoc_ethmac_bus_adr = shared_adr;
assign basesoc_ethmac_bus_dat_w = shared_dat_w;
assign basesoc_ethmac_bus_sel = shared_sel;
assign basesoc_ethmac_bus_stb = shared_stb;
assign basesoc_ethmac_bus_we = shared_we;
assign basesoc_ethmac_bus_cti = shared_cti;
assign basesoc_ethmac_bus_bte = shared_bte;
assign basesoc_wishbone_adr = shared_adr;
assign basesoc_wishbone_dat_w = shared_dat_w;
assign basesoc_wishbone_sel = shared_sel;
assign basesoc_wishbone_stb = shared_stb;
assign basesoc_wishbone_we = shared_we;
assign basesoc_wishbone_cti = shared_cti;
assign basesoc_wishbone_bte = shared_bte;
assign basesoc_basesoc_ram_bus_cyc = (shared_cyc & slave_sel[0]);
assign basesoc_ram_bus_ram_bus_cyc = (shared_cyc & slave_sel[1]);
assign basesoc_wb_sdram_cyc = (shared_cyc & slave_sel[2]);
assign basesoc_ethmac_bus_cyc = (shared_cyc & slave_sel[3]);
assign basesoc_wishbone_cyc = (shared_cyc & slave_sel[4]);
assign shared_err = ((((basesoc_basesoc_ram_bus_err | basesoc_ram_bus_ram_bus_err) | basesoc_wb_sdram_err) | basesoc_ethmac_bus_err) | basesoc_wishbone_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
	shared_ack <= 1'd0;
	error <= 1'd0;
	shared_dat_r <= 32'd0;
	shared_ack <= ((((basesoc_basesoc_ram_bus_ack | basesoc_ram_bus_ram_bus_ack) | basesoc_wb_sdram_ack) | basesoc_ethmac_bus_ack) | basesoc_wishbone_ack);
	shared_dat_r <= ((((({32{slave_sel_r[0]}} & basesoc_basesoc_ram_bus_dat_r) | ({32{slave_sel_r[1]}} & basesoc_ram_bus_ram_bus_dat_r)) | ({32{slave_sel_r[2]}} & basesoc_wb_sdram_dat_r)) | ({32{slave_sel_r[3]}} & basesoc_ethmac_bus_dat_r)) | ({32{slave_sel_r[4]}} & basesoc_wishbone_dat_r));
	if (done) begin
		shared_dat_r <= 32'd4294967295;
		shared_ack <= 1'd1;
		error <= 1'd1;
	end
end
assign done = (count == 1'd0);
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_reset0_r = csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank0_reset0_we <= 1'd0;
	csr_bankarray_csrbank0_reset0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank0_reset0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_reset0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_scratch0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_scratch0_re <= 1'd0;
	csr_bankarray_csrbank0_scratch0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank0_scratch0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_scratch0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_bus_errors_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
	csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank0_bus_errors_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_bus_errors_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	basesoc_soc_rst <= 1'd0;
	if (basesoc_reset_re) begin
		basesoc_soc_rst <= basesoc_reset_storage[0];
	end
end
assign basesoc_cpu_rst = basesoc_reset_storage[1];
assign csr_bankarray_csrbank0_reset0_w = basesoc_reset_storage[1:0];
assign csr_bankarray_csrbank0_scratch0_w = basesoc_scratch_storage[31:0];
assign csr_bankarray_csrbank0_bus_errors_w = basesoc_bus_errors_status[31:0];
assign basesoc_bus_errors_we = csr_bankarray_csrbank0_bus_errors_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_rst0_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank1_rst0_re <= 1'd0;
	csr_bankarray_csrbank1_rst0_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank1_rst0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_rst0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_half_sys8x_taps0_r = csr_bankarray_interface1_bank_bus_dat_w[4:0];
always @(*) begin
	csr_bankarray_csrbank1_half_sys8x_taps0_we <= 1'd0;
	csr_bankarray_csrbank1_half_sys8x_taps0_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank1_half_sys8x_taps0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_half_sys8x_taps0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_wlevel_en0_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank1_wlevel_en0_re <= 1'd0;
	csr_bankarray_csrbank1_wlevel_en0_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank1_wlevel_en0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_wlevel_en0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wlevel_strobe_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wlevel_strobe_we <= 1'd0;
	a7ddrphy_wlevel_strobe_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
		a7ddrphy_wlevel_strobe_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wlevel_strobe_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_dly_sel0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank1_dly_sel0_re <= 1'd0;
	csr_bankarray_csrbank1_dly_sel0_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank1_dly_sel0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_dly_sel0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_rst_re <= 1'd0;
	a7ddrphy_rdly_dq_rst_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
		a7ddrphy_rdly_dq_rst_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_inc_we <= 1'd0;
	a7ddrphy_rdly_dq_inc_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
		a7ddrphy_rdly_dq_inc_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_inc_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_bitslip_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
	a7ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
		a7ddrphy_rdly_dq_bitslip_rst_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_bitslip_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_bitslip_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_bitslip_we <= 1'd0;
	a7ddrphy_rdly_dq_bitslip_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd8))) begin
		a7ddrphy_rdly_dq_bitslip_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_bitslip_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wdly_dq_bitslip_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wdly_dq_bitslip_rst_we <= 1'd0;
	a7ddrphy_wdly_dq_bitslip_rst_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd9))) begin
		a7ddrphy_wdly_dq_bitslip_rst_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wdly_dq_bitslip_rst_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wdly_dq_bitslip_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wdly_dq_bitslip_re <= 1'd0;
	a7ddrphy_wdly_dq_bitslip_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd10))) begin
		a7ddrphy_wdly_dq_bitslip_re <= csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wdly_dq_bitslip_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_rdphase0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank1_rdphase0_we <= 1'd0;
	csr_bankarray_csrbank1_rdphase0_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd11))) begin
		csr_bankarray_csrbank1_rdphase0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_rdphase0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_wrphase0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank1_wrphase0_re <= 1'd0;
	csr_bankarray_csrbank1_wrphase0_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd12))) begin
		csr_bankarray_csrbank1_wrphase0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_wrphase0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_rst0_w = a7ddrphy_rst_storage;
assign csr_bankarray_csrbank1_half_sys8x_taps0_w = a7ddrphy_half_sys8x_taps_storage[4:0];
assign csr_bankarray_csrbank1_wlevel_en0_w = a7ddrphy_wlevel_en_storage;
assign csr_bankarray_csrbank1_dly_sel0_w = a7ddrphy_dly_sel_storage[1:0];
assign csr_bankarray_csrbank1_rdphase0_w = a7ddrphy_rdphase_storage[1:0];
assign csr_bankarray_csrbank1_wrphase0_w = a7ddrphy_wrphase_storage[1:0];
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd2);
assign csr_bankarray_csrbank2_sram_writer_slot_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_slot_we <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_slot_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank2_sram_writer_slot_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_slot_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_length_r = csr_bankarray_interface2_bank_bus_dat_w[10:0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_length_re <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_length_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank2_sram_writer_length_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_length_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_errors_re <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_errors_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank2_sram_writer_errors_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_ev_status_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_ev_status_we <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_ev_status_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank2_sram_writer_ev_status_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_ev_status_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_ev_pending_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_ev_pending_we <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_ev_pending_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank2_sram_writer_ev_pending_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_ev_pending_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_ev_enable0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_writer_ev_enable0_re <= 1'd0;
	csr_bankarray_csrbank2_sram_writer_ev_enable0_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank2_sram_writer_ev_enable0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_writer_ev_enable0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_ethmac_start_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	basesoc_ethmac_start_re <= 1'd0;
	basesoc_ethmac_start_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_ethmac_start_re <= csr_bankarray_interface2_bank_bus_we;
		basesoc_ethmac_start_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_ready_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_ready_we <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_ready_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank2_sram_reader_ready_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_ready_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_level_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_level_we <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_level_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd8))) begin
		csr_bankarray_csrbank2_sram_reader_level_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_level_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_slot0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_slot0_re <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_slot0_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd9))) begin
		csr_bankarray_csrbank2_sram_reader_slot0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_slot0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_length0_r = csr_bankarray_interface2_bank_bus_dat_w[10:0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_length0_re <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_length0_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd10))) begin
		csr_bankarray_csrbank2_sram_reader_length0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_length0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_ev_status_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_ev_status_we <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_ev_status_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd11))) begin
		csr_bankarray_csrbank2_sram_reader_ev_status_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_ev_status_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_ev_pending_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_ev_pending_re <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_ev_pending_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd12))) begin
		csr_bankarray_csrbank2_sram_reader_ev_pending_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_ev_pending_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_reader_ev_enable0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_sram_reader_ev_enable0_re <= 1'd0;
	csr_bankarray_csrbank2_sram_reader_ev_enable0_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd13))) begin
		csr_bankarray_csrbank2_sram_reader_ev_enable0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_sram_reader_ev_enable0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_preamble_crc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_preamble_crc_we <= 1'd0;
	csr_bankarray_csrbank2_preamble_crc_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd14))) begin
		csr_bankarray_csrbank2_preamble_crc_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_preamble_crc_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_rx_datapath_preamble_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank2_rx_datapath_preamble_errors_re <= 1'd0;
	csr_bankarray_csrbank2_rx_datapath_preamble_errors_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd15))) begin
		csr_bankarray_csrbank2_rx_datapath_preamble_errors_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_rx_datapath_preamble_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_rx_datapath_crc_errors_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank2_rx_datapath_crc_errors_re <= 1'd0;
	csr_bankarray_csrbank2_rx_datapath_crc_errors_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd16))) begin
		csr_bankarray_csrbank2_rx_datapath_crc_errors_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_rx_datapath_crc_errors_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_sram_writer_slot_w = basesoc_ethmac_sram7_status;
assign basesoc_ethmac_sram8_we = csr_bankarray_csrbank2_sram_writer_slot_we;
assign csr_bankarray_csrbank2_sram_writer_length_w = basesoc_ethmac_sram10_status[10:0];
assign basesoc_ethmac_sram11_we = csr_bankarray_csrbank2_sram_writer_length_we;
assign csr_bankarray_csrbank2_sram_writer_errors_w = basesoc_ethmac_sram13_status[31:0];
assign basesoc_ethmac_sram14_we = csr_bankarray_csrbank2_sram_writer_errors_we;
assign basesoc_ethmac_sram22_status = basesoc_ethmac_sram21_available;
assign csr_bankarray_csrbank2_sram_writer_ev_status_w = basesoc_ethmac_sram22_status;
assign basesoc_ethmac_sram23_we = csr_bankarray_csrbank2_sram_writer_ev_status_we;
assign basesoc_ethmac_sram26_status = basesoc_ethmac_sram25_available;
assign csr_bankarray_csrbank2_sram_writer_ev_pending_w = basesoc_ethmac_sram26_status;
assign basesoc_ethmac_sram27_we = csr_bankarray_csrbank2_sram_writer_ev_pending_we;
assign basesoc_ethmac_sram30_available = basesoc_ethmac_sram31_storage;
assign csr_bankarray_csrbank2_sram_writer_ev_enable0_w = basesoc_ethmac_sram31_storage;
assign csr_bankarray_csrbank2_sram_reader_ready_w = basesoc_ethmac_sram94_status;
assign basesoc_ethmac_sram95_we = csr_bankarray_csrbank2_sram_reader_ready_we;
assign csr_bankarray_csrbank2_sram_reader_level_w = basesoc_ethmac_sram97_status[1:0];
assign basesoc_ethmac_sram98_we = csr_bankarray_csrbank2_sram_reader_level_we;
assign csr_bankarray_csrbank2_sram_reader_slot0_w = basesoc_ethmac_sram100_storage;
assign csr_bankarray_csrbank2_sram_reader_length0_w = basesoc_ethmac_sram102_storage[10:0];
assign basesoc_ethmac_sram110_status = basesoc_ethmac_sram109_event0;
assign csr_bankarray_csrbank2_sram_reader_ev_status_w = basesoc_ethmac_sram110_status;
assign basesoc_ethmac_sram111_we = csr_bankarray_csrbank2_sram_reader_ev_status_we;
assign basesoc_ethmac_sram114_status = basesoc_ethmac_sram113_event0;
assign csr_bankarray_csrbank2_sram_reader_ev_pending_w = basesoc_ethmac_sram114_status;
assign basesoc_ethmac_sram115_we = csr_bankarray_csrbank2_sram_reader_ev_pending_we;
assign basesoc_ethmac_sram118_event0 = basesoc_ethmac_sram119_storage;
assign csr_bankarray_csrbank2_sram_reader_ev_enable0_w = basesoc_ethmac_sram119_storage;
assign csr_bankarray_csrbank2_preamble_crc_w = basesoc_ethmac_status;
assign basesoc_ethmac_we = csr_bankarray_csrbank2_preamble_crc_we;
assign csr_bankarray_csrbank2_rx_datapath_preamble_errors_w = basesoc_ethmac_preamble_errors_status[31:0];
assign basesoc_ethmac_preamble_errors_we = csr_bankarray_csrbank2_rx_datapath_preamble_errors_we;
assign csr_bankarray_csrbank2_rx_datapath_crc_errors_w = basesoc_ethmac_crc_errors_status[31:0];
assign basesoc_ethmac_crc_errors_we = csr_bankarray_csrbank2_rx_datapath_crc_errors_we;
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 2'd3);
assign csr_bankarray_csrbank3_crg_reset0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank3_crg_reset0_re <= 1'd0;
	csr_bankarray_csrbank3_crg_reset0_we <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank3_crg_reset0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_crg_reset0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_mdio_w0_r = csr_bankarray_interface3_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank3_mdio_w0_we <= 1'd0;
	csr_bankarray_csrbank3_mdio_w0_re <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank3_mdio_w0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_mdio_w0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_mdio_r_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank3_mdio_r_re <= 1'd0;
	csr_bankarray_csrbank3_mdio_r_we <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank3_mdio_r_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_mdio_r_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_crg_reset0_w = ethphy_reset_storage;
assign ethphy_mdc = ethphy__w_storage[0];
assign ethphy_oe = ethphy__w_storage[1];
assign ethphy_w = ethphy__w_storage[2];
assign csr_bankarray_csrbank3_mdio_w0_w = ethphy__w_storage[2:0];
assign csr_bankarray_csrbank3_mdio_r_w = ethphy__r_status;
assign ethphy__r_we = csr_bankarray_csrbank3_mdio_r_we;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 3'd4);
always @(*) begin
	csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (csr_bankarray_sel_r) begin
		csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
	end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[6:0];
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign csr_bankarray_csrbank4_out0_r = csr_bankarray_interface4_bank_bus_dat_w[4:0];
always @(*) begin
	csr_bankarray_csrbank4_out0_we <= 1'd0;
	csr_bankarray_csrbank4_out0_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank4_out0_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_out0_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_out0_w = leds_storage[4:0];
assign csr_bankarray_csrbank5_sel = (csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign csr_bankarray_csrbank5_dfii_control0_r = csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_control0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_control0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank5_dfii_control0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_control0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi0_command0_r = csr_bankarray_interface5_bank_bus_dat_w[5:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi0_command0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi0_command0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank5_dfii_pi0_command0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi0_command0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector0_command_issue_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector0_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector0_command_issue_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_sdram_phaseinjector0_command_issue_re <= csr_bankarray_interface5_bank_bus_we;
		basesoc_sdram_phaseinjector0_command_issue_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi0_address0_r = csr_bankarray_interface5_bank_bus_dat_w[13:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi0_address0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi0_address0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank5_dfii_pi0_address0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi0_address0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi0_baddress0_r = csr_bankarray_interface5_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi0_baddress0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi0_baddress0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank5_dfii_pi0_baddress0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi0_baddress0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi0_wrdata0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi0_wrdata0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi0_wrdata0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank5_dfii_pi0_wrdata0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi0_wrdata0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi0_rddata_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi0_rddata_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi0_rddata_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
		csr_bankarray_csrbank5_dfii_pi0_rddata_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi0_rddata_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi1_command0_r = csr_bankarray_interface5_bank_bus_dat_w[5:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi1_command0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi1_command0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank5_dfii_pi1_command0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi1_command0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector1_command_issue_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector1_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector1_command_issue_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd8))) begin
		basesoc_sdram_phaseinjector1_command_issue_re <= csr_bankarray_interface5_bank_bus_we;
		basesoc_sdram_phaseinjector1_command_issue_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi1_address0_r = csr_bankarray_interface5_bank_bus_dat_w[13:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi1_address0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi1_address0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd9))) begin
		csr_bankarray_csrbank5_dfii_pi1_address0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi1_address0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi1_baddress0_r = csr_bankarray_interface5_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi1_baddress0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi1_baddress0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd10))) begin
		csr_bankarray_csrbank5_dfii_pi1_baddress0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi1_baddress0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi1_wrdata0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi1_wrdata0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi1_wrdata0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd11))) begin
		csr_bankarray_csrbank5_dfii_pi1_wrdata0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi1_wrdata0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi1_rddata_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi1_rddata_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi1_rddata_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd12))) begin
		csr_bankarray_csrbank5_dfii_pi1_rddata_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi1_rddata_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi2_command0_r = csr_bankarray_interface5_bank_bus_dat_w[5:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi2_command0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi2_command0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd13))) begin
		csr_bankarray_csrbank5_dfii_pi2_command0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi2_command0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector2_command_issue_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector2_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector2_command_issue_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd14))) begin
		basesoc_sdram_phaseinjector2_command_issue_re <= csr_bankarray_interface5_bank_bus_we;
		basesoc_sdram_phaseinjector2_command_issue_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi2_address0_r = csr_bankarray_interface5_bank_bus_dat_w[13:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi2_address0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi2_address0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd15))) begin
		csr_bankarray_csrbank5_dfii_pi2_address0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi2_address0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi2_baddress0_r = csr_bankarray_interface5_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi2_baddress0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi2_baddress0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd16))) begin
		csr_bankarray_csrbank5_dfii_pi2_baddress0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi2_baddress0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi2_wrdata0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi2_wrdata0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi2_wrdata0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd17))) begin
		csr_bankarray_csrbank5_dfii_pi2_wrdata0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi2_wrdata0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi2_rddata_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi2_rddata_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi2_rddata_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd18))) begin
		csr_bankarray_csrbank5_dfii_pi2_rddata_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi2_rddata_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi3_command0_r = csr_bankarray_interface5_bank_bus_dat_w[5:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi3_command0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi3_command0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd19))) begin
		csr_bankarray_csrbank5_dfii_pi3_command0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi3_command0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector3_command_issue_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector3_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector3_command_issue_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd20))) begin
		basesoc_sdram_phaseinjector3_command_issue_re <= csr_bankarray_interface5_bank_bus_we;
		basesoc_sdram_phaseinjector3_command_issue_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi3_address0_r = csr_bankarray_interface5_bank_bus_dat_w[13:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi3_address0_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi3_address0_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd21))) begin
		csr_bankarray_csrbank5_dfii_pi3_address0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi3_address0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi3_baddress0_r = csr_bankarray_interface5_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi3_baddress0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi3_baddress0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd22))) begin
		csr_bankarray_csrbank5_dfii_pi3_baddress0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi3_baddress0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi3_wrdata0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi3_wrdata0_re <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi3_wrdata0_we <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd23))) begin
		csr_bankarray_csrbank5_dfii_pi3_wrdata0_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi3_wrdata0_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign csr_bankarray_csrbank5_dfii_pi3_rddata_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank5_dfii_pi3_rddata_we <= 1'd0;
	csr_bankarray_csrbank5_dfii_pi3_rddata_re <= 1'd0;
	if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 5'd24))) begin
		csr_bankarray_csrbank5_dfii_pi3_rddata_re <= csr_bankarray_interface5_bank_bus_we;
		csr_bankarray_csrbank5_dfii_pi3_rddata_we <= (~csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_sdram_sel = basesoc_sdram_storage[0];
assign basesoc_sdram_cke = basesoc_sdram_storage[1];
assign basesoc_sdram_odt = basesoc_sdram_storage[2];
assign basesoc_sdram_reset_n = basesoc_sdram_storage[3];
assign csr_bankarray_csrbank5_dfii_control0_w = basesoc_sdram_storage[3:0];
assign csr_bankarray_csrbank5_dfii_pi0_command0_w = basesoc_sdram_phaseinjector0_command_storage[5:0];
assign csr_bankarray_csrbank5_dfii_pi0_address0_w = basesoc_sdram_phaseinjector0_address_storage[13:0];
assign csr_bankarray_csrbank5_dfii_pi0_baddress0_w = basesoc_sdram_phaseinjector0_baddress_storage[2:0];
assign csr_bankarray_csrbank5_dfii_pi0_wrdata0_w = basesoc_sdram_phaseinjector0_wrdata_storage[31:0];
assign csr_bankarray_csrbank5_dfii_pi0_rddata_w = basesoc_sdram_phaseinjector0_rddata_status[31:0];
assign basesoc_sdram_phaseinjector0_rddata_we = csr_bankarray_csrbank5_dfii_pi0_rddata_we;
assign csr_bankarray_csrbank5_dfii_pi1_command0_w = basesoc_sdram_phaseinjector1_command_storage[5:0];
assign csr_bankarray_csrbank5_dfii_pi1_address0_w = basesoc_sdram_phaseinjector1_address_storage[13:0];
assign csr_bankarray_csrbank5_dfii_pi1_baddress0_w = basesoc_sdram_phaseinjector1_baddress_storage[2:0];
assign csr_bankarray_csrbank5_dfii_pi1_wrdata0_w = basesoc_sdram_phaseinjector1_wrdata_storage[31:0];
assign csr_bankarray_csrbank5_dfii_pi1_rddata_w = basesoc_sdram_phaseinjector1_rddata_status[31:0];
assign basesoc_sdram_phaseinjector1_rddata_we = csr_bankarray_csrbank5_dfii_pi1_rddata_we;
assign csr_bankarray_csrbank5_dfii_pi2_command0_w = basesoc_sdram_phaseinjector2_command_storage[5:0];
assign csr_bankarray_csrbank5_dfii_pi2_address0_w = basesoc_sdram_phaseinjector2_address_storage[13:0];
assign csr_bankarray_csrbank5_dfii_pi2_baddress0_w = basesoc_sdram_phaseinjector2_baddress_storage[2:0];
assign csr_bankarray_csrbank5_dfii_pi2_wrdata0_w = basesoc_sdram_phaseinjector2_wrdata_storage[31:0];
assign csr_bankarray_csrbank5_dfii_pi2_rddata_w = basesoc_sdram_phaseinjector2_rddata_status[31:0];
assign basesoc_sdram_phaseinjector2_rddata_we = csr_bankarray_csrbank5_dfii_pi2_rddata_we;
assign csr_bankarray_csrbank5_dfii_pi3_command0_w = basesoc_sdram_phaseinjector3_command_storage[5:0];
assign csr_bankarray_csrbank5_dfii_pi3_address0_w = basesoc_sdram_phaseinjector3_address_storage[13:0];
assign csr_bankarray_csrbank5_dfii_pi3_baddress0_w = basesoc_sdram_phaseinjector3_baddress_storage[2:0];
assign csr_bankarray_csrbank5_dfii_pi3_wrdata0_w = basesoc_sdram_phaseinjector3_wrdata_storage[31:0];
assign csr_bankarray_csrbank5_dfii_pi3_rddata_w = basesoc_sdram_phaseinjector3_rddata_status[31:0];
assign basesoc_sdram_phaseinjector3_rddata_we = csr_bankarray_csrbank5_dfii_pi3_rddata_we;
assign csr_bankarray_csrbank6_sel = (csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd7);
assign csr_bankarray_csrbank6_out0_r = csr_bankarray_interface6_bank_bus_dat_w[11:0];
always @(*) begin
	csr_bankarray_csrbank6_out0_we <= 1'd0;
	csr_bankarray_csrbank6_out0_re <= 1'd0;
	if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank6_out0_re <= csr_bankarray_interface6_bank_bus_we;
		csr_bankarray_csrbank6_out0_we <= (~csr_bankarray_interface6_bank_bus_we);
	end
end
assign csr_bankarray_csrbank6_out0_w = sevenseg_storage[11:0];
assign csr_bankarray_csrbank7_sel = (csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd8);
assign csr_bankarray_csrbank7_load0_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank7_load0_we <= 1'd0;
	csr_bankarray_csrbank7_load0_re <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank7_load0_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_load0_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_reload0_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank7_reload0_re <= 1'd0;
	csr_bankarray_csrbank7_reload0_we <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank7_reload0_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_reload0_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_en0_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank7_en0_we <= 1'd0;
	csr_bankarray_csrbank7_en0_re <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank7_en0_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_en0_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_update_value0_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank7_update_value0_re <= 1'd0;
	csr_bankarray_csrbank7_update_value0_we <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank7_update_value0_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_update_value0_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_value_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank7_value_re <= 1'd0;
	csr_bankarray_csrbank7_value_we <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank7_value_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_value_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_ev_status_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank7_ev_status_we <= 1'd0;
	csr_bankarray_csrbank7_ev_status_re <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank7_ev_status_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_ev_status_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_ev_pending_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank7_ev_pending_we <= 1'd0;
	csr_bankarray_csrbank7_ev_pending_re <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd6))) begin
		csr_bankarray_csrbank7_ev_pending_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_ev_pending_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_ev_enable0_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank7_ev_enable0_re <= 1'd0;
	csr_bankarray_csrbank7_ev_enable0_we <= 1'd0;
	if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank7_ev_enable0_re <= csr_bankarray_interface7_bank_bus_we;
		csr_bankarray_csrbank7_ev_enable0_we <= (~csr_bankarray_interface7_bank_bus_we);
	end
end
assign csr_bankarray_csrbank7_load0_w = basesoc_timer_load_storage[31:0];
assign csr_bankarray_csrbank7_reload0_w = basesoc_timer_reload_storage[31:0];
assign csr_bankarray_csrbank7_en0_w = basesoc_timer_en_storage;
assign csr_bankarray_csrbank7_update_value0_w = basesoc_timer_update_value_storage;
assign csr_bankarray_csrbank7_value_w = basesoc_timer_value_status[31:0];
assign basesoc_timer_value_we = csr_bankarray_csrbank7_value_we;
assign basesoc_timer_status_status = basesoc_timer_zero0;
assign csr_bankarray_csrbank7_ev_status_w = basesoc_timer_status_status;
assign basesoc_timer_status_we = csr_bankarray_csrbank7_ev_status_we;
assign basesoc_timer_pending_status = basesoc_timer_zero1;
assign csr_bankarray_csrbank7_ev_pending_w = basesoc_timer_pending_status;
assign basesoc_timer_pending_we = csr_bankarray_csrbank7_ev_pending_we;
assign basesoc_timer_zero2 = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank7_ev_enable0_w = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank8_sel = (csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd9);
assign basesoc_uart_rxtx_r = csr_bankarray_interface8_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_uart_rxtx_re <= 1'd0;
	basesoc_uart_rxtx_we <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_uart_rxtx_re <= csr_bankarray_interface8_bank_bus_we;
		basesoc_uart_rxtx_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_txfull_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank8_txfull_we <= 1'd0;
	csr_bankarray_csrbank8_txfull_re <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank8_txfull_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_txfull_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_rxempty_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank8_rxempty_we <= 1'd0;
	csr_bankarray_csrbank8_rxempty_re <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank8_rxempty_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_rxempty_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_ev_status_r = csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank8_ev_status_re <= 1'd0;
	csr_bankarray_csrbank8_ev_status_we <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank8_ev_status_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_ev_status_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_ev_pending_r = csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank8_ev_pending_re <= 1'd0;
	csr_bankarray_csrbank8_ev_pending_we <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank8_ev_pending_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_ev_pending_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_ev_enable0_r = csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank8_ev_enable0_we <= 1'd0;
	csr_bankarray_csrbank8_ev_enable0_re <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank8_ev_enable0_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_ev_enable0_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_txempty_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank8_txempty_re <= 1'd0;
	csr_bankarray_csrbank8_txempty_we <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd6))) begin
		csr_bankarray_csrbank8_txempty_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_txempty_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_rxfull_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank8_rxfull_re <= 1'd0;
	csr_bankarray_csrbank8_rxfull_we <= 1'd0;
	if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank8_rxfull_re <= csr_bankarray_interface8_bank_bus_we;
		csr_bankarray_csrbank8_rxfull_we <= (~csr_bankarray_interface8_bank_bus_we);
	end
end
assign csr_bankarray_csrbank8_txfull_w = basesoc_uart_txfull_status;
assign basesoc_uart_txfull_we = csr_bankarray_csrbank8_txfull_we;
assign csr_bankarray_csrbank8_rxempty_w = basesoc_uart_rxempty_status;
assign basesoc_uart_rxempty_we = csr_bankarray_csrbank8_rxempty_we;
always @(*) begin
	basesoc_uart_status_status <= 2'd0;
	basesoc_uart_status_status[0] <= basesoc_uart_tx0;
	basesoc_uart_status_status[1] <= basesoc_uart_rx0;
end
assign csr_bankarray_csrbank8_ev_status_w = basesoc_uart_status_status[1:0];
assign basesoc_uart_status_we = csr_bankarray_csrbank8_ev_status_we;
always @(*) begin
	basesoc_uart_pending_status <= 2'd0;
	basesoc_uart_pending_status[0] <= basesoc_uart_tx1;
	basesoc_uart_pending_status[1] <= basesoc_uart_rx1;
end
assign csr_bankarray_csrbank8_ev_pending_w = basesoc_uart_pending_status[1:0];
assign basesoc_uart_pending_we = csr_bankarray_csrbank8_ev_pending_we;
assign basesoc_uart_tx2 = basesoc_uart_enable_storage[0];
assign basesoc_uart_rx2 = basesoc_uart_enable_storage[1];
assign csr_bankarray_csrbank8_ev_enable0_w = basesoc_uart_enable_storage[1:0];
assign csr_bankarray_csrbank8_txempty_w = basesoc_uart_txempty_status;
assign basesoc_uart_txempty_we = csr_bankarray_csrbank8_txempty_we;
assign csr_bankarray_csrbank8_rxfull_w = basesoc_uart_rxfull_status;
assign basesoc_uart_rxfull_we = csr_bankarray_csrbank8_rxfull_we;
assign csr_interconnect_adr = basesoc_adr;
assign csr_interconnect_we = basesoc_we;
assign csr_interconnect_dat_w = basesoc_dat_w;
assign basesoc_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface5_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface6_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface7_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface8_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface5_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface6_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface7_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface8_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface6_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface7_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface8_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_interface5_bank_bus_dat_r) | csr_bankarray_interface6_bank_bus_dat_r) | csr_bankarray_interface7_bank_bus_dat_r) | csr_bankarray_interface8_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
assign t_slice_proxy0 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy1 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy2 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy3 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy4 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy5 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy6 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy7 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy8 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy9 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy10 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy11 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy12 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy13 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy14 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy15 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy16 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy17 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy18 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy19 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy20 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy21 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy22 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy23 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy24 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy25 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy26 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy27 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy28 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy29 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy30 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign t_slice_proxy31 = (~basesoc_ethmac_liteethmaccrc32inserter_next);
assign cases_slice_proxy = {basesoc_ethmac_liteethmaccrc32inserter_value, basesoc_ethmac_liteethmaccrc32inserter_sink_payload_data[7:0]};
assign t_slice_proxy32 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy33 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy34 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy35 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy36 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy37 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy38 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy39 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy40 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy41 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy42 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy43 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy44 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy45 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy46 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy47 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy48 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy49 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy50 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy51 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy52 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy53 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy54 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy55 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy56 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy57 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy58 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy59 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy60 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy61 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy62 = (~basesoc_ethmac_rx_crc_crc_next);
assign t_slice_proxy63 = (~basesoc_ethmac_rx_crc_crc_next);
always @(*) begin
	rhs_array_muxed0 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[0];
		end
		1'd1: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[1];
		end
		2'd2: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[2];
		end
		2'd3: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[3];
		end
		3'd4: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[4];
		end
		3'd5: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[5];
		end
		3'd6: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[6];
		end
		default: begin
			rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[7];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed1 <= 14'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed1 <= basesoc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed2 <= 3'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed2 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed3 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed3 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed4 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed4 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed5 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed5 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed0 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			t_array_muxed0 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed1 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			t_array_muxed1 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed2 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			t_array_muxed2 <= basesoc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed6 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[0];
		end
		1'd1: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[1];
		end
		2'd2: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[2];
		end
		2'd3: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[3];
		end
		3'd4: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[4];
		end
		3'd5: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[5];
		end
		3'd6: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[6];
		end
		default: begin
			rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[7];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed7 <= 14'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed7 <= basesoc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed8 <= 3'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed8 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed9 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed9 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed10 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed10 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed11 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed11 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed3 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			t_array_muxed3 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed4 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			t_array_muxed4 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed5 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			t_array_muxed5 <= basesoc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed12 <= 21'd0;
	case (roundrobin0_grant)
		default: begin
			rhs_array_muxed12 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed13 <= 1'd0;
	case (roundrobin0_grant)
		default: begin
			rhs_array_muxed13 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed14 <= 1'd0;
	case (roundrobin0_grant)
		default: begin
			rhs_array_muxed14 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed15 <= 21'd0;
	case (roundrobin1_grant)
		default: begin
			rhs_array_muxed15 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed16 <= 1'd0;
	case (roundrobin1_grant)
		default: begin
			rhs_array_muxed16 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed17 <= 1'd0;
	case (roundrobin1_grant)
		default: begin
			rhs_array_muxed17 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed18 <= 21'd0;
	case (roundrobin2_grant)
		default: begin
			rhs_array_muxed18 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed19 <= 1'd0;
	case (roundrobin2_grant)
		default: begin
			rhs_array_muxed19 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed20 <= 1'd0;
	case (roundrobin2_grant)
		default: begin
			rhs_array_muxed20 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed21 <= 21'd0;
	case (roundrobin3_grant)
		default: begin
			rhs_array_muxed21 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed22 <= 1'd0;
	case (roundrobin3_grant)
		default: begin
			rhs_array_muxed22 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed23 <= 1'd0;
	case (roundrobin3_grant)
		default: begin
			rhs_array_muxed23 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed24 <= 21'd0;
	case (roundrobin4_grant)
		default: begin
			rhs_array_muxed24 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed25 <= 1'd0;
	case (roundrobin4_grant)
		default: begin
			rhs_array_muxed25 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed26 <= 1'd0;
	case (roundrobin4_grant)
		default: begin
			rhs_array_muxed26 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed27 <= 21'd0;
	case (roundrobin5_grant)
		default: begin
			rhs_array_muxed27 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed28 <= 1'd0;
	case (roundrobin5_grant)
		default: begin
			rhs_array_muxed28 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed29 <= 1'd0;
	case (roundrobin5_grant)
		default: begin
			rhs_array_muxed29 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed30 <= 21'd0;
	case (roundrobin6_grant)
		default: begin
			rhs_array_muxed30 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed31 <= 1'd0;
	case (roundrobin6_grant)
		default: begin
			rhs_array_muxed31 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed32 <= 1'd0;
	case (roundrobin6_grant)
		default: begin
			rhs_array_muxed32 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed33 <= 21'd0;
	case (roundrobin7_grant)
		default: begin
			rhs_array_muxed33 <= {basesoc_port_cmd_payload_addr[23:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed34 <= 1'd0;
	case (roundrobin7_grant)
		default: begin
			rhs_array_muxed34 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed35 <= 1'd0;
	case (roundrobin7_grant)
		default: begin
			rhs_array_muxed35 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed36 <= 30'd0;
	case (grant)
		default: begin
			rhs_array_muxed36 <= basesoc_idbus_adr;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed37 <= 32'd0;
	case (grant)
		default: begin
			rhs_array_muxed37 <= basesoc_idbus_dat_w;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed38 <= 4'd0;
	case (grant)
		default: begin
			rhs_array_muxed38 <= basesoc_idbus_sel;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed39 <= 1'd0;
	case (grant)
		default: begin
			rhs_array_muxed39 <= basesoc_idbus_cyc;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed40 <= 1'd0;
	case (grant)
		default: begin
			rhs_array_muxed40 <= basesoc_idbus_stb;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed41 <= 1'd0;
	case (grant)
		default: begin
			rhs_array_muxed41 <= basesoc_idbus_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed42 <= 3'd0;
	case (grant)
		default: begin
			rhs_array_muxed42 <= basesoc_idbus_cti;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed43 <= 2'd0;
	case (grant)
		default: begin
			rhs_array_muxed43 <= basesoc_idbus_bte;
		end
	endcase
end
always @(*) begin
	array_muxed0 <= 3'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed0 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed0 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed0 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed0 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed1 <= 14'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed1 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			array_muxed1 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed1 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed1 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed2 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed2 <= 1'd0;
		end
		1'd1: begin
			array_muxed2 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed2 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed2 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed3 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed3 <= 1'd0;
		end
		1'd1: begin
			array_muxed3 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed3 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed3 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed4 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed4 <= 1'd0;
		end
		1'd1: begin
			array_muxed4 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed4 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed4 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed5 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed5 <= 1'd0;
		end
		1'd1: begin
			array_muxed5 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed5 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed5 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed6 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			array_muxed6 <= 1'd0;
		end
		1'd1: begin
			array_muxed6 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed6 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed6 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	array_muxed7 <= 3'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed7 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed7 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed7 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed7 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed8 <= 14'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed8 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			array_muxed8 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed8 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed8 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed9 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed9 <= 1'd0;
		end
		1'd1: begin
			array_muxed9 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed9 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed9 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed10 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed10 <= 1'd0;
		end
		1'd1: begin
			array_muxed10 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed10 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed10 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed11 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed11 <= 1'd0;
		end
		1'd1: begin
			array_muxed11 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed11 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed11 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed12 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed12 <= 1'd0;
		end
		1'd1: begin
			array_muxed12 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed12 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed12 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed13 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			array_muxed13 <= 1'd0;
		end
		1'd1: begin
			array_muxed13 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed13 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed13 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	array_muxed14 <= 3'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed14 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed14 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed14 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed14 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed15 <= 14'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed15 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			array_muxed15 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed15 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed15 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed16 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed16 <= 1'd0;
		end
		1'd1: begin
			array_muxed16 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed16 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed16 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed17 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed17 <= 1'd0;
		end
		1'd1: begin
			array_muxed17 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed17 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed17 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed18 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed18 <= 1'd0;
		end
		1'd1: begin
			array_muxed18 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed18 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed18 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed19 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed19 <= 1'd0;
		end
		1'd1: begin
			array_muxed19 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed19 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed19 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed20 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			array_muxed20 <= 1'd0;
		end
		1'd1: begin
			array_muxed20 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed20 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed20 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	array_muxed21 <= 3'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed21 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			array_muxed21 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			array_muxed21 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			array_muxed21 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	array_muxed22 <= 14'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed22 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			array_muxed22 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			array_muxed22 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed22 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed23 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed23 <= 1'd0;
		end
		1'd1: begin
			array_muxed23 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed23 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed23 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed24 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed24 <= 1'd0;
		end
		1'd1: begin
			array_muxed24 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed24 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed24 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed25 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed25 <= 1'd0;
		end
		1'd1: begin
			array_muxed25 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			array_muxed25 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed25 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed26 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed26 <= 1'd0;
		end
		1'd1: begin
			array_muxed26 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed26 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed26 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed27 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			array_muxed27 <= 1'd0;
		end
		1'd1: begin
			array_muxed27 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed27 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed27 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
assign basesoc_rx_rx = xilinxmultiregimpl0_regs1;
assign xilinxasyncresetsynchronizerimpl0 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl1 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl2 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl3 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl4 = (~crg_locked);
always @(*) begin
	ethphy__r_status <= 1'd0;
	ethphy__r_status <= ethphy_r;
	ethphy__r_status <= xilinxmultiregimpl1_regs1;
end
assign basesoc_ethmac_tx_cdc_cdc_produce_rdomain = xilinxmultiregimpl2_regs1;
assign basesoc_ethmac_tx_cdc_cdc_consume_wdomain = xilinxmultiregimpl3_regs1;
assign basesoc_ethmac_pulsesynchronizer0_toggle_o = xilinxmultiregimpl4_regs1;
assign basesoc_ethmac_pulsesynchronizer1_toggle_o = xilinxmultiregimpl5_regs1;
assign basesoc_ethmac_rx_cdc_cdc_produce_rdomain = xilinxmultiregimpl6_regs1;
assign basesoc_ethmac_rx_cdc_cdc_consume_wdomain = xilinxmultiregimpl7_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge eth_rx_clk) begin
	ethphy_liteethphymiirx_converter_reset <= (~eth_rx_dv);
	ethphy_liteethphymiirx_converter_sink_valid <= 1'd1;
	ethphy_liteethphymiirx_converter_sink_payload_data <= eth_rx_data;
	if (ethphy_liteethphymiirx_converter_converter_source_ready) begin
		ethphy_liteethphymiirx_converter_converter_strobe_all <= 1'd0;
	end
	if (ethphy_liteethphymiirx_converter_converter_load_part) begin
		if (((ethphy_liteethphymiirx_converter_converter_demux == 1'd1) | ethphy_liteethphymiirx_converter_converter_sink_last)) begin
			ethphy_liteethphymiirx_converter_converter_demux <= 1'd0;
			ethphy_liteethphymiirx_converter_converter_strobe_all <= 1'd1;
		end else begin
			ethphy_liteethphymiirx_converter_converter_demux <= (ethphy_liteethphymiirx_converter_converter_demux + 1'd1);
		end
	end
	if ((ethphy_liteethphymiirx_converter_converter_source_valid & ethphy_liteethphymiirx_converter_converter_source_ready)) begin
		if ((ethphy_liteethphymiirx_converter_converter_sink_valid & ethphy_liteethphymiirx_converter_converter_sink_ready)) begin
			ethphy_liteethphymiirx_converter_converter_source_first <= ethphy_liteethphymiirx_converter_converter_sink_first;
			ethphy_liteethphymiirx_converter_converter_source_last <= ethphy_liteethphymiirx_converter_converter_sink_last;
		end else begin
			ethphy_liteethphymiirx_converter_converter_source_first <= 1'd0;
			ethphy_liteethphymiirx_converter_converter_source_last <= 1'd0;
		end
	end else begin
		if ((ethphy_liteethphymiirx_converter_converter_sink_valid & ethphy_liteethphymiirx_converter_converter_sink_ready)) begin
			ethphy_liteethphymiirx_converter_converter_source_first <= (ethphy_liteethphymiirx_converter_converter_sink_first | ethphy_liteethphymiirx_converter_converter_source_first);
			ethphy_liteethphymiirx_converter_converter_source_last <= (ethphy_liteethphymiirx_converter_converter_sink_last | ethphy_liteethphymiirx_converter_converter_source_last);
		end
	end
	if (ethphy_liteethphymiirx_converter_converter_load_part) begin
		case (ethphy_liteethphymiirx_converter_converter_demux)
			1'd0: begin
				ethphy_liteethphymiirx_converter_converter_source_payload_data[3:0] <= ethphy_liteethphymiirx_converter_converter_sink_payload_data;
			end
			1'd1: begin
				ethphy_liteethphymiirx_converter_converter_source_payload_data[7:4] <= ethphy_liteethphymiirx_converter_converter_sink_payload_data;
			end
		endcase
	end
	if (ethphy_liteethphymiirx_converter_converter_load_part) begin
		ethphy_liteethphymiirx_converter_converter_source_payload_valid_token_count <= (ethphy_liteethphymiirx_converter_converter_demux + 1'd1);
	end
	if (ethphy_liteethphymiirx_converter_reset) begin
		ethphy_liteethphymiirx_converter_converter_source_payload_data <= 8'd0;
		ethphy_liteethphymiirx_converter_converter_source_payload_valid_token_count <= 2'd0;
		ethphy_liteethphymiirx_converter_converter_demux <= 1'd0;
		ethphy_liteethphymiirx_converter_converter_strobe_all <= 1'd0;
	end
	rxdatapath_liteethmacpreamblechecker_state <= rxdatapath_liteethmacpreamblechecker_next_state;
	if (basesoc_ethmac_pulsesynchronizer0_i) begin
		basesoc_ethmac_pulsesynchronizer0_toggle_i <= (~basesoc_ethmac_pulsesynchronizer0_toggle_i);
	end
	if (basesoc_ethmac_rx_crc_crc_ce) begin
		basesoc_ethmac_rx_crc_crc_reg <= basesoc_ethmac_rx_crc_crc_next;
	end
	if (basesoc_ethmac_rx_crc_crc_reset) begin
		basesoc_ethmac_rx_crc_crc_reg <= 32'd4294967295;
	end
	if (((basesoc_ethmac_rx_crc_syncfifo_syncfifo_we & basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable) & (~basesoc_ethmac_rx_crc_syncfifo_replace))) begin
		if ((basesoc_ethmac_rx_crc_syncfifo_produce == 3'd4)) begin
			basesoc_ethmac_rx_crc_syncfifo_produce <= 1'd0;
		end else begin
			basesoc_ethmac_rx_crc_syncfifo_produce <= (basesoc_ethmac_rx_crc_syncfifo_produce + 1'd1);
		end
	end
	if (basesoc_ethmac_rx_crc_syncfifo_do_read) begin
		if ((basesoc_ethmac_rx_crc_syncfifo_consume == 3'd4)) begin
			basesoc_ethmac_rx_crc_syncfifo_consume <= 1'd0;
		end else begin
			basesoc_ethmac_rx_crc_syncfifo_consume <= (basesoc_ethmac_rx_crc_syncfifo_consume + 1'd1);
		end
	end
	if (((basesoc_ethmac_rx_crc_syncfifo_syncfifo_we & basesoc_ethmac_rx_crc_syncfifo_syncfifo_writable) & (~basesoc_ethmac_rx_crc_syncfifo_replace))) begin
		if ((~basesoc_ethmac_rx_crc_syncfifo_do_read)) begin
			basesoc_ethmac_rx_crc_syncfifo_level <= (basesoc_ethmac_rx_crc_syncfifo_level + 1'd1);
		end
	end else begin
		if (basesoc_ethmac_rx_crc_syncfifo_do_read) begin
			basesoc_ethmac_rx_crc_syncfifo_level <= (basesoc_ethmac_rx_crc_syncfifo_level - 1'd1);
		end
	end
	if (basesoc_ethmac_rx_crc_fifo_reset) begin
		basesoc_ethmac_rx_crc_syncfifo_level <= 3'd0;
		basesoc_ethmac_rx_crc_syncfifo_produce <= 3'd0;
		basesoc_ethmac_rx_crc_syncfifo_consume <= 3'd0;
	end
	rxdatapath_bufferizeendpoints_state <= rxdatapath_bufferizeendpoints_next_state;
	if (basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value_ce0) begin
		basesoc_ethmac_rx_crc_last_be <= basesoc_ethmac_rx_crc_last_be_clockdomainsrenamer_next_value0;
	end
	if (basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value_ce1) begin
		basesoc_ethmac_rx_crc_crc_error1 <= basesoc_ethmac_rx_crc_crc_error1_clockdomainsrenamer_next_value1;
	end
	if (((~basesoc_ethmac_rx_crc_source_valid) | basesoc_ethmac_rx_crc_source_ready)) begin
		basesoc_ethmac_rx_crc_source_valid <= basesoc_ethmac_rx_crc_sink_valid;
		basesoc_ethmac_rx_crc_source_first <= basesoc_ethmac_rx_crc_sink_first;
		basesoc_ethmac_rx_crc_source_last <= basesoc_ethmac_rx_crc_sink_last;
		basesoc_ethmac_rx_crc_source_payload_data <= basesoc_ethmac_rx_crc_sink_payload_data;
		basesoc_ethmac_rx_crc_source_payload_last_be <= basesoc_ethmac_rx_crc_sink_payload_last_be;
		basesoc_ethmac_rx_crc_source_payload_error <= basesoc_ethmac_rx_crc_sink_payload_error;
	end
	if (basesoc_ethmac_pulsesynchronizer1_i) begin
		basesoc_ethmac_pulsesynchronizer1_toggle_i <= (~basesoc_ethmac_pulsesynchronizer1_toggle_i);
	end
	if (basesoc_ethmac_rx_converter_converter_source_ready) begin
		basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd0;
	end
	if (basesoc_ethmac_rx_converter_converter_load_part) begin
		if (((basesoc_ethmac_rx_converter_converter_demux == 2'd3) | basesoc_ethmac_rx_converter_converter_sink_last)) begin
			basesoc_ethmac_rx_converter_converter_demux <= 1'd0;
			basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd1;
		end else begin
			basesoc_ethmac_rx_converter_converter_demux <= (basesoc_ethmac_rx_converter_converter_demux + 1'd1);
		end
	end
	if ((basesoc_ethmac_rx_converter_converter_source_valid & basesoc_ethmac_rx_converter_converter_source_ready)) begin
		if ((basesoc_ethmac_rx_converter_converter_sink_valid & basesoc_ethmac_rx_converter_converter_sink_ready)) begin
			basesoc_ethmac_rx_converter_converter_source_first <= basesoc_ethmac_rx_converter_converter_sink_first;
			basesoc_ethmac_rx_converter_converter_source_last <= basesoc_ethmac_rx_converter_converter_sink_last;
		end else begin
			basesoc_ethmac_rx_converter_converter_source_first <= 1'd0;
			basesoc_ethmac_rx_converter_converter_source_last <= 1'd0;
		end
	end else begin
		if ((basesoc_ethmac_rx_converter_converter_sink_valid & basesoc_ethmac_rx_converter_converter_sink_ready)) begin
			basesoc_ethmac_rx_converter_converter_source_first <= (basesoc_ethmac_rx_converter_converter_sink_first | basesoc_ethmac_rx_converter_converter_source_first);
			basesoc_ethmac_rx_converter_converter_source_last <= (basesoc_ethmac_rx_converter_converter_sink_last | basesoc_ethmac_rx_converter_converter_source_last);
		end
	end
	if (basesoc_ethmac_rx_converter_converter_load_part) begin
		case (basesoc_ethmac_rx_converter_converter_demux)
			1'd0: begin
				basesoc_ethmac_rx_converter_converter_source_payload_data[9:0] <= basesoc_ethmac_rx_converter_converter_sink_payload_data;
			end
			1'd1: begin
				basesoc_ethmac_rx_converter_converter_source_payload_data[19:10] <= basesoc_ethmac_rx_converter_converter_sink_payload_data;
			end
			2'd2: begin
				basesoc_ethmac_rx_converter_converter_source_payload_data[29:20] <= basesoc_ethmac_rx_converter_converter_sink_payload_data;
			end
			2'd3: begin
				basesoc_ethmac_rx_converter_converter_source_payload_data[39:30] <= basesoc_ethmac_rx_converter_converter_sink_payload_data;
			end
		endcase
	end
	if (basesoc_ethmac_rx_converter_converter_load_part) begin
		basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count <= (basesoc_ethmac_rx_converter_converter_demux + 1'd1);
	end
	basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary <= basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary;
	basesoc_ethmac_rx_cdc_cdc_graycounter0_q <= basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next;
	if (eth_rx_rst) begin
		ethphy_liteethphymiirx_converter_sink_valid <= 1'd0;
		ethphy_liteethphymiirx_converter_sink_payload_data <= 4'd0;
		ethphy_liteethphymiirx_converter_converter_source_payload_data <= 8'd0;
		ethphy_liteethphymiirx_converter_converter_source_payload_valid_token_count <= 2'd0;
		ethphy_liteethphymiirx_converter_converter_demux <= 1'd0;
		ethphy_liteethphymiirx_converter_converter_strobe_all <= 1'd0;
		ethphy_liteethphymiirx_converter_reset <= 1'd0;
		basesoc_ethmac_rx_crc_crc_reg <= 32'd4294967295;
		basesoc_ethmac_rx_crc_syncfifo_level <= 3'd0;
		basesoc_ethmac_rx_crc_syncfifo_produce <= 3'd0;
		basesoc_ethmac_rx_crc_syncfifo_consume <= 3'd0;
		basesoc_ethmac_rx_crc_last_be <= 1'd0;
		basesoc_ethmac_rx_crc_crc_error1 <= 1'd0;
		basesoc_ethmac_rx_crc_source_valid <= 1'd0;
		basesoc_ethmac_rx_crc_source_payload_data <= 8'd0;
		basesoc_ethmac_rx_crc_source_payload_last_be <= 1'd0;
		basesoc_ethmac_rx_crc_source_payload_error <= 1'd0;
		basesoc_ethmac_rx_converter_converter_source_payload_data <= 40'd0;
		basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count <= 3'd0;
		basesoc_ethmac_rx_converter_converter_demux <= 2'd0;
		basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd0;
		basesoc_ethmac_rx_cdc_cdc_graycounter0_q <= 6'd0;
		basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary <= 6'd0;
		rxdatapath_liteethmacpreamblechecker_state <= 1'd0;
		rxdatapath_bufferizeendpoints_state <= 2'd0;
	end
	xilinxmultiregimpl7_regs0 <= basesoc_ethmac_rx_cdc_cdc_graycounter1_q;
	xilinxmultiregimpl7_regs1 <= xilinxmultiregimpl7_regs0;
end

always @(posedge eth_tx_clk) begin
	eth_tx_er <= 1'd0;
	eth_tx_en <= ethphy_liteethphymiitx_converter_source_valid;
	eth_tx_data <= ethphy_liteethphymiitx_converter_source_payload_data;
	if ((ethphy_liteethphymiitx_converter_converter_source_valid & ethphy_liteethphymiitx_converter_converter_source_ready)) begin
		if (ethphy_liteethphymiitx_converter_converter_last) begin
			ethphy_liteethphymiitx_converter_converter_mux <= 1'd0;
		end else begin
			ethphy_liteethphymiitx_converter_converter_mux <= (ethphy_liteethphymiitx_converter_converter_mux + 1'd1);
		end
	end
	basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary <= basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary;
	basesoc_ethmac_tx_cdc_cdc_graycounter1_q <= basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next;
	if ((basesoc_ethmac_tx_converter_converter_source_valid & basesoc_ethmac_tx_converter_converter_source_ready)) begin
		if (basesoc_ethmac_tx_converter_converter_last) begin
			basesoc_ethmac_tx_converter_converter_mux <= 1'd0;
		end else begin
			basesoc_ethmac_tx_converter_converter_mux <= (basesoc_ethmac_tx_converter_converter_mux + 1'd1);
		end
	end
	txdatapath_liteethmactxlastbe_state <= txdatapath_liteethmactxlastbe_next_state;
	txdatapath_liteethmacpaddinginserter_state <= txdatapath_liteethmacpaddinginserter_next_state;
	if (basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce) begin
		basesoc_ethmac_tx_padding_counter <= basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value;
	end
	if (basesoc_ethmac_liteethmaccrc32inserter_is_ongoing0) begin
		basesoc_ethmac_liteethmaccrc32inserter_cnt <= 2'd3;
	end else begin
		if ((basesoc_ethmac_liteethmaccrc32inserter_is_ongoing1 & (~basesoc_ethmac_liteethmaccrc32inserter_cnt_done))) begin
			basesoc_ethmac_liteethmaccrc32inserter_cnt <= (basesoc_ethmac_liteethmaccrc32inserter_cnt - basesoc_ethmac_liteethmaccrc32inserter_source_ready);
		end
	end
	if (basesoc_ethmac_liteethmaccrc32inserter_ce) begin
		basesoc_ethmac_liteethmaccrc32inserter_reg <= basesoc_ethmac_liteethmaccrc32inserter_next;
	end
	if (basesoc_ethmac_liteethmaccrc32inserter_reset) begin
		basesoc_ethmac_liteethmaccrc32inserter_reg <= 32'd4294967295;
	end
	txdatapath_bufferizeendpoints_state <= txdatapath_bufferizeendpoints_next_state;
	if (basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0) begin
		basesoc_ethmac_liteethmaccrc32inserter_crc_packet <= basesoc_ethmac_liteethmaccrc32inserter_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0;
	end
	if (basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1) begin
		basesoc_ethmac_liteethmaccrc32inserter_last_be2 <= basesoc_ethmac_liteethmaccrc32inserter_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1;
	end
	if (((~basesoc_ethmac_bufferizeendpoints_source_valid) | basesoc_ethmac_bufferizeendpoints_source_ready)) begin
		basesoc_ethmac_bufferizeendpoints_source_valid <= basesoc_ethmac_bufferizeendpoints_sink_valid;
		basesoc_ethmac_bufferizeendpoints_source_first <= basesoc_ethmac_bufferizeendpoints_sink_first;
		basesoc_ethmac_bufferizeendpoints_source_last <= basesoc_ethmac_bufferizeendpoints_sink_last;
		basesoc_ethmac_bufferizeendpoints_source_payload_data <= basesoc_ethmac_bufferizeendpoints_sink_payload_data;
		basesoc_ethmac_bufferizeendpoints_source_payload_last_be <= basesoc_ethmac_bufferizeendpoints_sink_payload_last_be;
		basesoc_ethmac_bufferizeendpoints_source_payload_error <= basesoc_ethmac_bufferizeendpoints_sink_payload_error;
	end
	txdatapath_liteethmacpreambleinserter_state <= txdatapath_liteethmacpreambleinserter_next_state;
	if (basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce) begin
		basesoc_ethmac_tx_preamble_count <= basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value;
	end
	txdatapath_liteethmacgap_state <= txdatapath_liteethmacgap_next_state;
	if (basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce) begin
		basesoc_ethmac_tx_gap_counter <= basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value;
	end
	if (eth_tx_rst) begin
		ethphy_liteethphymiitx_converter_converter_mux <= 1'd0;
		basesoc_ethmac_tx_cdc_cdc_graycounter1_q <= 6'd0;
		basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary <= 6'd0;
		basesoc_ethmac_tx_converter_converter_mux <= 2'd0;
		basesoc_ethmac_tx_padding_counter <= 16'd0;
		basesoc_ethmac_liteethmaccrc32inserter_reg <= 32'd4294967295;
		basesoc_ethmac_liteethmaccrc32inserter_crc_packet <= 32'd0;
		basesoc_ethmac_liteethmaccrc32inserter_last_be2 <= 1'd0;
		basesoc_ethmac_liteethmaccrc32inserter_cnt <= 2'd3;
		basesoc_ethmac_bufferizeendpoints_source_valid <= 1'd0;
		basesoc_ethmac_bufferizeendpoints_source_payload_data <= 8'd0;
		basesoc_ethmac_bufferizeendpoints_source_payload_last_be <= 1'd0;
		basesoc_ethmac_bufferizeendpoints_source_payload_error <= 1'd0;
		txdatapath_liteethmactxlastbe_state <= 1'd0;
		txdatapath_liteethmacpaddinginserter_state <= 1'd0;
		txdatapath_bufferizeendpoints_state <= 2'd0;
		txdatapath_liteethmacpreambleinserter_state <= 2'd0;
		txdatapath_liteethmacgap_state <= 1'd0;
	end
	xilinxmultiregimpl2_regs0 <= basesoc_ethmac_tx_cdc_cdc_graycounter0_q;
	xilinxmultiregimpl2_regs1 <= xilinxmultiregimpl2_regs0;
end

always @(posedge sys_clk) begin
	if ((basesoc_bus_errors != 32'd4294967295)) begin
		if (basesoc_bus_error) begin
			basesoc_bus_errors <= (basesoc_bus_errors + 1'd1);
		end
	end
	if (basesoc_latch) begin
		basesoc_mbus_rdata1 <= basesoc_idbus_dat_r;
	end
	femtorv_state <= femtorv_next_state;
	if (basesoc_idbus_adr_femtorv_next_value_ce0) begin
		basesoc_idbus_adr <= basesoc_idbus_adr_femtorv_next_value0;
	end
	if (basesoc_idbus_dat_w_femtorv_next_value_ce1) begin
		basesoc_idbus_dat_w <= basesoc_idbus_dat_w_femtorv_next_value1;
	end
	if (basesoc_idbus_sel_femtorv_next_value_ce2) begin
		basesoc_idbus_sel <= basesoc_idbus_sel_femtorv_next_value2;
	end
	if (basesoc_idbus_we_femtorv_next_value_ce3) begin
		basesoc_idbus_we <= basesoc_idbus_we_femtorv_next_value3;
	end
	basesoc_basesoc_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_ram_bus_stb) & (~basesoc_basesoc_ram_bus_ack))) begin
		basesoc_basesoc_ram_bus_ack <= 1'd1;
	end
	basesoc_ram_bus_ram_bus_ack <= 1'd0;
	if (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & (~basesoc_ram_bus_ram_bus_ack))) begin
		basesoc_ram_bus_ram_bus_ack <= 1'd1;
	end
	{basesoc_tx_tick, basesoc_tx_phase} <= 23'd4947802;
	if (basesoc_tx_enable) begin
		{basesoc_tx_tick, basesoc_tx_phase} <= (basesoc_tx_phase + 23'd4947802);
	end
	rs232phytx_state <= rs232phytx_next_state;
	if (basesoc_tx_count_rs232phytx_next_value_ce0) begin
		basesoc_tx_count <= basesoc_tx_count_rs232phytx_next_value0;
	end
	if (basesoc_serial_tx_rs232phytx_next_value_ce1) begin
		serial_tx <= basesoc_serial_tx_rs232phytx_next_value1;
	end
	if (basesoc_tx_data_rs232phytx_next_value_ce2) begin
		basesoc_tx_data <= basesoc_tx_data_rs232phytx_next_value2;
	end
	basesoc_rx_rx_d <= basesoc_rx_rx;
	{basesoc_rx_tick, basesoc_rx_phase} <= 32'd2147483648;
	if (basesoc_rx_enable) begin
		{basesoc_rx_tick, basesoc_rx_phase} <= (basesoc_rx_phase + 23'd4947802);
	end
	rs232phyrx_state <= rs232phyrx_next_state;
	if (basesoc_rx_count_rs232phyrx_next_value_ce0) begin
		basesoc_rx_count <= basesoc_rx_count_rs232phyrx_next_value0;
	end
	if (basesoc_rx_data_rs232phyrx_next_value_ce1) begin
		basesoc_rx_data <= basesoc_rx_data_rs232phyrx_next_value1;
	end
	if (basesoc_uart_tx_clear) begin
		basesoc_uart_tx_pending <= 1'd0;
	end
	basesoc_uart_tx_trigger_d <= basesoc_uart_tx_trigger;
	if ((basesoc_uart_tx_trigger & (~basesoc_uart_tx_trigger_d))) begin
		basesoc_uart_tx_pending <= 1'd1;
	end
	if (basesoc_uart_rx_clear) begin
		basesoc_uart_rx_pending <= 1'd0;
	end
	basesoc_uart_rx_trigger_d <= basesoc_uart_rx_trigger;
	if ((basesoc_uart_rx_trigger & (~basesoc_uart_rx_trigger_d))) begin
		basesoc_uart_rx_pending <= 1'd1;
	end
	if (basesoc_uart_tx_fifo_syncfifo_re) begin
		basesoc_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart_tx_fifo_re) begin
			basesoc_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
		basesoc_uart_tx_fifo_produce <= (basesoc_uart_tx_fifo_produce + 1'd1);
	end
	if (basesoc_uart_tx_fifo_do_read) begin
		basesoc_uart_tx_fifo_consume <= (basesoc_uart_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
		if ((~basesoc_uart_tx_fifo_do_read)) begin
			basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart_tx_fifo_do_read) begin
			basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart_rx_fifo_syncfifo_re) begin
		basesoc_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart_rx_fifo_re) begin
			basesoc_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
		basesoc_uart_rx_fifo_produce <= (basesoc_uart_rx_fifo_produce + 1'd1);
	end
	if (basesoc_uart_rx_fifo_do_read) begin
		basesoc_uart_rx_fifo_consume <= (basesoc_uart_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
		if ((~basesoc_uart_rx_fifo_do_read)) begin
			basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart_rx_fifo_do_read) begin
			basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_timer_en_storage) begin
		if ((basesoc_timer_value == 1'd0)) begin
			basesoc_timer_value <= basesoc_timer_reload_storage;
		end else begin
			basesoc_timer_value <= (basesoc_timer_value - 1'd1);
		end
	end else begin
		basesoc_timer_value <= basesoc_timer_load_storage;
	end
	if (basesoc_timer_update_value_re) begin
		basesoc_timer_value_status <= basesoc_timer_value;
	end
	if (basesoc_timer_zero_clear) begin
		basesoc_timer_zero_pending <= 1'd0;
	end
	basesoc_timer_zero_trigger_d <= basesoc_timer_zero_trigger;
	if ((basesoc_timer_zero_trigger & (~basesoc_timer_zero_trigger_d))) begin
		basesoc_timer_zero_pending <= 1'd1;
	end
	a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= a7ddrphy_dqs_oe_delay_tappeddelayline;
	a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0;
	a7ddrphy_dqspattern_o1 <= a7ddrphy_dqspattern_o0;
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value0 <= (a7ddrphy_bitslip0_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value0 <= 3'd7;
	end
	a7ddrphy_bitslip0_r0 <= {a7ddrphy_dqspattern_o1, a7ddrphy_bitslip0_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value0 <= (a7ddrphy_bitslip1_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value0 <= 3'd7;
	end
	a7ddrphy_bitslip1_r0 <= {a7ddrphy_dqspattern_o1, a7ddrphy_bitslip1_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value1 <= (a7ddrphy_bitslip0_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value1 <= 3'd7;
	end
	a7ddrphy_bitslip0_r1 <= {{a7ddrphy_dfi_p3_wrdata_mask[2], a7ddrphy_dfi_p3_wrdata_mask[0], a7ddrphy_dfi_p2_wrdata_mask[2], a7ddrphy_dfi_p2_wrdata_mask[0], a7ddrphy_dfi_p1_wrdata_mask[2], a7ddrphy_dfi_p1_wrdata_mask[0], a7ddrphy_dfi_p0_wrdata_mask[2], a7ddrphy_dfi_p0_wrdata_mask[0]}, a7ddrphy_bitslip0_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value1 <= (a7ddrphy_bitslip1_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value1 <= 3'd7;
	end
	a7ddrphy_bitslip1_r1 <= {{a7ddrphy_dfi_p3_wrdata_mask[3], a7ddrphy_dfi_p3_wrdata_mask[1], a7ddrphy_dfi_p2_wrdata_mask[3], a7ddrphy_dfi_p2_wrdata_mask[1], a7ddrphy_dfi_p1_wrdata_mask[3], a7ddrphy_dfi_p1_wrdata_mask[1], a7ddrphy_dfi_p0_wrdata_mask[3], a7ddrphy_dfi_p0_wrdata_mask[1]}, a7ddrphy_bitslip1_r1[15:8]};
	a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= a7ddrphy_dq_oe_delay_tappeddelayline;
	a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0;
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value2 <= (a7ddrphy_bitslip0_value2 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value2 <= 3'd7;
	end
	a7ddrphy_bitslip0_r2 <= {{a7ddrphy_dfi_p3_wrdata[16], a7ddrphy_dfi_p3_wrdata[0], a7ddrphy_dfi_p2_wrdata[16], a7ddrphy_dfi_p2_wrdata[0], a7ddrphy_dfi_p1_wrdata[16], a7ddrphy_dfi_p1_wrdata[0], a7ddrphy_dfi_p0_wrdata[16], a7ddrphy_dfi_p0_wrdata[0]}, a7ddrphy_bitslip0_r2[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value3 <= (a7ddrphy_bitslip0_value3 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value3 <= 3'd7;
	end
	a7ddrphy_bitslip0_r3 <= {a7ddrphy_bitslip03, a7ddrphy_bitslip0_r3[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value2 <= (a7ddrphy_bitslip1_value2 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value2 <= 3'd7;
	end
	a7ddrphy_bitslip1_r2 <= {{a7ddrphy_dfi_p3_wrdata[17], a7ddrphy_dfi_p3_wrdata[1], a7ddrphy_dfi_p2_wrdata[17], a7ddrphy_dfi_p2_wrdata[1], a7ddrphy_dfi_p1_wrdata[17], a7ddrphy_dfi_p1_wrdata[1], a7ddrphy_dfi_p0_wrdata[17], a7ddrphy_dfi_p0_wrdata[1]}, a7ddrphy_bitslip1_r2[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value3 <= (a7ddrphy_bitslip1_value3 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value3 <= 3'd7;
	end
	a7ddrphy_bitslip1_r3 <= {a7ddrphy_bitslip13, a7ddrphy_bitslip1_r3[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip2_value0 <= (a7ddrphy_bitslip2_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip2_value0 <= 3'd7;
	end
	a7ddrphy_bitslip2_r0 <= {{a7ddrphy_dfi_p3_wrdata[18], a7ddrphy_dfi_p3_wrdata[2], a7ddrphy_dfi_p2_wrdata[18], a7ddrphy_dfi_p2_wrdata[2], a7ddrphy_dfi_p1_wrdata[18], a7ddrphy_dfi_p1_wrdata[2], a7ddrphy_dfi_p0_wrdata[18], a7ddrphy_dfi_p0_wrdata[2]}, a7ddrphy_bitslip2_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip2_value1 <= (a7ddrphy_bitslip2_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip2_value1 <= 3'd7;
	end
	a7ddrphy_bitslip2_r1 <= {a7ddrphy_bitslip21, a7ddrphy_bitslip2_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip3_value0 <= (a7ddrphy_bitslip3_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip3_value0 <= 3'd7;
	end
	a7ddrphy_bitslip3_r0 <= {{a7ddrphy_dfi_p3_wrdata[19], a7ddrphy_dfi_p3_wrdata[3], a7ddrphy_dfi_p2_wrdata[19], a7ddrphy_dfi_p2_wrdata[3], a7ddrphy_dfi_p1_wrdata[19], a7ddrphy_dfi_p1_wrdata[3], a7ddrphy_dfi_p0_wrdata[19], a7ddrphy_dfi_p0_wrdata[3]}, a7ddrphy_bitslip3_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip3_value1 <= (a7ddrphy_bitslip3_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip3_value1 <= 3'd7;
	end
	a7ddrphy_bitslip3_r1 <= {a7ddrphy_bitslip31, a7ddrphy_bitslip3_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip4_value0 <= (a7ddrphy_bitslip4_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip4_value0 <= 3'd7;
	end
	a7ddrphy_bitslip4_r0 <= {{a7ddrphy_dfi_p3_wrdata[20], a7ddrphy_dfi_p3_wrdata[4], a7ddrphy_dfi_p2_wrdata[20], a7ddrphy_dfi_p2_wrdata[4], a7ddrphy_dfi_p1_wrdata[20], a7ddrphy_dfi_p1_wrdata[4], a7ddrphy_dfi_p0_wrdata[20], a7ddrphy_dfi_p0_wrdata[4]}, a7ddrphy_bitslip4_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip4_value1 <= (a7ddrphy_bitslip4_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip4_value1 <= 3'd7;
	end
	a7ddrphy_bitslip4_r1 <= {a7ddrphy_bitslip41, a7ddrphy_bitslip4_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip5_value0 <= (a7ddrphy_bitslip5_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip5_value0 <= 3'd7;
	end
	a7ddrphy_bitslip5_r0 <= {{a7ddrphy_dfi_p3_wrdata[21], a7ddrphy_dfi_p3_wrdata[5], a7ddrphy_dfi_p2_wrdata[21], a7ddrphy_dfi_p2_wrdata[5], a7ddrphy_dfi_p1_wrdata[21], a7ddrphy_dfi_p1_wrdata[5], a7ddrphy_dfi_p0_wrdata[21], a7ddrphy_dfi_p0_wrdata[5]}, a7ddrphy_bitslip5_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip5_value1 <= (a7ddrphy_bitslip5_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip5_value1 <= 3'd7;
	end
	a7ddrphy_bitslip5_r1 <= {a7ddrphy_bitslip51, a7ddrphy_bitslip5_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip6_value0 <= (a7ddrphy_bitslip6_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip6_value0 <= 3'd7;
	end
	a7ddrphy_bitslip6_r0 <= {{a7ddrphy_dfi_p3_wrdata[22], a7ddrphy_dfi_p3_wrdata[6], a7ddrphy_dfi_p2_wrdata[22], a7ddrphy_dfi_p2_wrdata[6], a7ddrphy_dfi_p1_wrdata[22], a7ddrphy_dfi_p1_wrdata[6], a7ddrphy_dfi_p0_wrdata[22], a7ddrphy_dfi_p0_wrdata[6]}, a7ddrphy_bitslip6_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip6_value1 <= (a7ddrphy_bitslip6_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip6_value1 <= 3'd7;
	end
	a7ddrphy_bitslip6_r1 <= {a7ddrphy_bitslip61, a7ddrphy_bitslip6_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip7_value0 <= (a7ddrphy_bitslip7_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip7_value0 <= 3'd7;
	end
	a7ddrphy_bitslip7_r0 <= {{a7ddrphy_dfi_p3_wrdata[23], a7ddrphy_dfi_p3_wrdata[7], a7ddrphy_dfi_p2_wrdata[23], a7ddrphy_dfi_p2_wrdata[7], a7ddrphy_dfi_p1_wrdata[23], a7ddrphy_dfi_p1_wrdata[7], a7ddrphy_dfi_p0_wrdata[23], a7ddrphy_dfi_p0_wrdata[7]}, a7ddrphy_bitslip7_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip7_value1 <= (a7ddrphy_bitslip7_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip7_value1 <= 3'd7;
	end
	a7ddrphy_bitslip7_r1 <= {a7ddrphy_bitslip71, a7ddrphy_bitslip7_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip8_value0 <= (a7ddrphy_bitslip8_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip8_value0 <= 3'd7;
	end
	a7ddrphy_bitslip8_r0 <= {{a7ddrphy_dfi_p3_wrdata[24], a7ddrphy_dfi_p3_wrdata[8], a7ddrphy_dfi_p2_wrdata[24], a7ddrphy_dfi_p2_wrdata[8], a7ddrphy_dfi_p1_wrdata[24], a7ddrphy_dfi_p1_wrdata[8], a7ddrphy_dfi_p0_wrdata[24], a7ddrphy_dfi_p0_wrdata[8]}, a7ddrphy_bitslip8_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip8_value1 <= (a7ddrphy_bitslip8_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip8_value1 <= 3'd7;
	end
	a7ddrphy_bitslip8_r1 <= {a7ddrphy_bitslip81, a7ddrphy_bitslip8_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip9_value0 <= (a7ddrphy_bitslip9_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip9_value0 <= 3'd7;
	end
	a7ddrphy_bitslip9_r0 <= {{a7ddrphy_dfi_p3_wrdata[25], a7ddrphy_dfi_p3_wrdata[9], a7ddrphy_dfi_p2_wrdata[25], a7ddrphy_dfi_p2_wrdata[9], a7ddrphy_dfi_p1_wrdata[25], a7ddrphy_dfi_p1_wrdata[9], a7ddrphy_dfi_p0_wrdata[25], a7ddrphy_dfi_p0_wrdata[9]}, a7ddrphy_bitslip9_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip9_value1 <= (a7ddrphy_bitslip9_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip9_value1 <= 3'd7;
	end
	a7ddrphy_bitslip9_r1 <= {a7ddrphy_bitslip91, a7ddrphy_bitslip9_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip10_value0 <= (a7ddrphy_bitslip10_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip10_value0 <= 3'd7;
	end
	a7ddrphy_bitslip10_r0 <= {{a7ddrphy_dfi_p3_wrdata[26], a7ddrphy_dfi_p3_wrdata[10], a7ddrphy_dfi_p2_wrdata[26], a7ddrphy_dfi_p2_wrdata[10], a7ddrphy_dfi_p1_wrdata[26], a7ddrphy_dfi_p1_wrdata[10], a7ddrphy_dfi_p0_wrdata[26], a7ddrphy_dfi_p0_wrdata[10]}, a7ddrphy_bitslip10_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip10_value1 <= (a7ddrphy_bitslip10_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip10_value1 <= 3'd7;
	end
	a7ddrphy_bitslip10_r1 <= {a7ddrphy_bitslip101, a7ddrphy_bitslip10_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip11_value0 <= (a7ddrphy_bitslip11_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip11_value0 <= 3'd7;
	end
	a7ddrphy_bitslip11_r0 <= {{a7ddrphy_dfi_p3_wrdata[27], a7ddrphy_dfi_p3_wrdata[11], a7ddrphy_dfi_p2_wrdata[27], a7ddrphy_dfi_p2_wrdata[11], a7ddrphy_dfi_p1_wrdata[27], a7ddrphy_dfi_p1_wrdata[11], a7ddrphy_dfi_p0_wrdata[27], a7ddrphy_dfi_p0_wrdata[11]}, a7ddrphy_bitslip11_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip11_value1 <= (a7ddrphy_bitslip11_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip11_value1 <= 3'd7;
	end
	a7ddrphy_bitslip11_r1 <= {a7ddrphy_bitslip111, a7ddrphy_bitslip11_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip12_value0 <= (a7ddrphy_bitslip12_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip12_value0 <= 3'd7;
	end
	a7ddrphy_bitslip12_r0 <= {{a7ddrphy_dfi_p3_wrdata[28], a7ddrphy_dfi_p3_wrdata[12], a7ddrphy_dfi_p2_wrdata[28], a7ddrphy_dfi_p2_wrdata[12], a7ddrphy_dfi_p1_wrdata[28], a7ddrphy_dfi_p1_wrdata[12], a7ddrphy_dfi_p0_wrdata[28], a7ddrphy_dfi_p0_wrdata[12]}, a7ddrphy_bitslip12_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip12_value1 <= (a7ddrphy_bitslip12_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip12_value1 <= 3'd7;
	end
	a7ddrphy_bitslip12_r1 <= {a7ddrphy_bitslip121, a7ddrphy_bitslip12_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip13_value0 <= (a7ddrphy_bitslip13_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip13_value0 <= 3'd7;
	end
	a7ddrphy_bitslip13_r0 <= {{a7ddrphy_dfi_p3_wrdata[29], a7ddrphy_dfi_p3_wrdata[13], a7ddrphy_dfi_p2_wrdata[29], a7ddrphy_dfi_p2_wrdata[13], a7ddrphy_dfi_p1_wrdata[29], a7ddrphy_dfi_p1_wrdata[13], a7ddrphy_dfi_p0_wrdata[29], a7ddrphy_dfi_p0_wrdata[13]}, a7ddrphy_bitslip13_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip13_value1 <= (a7ddrphy_bitslip13_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip13_value1 <= 3'd7;
	end
	a7ddrphy_bitslip13_r1 <= {a7ddrphy_bitslip131, a7ddrphy_bitslip13_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip14_value0 <= (a7ddrphy_bitslip14_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip14_value0 <= 3'd7;
	end
	a7ddrphy_bitslip14_r0 <= {{a7ddrphy_dfi_p3_wrdata[30], a7ddrphy_dfi_p3_wrdata[14], a7ddrphy_dfi_p2_wrdata[30], a7ddrphy_dfi_p2_wrdata[14], a7ddrphy_dfi_p1_wrdata[30], a7ddrphy_dfi_p1_wrdata[14], a7ddrphy_dfi_p0_wrdata[30], a7ddrphy_dfi_p0_wrdata[14]}, a7ddrphy_bitslip14_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip14_value1 <= (a7ddrphy_bitslip14_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip14_value1 <= 3'd7;
	end
	a7ddrphy_bitslip14_r1 <= {a7ddrphy_bitslip141, a7ddrphy_bitslip14_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip15_value0 <= (a7ddrphy_bitslip15_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip15_value0 <= 3'd7;
	end
	a7ddrphy_bitslip15_r0 <= {{a7ddrphy_dfi_p3_wrdata[31], a7ddrphy_dfi_p3_wrdata[15], a7ddrphy_dfi_p2_wrdata[31], a7ddrphy_dfi_p2_wrdata[15], a7ddrphy_dfi_p1_wrdata[31], a7ddrphy_dfi_p1_wrdata[15], a7ddrphy_dfi_p0_wrdata[31], a7ddrphy_dfi_p0_wrdata[15]}, a7ddrphy_bitslip15_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip15_value1 <= (a7ddrphy_bitslip15_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip15_value1 <= 3'd7;
	end
	a7ddrphy_bitslip15_r1 <= {a7ddrphy_bitslip151, a7ddrphy_bitslip15_r1[15:8]};
	a7ddrphy_rddata_en_tappeddelayline0 <= (((a7ddrphy_dfi_p0_rddata_en | a7ddrphy_dfi_p1_rddata_en) | a7ddrphy_dfi_p2_rddata_en) | a7ddrphy_dfi_p3_rddata_en);
	a7ddrphy_rddata_en_tappeddelayline1 <= a7ddrphy_rddata_en_tappeddelayline0;
	a7ddrphy_rddata_en_tappeddelayline2 <= a7ddrphy_rddata_en_tappeddelayline1;
	a7ddrphy_rddata_en_tappeddelayline3 <= a7ddrphy_rddata_en_tappeddelayline2;
	a7ddrphy_rddata_en_tappeddelayline4 <= a7ddrphy_rddata_en_tappeddelayline3;
	a7ddrphy_rddata_en_tappeddelayline5 <= a7ddrphy_rddata_en_tappeddelayline4;
	a7ddrphy_rddata_en_tappeddelayline6 <= a7ddrphy_rddata_en_tappeddelayline5;
	a7ddrphy_rddata_en_tappeddelayline7 <= a7ddrphy_rddata_en_tappeddelayline6;
	a7ddrphy_wrdata_en_tappeddelayline0 <= (((a7ddrphy_dfi_p0_wrdata_en | a7ddrphy_dfi_p1_wrdata_en) | a7ddrphy_dfi_p2_wrdata_en) | a7ddrphy_dfi_p3_wrdata_en);
	a7ddrphy_wrdata_en_tappeddelayline1 <= a7ddrphy_wrdata_en_tappeddelayline0;
	a7ddrphy_wrdata_en_tappeddelayline2 <= a7ddrphy_wrdata_en_tappeddelayline1;
	if (basesoc_sdram_inti_p0_rddata_valid) begin
		basesoc_sdram_phaseinjector0_rddata_status <= basesoc_sdram_inti_p0_rddata;
	end
	if (basesoc_sdram_inti_p1_rddata_valid) begin
		basesoc_sdram_phaseinjector1_rddata_status <= basesoc_sdram_inti_p1_rddata;
	end
	if (basesoc_sdram_inti_p2_rddata_valid) begin
		basesoc_sdram_phaseinjector2_rddata_status <= basesoc_sdram_inti_p2_rddata;
	end
	if (basesoc_sdram_inti_p3_rddata_valid) begin
		basesoc_sdram_phaseinjector3_rddata_status <= basesoc_sdram_inti_p3_rddata;
	end
	if ((basesoc_sdram_timer_wait & (~basesoc_sdram_timer_done0))) begin
		basesoc_sdram_timer_count1 <= (basesoc_sdram_timer_count1 - 1'd1);
	end else begin
		basesoc_sdram_timer_count1 <= 10'd781;
	end
	basesoc_sdram_postponer_req_o <= 1'd0;
	if (basesoc_sdram_postponer_req_i) begin
		basesoc_sdram_postponer_count <= (basesoc_sdram_postponer_count - 1'd1);
		if ((basesoc_sdram_postponer_count == 1'd0)) begin
			basesoc_sdram_postponer_count <= 1'd0;
			basesoc_sdram_postponer_req_o <= 1'd1;
		end
	end
	if (basesoc_sdram_sequencer_start0) begin
		basesoc_sdram_sequencer_count <= 1'd0;
	end else begin
		if (basesoc_sdram_sequencer_done1) begin
			if ((basesoc_sdram_sequencer_count != 1'd0)) begin
				basesoc_sdram_sequencer_count <= (basesoc_sdram_sequencer_count - 1'd1);
			end
		end
	end
	basesoc_sdram_cmd_payload_a <= 1'd0;
	basesoc_sdram_cmd_payload_ba <= 1'd0;
	basesoc_sdram_cmd_payload_cas <= 1'd0;
	basesoc_sdram_cmd_payload_ras <= 1'd0;
	basesoc_sdram_cmd_payload_we <= 1'd0;
	basesoc_sdram_sequencer_done1 <= 1'd0;
	if ((basesoc_sdram_sequencer_start1 & (basesoc_sdram_sequencer_counter == 1'd0))) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_sequencer_counter == 2'd3)) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd1;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd0;
	end
	if ((basesoc_sdram_sequencer_counter == 6'd35)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_sequencer_done1 <= 1'd1;
	end
	if ((basesoc_sdram_sequencer_counter == 6'd35)) begin
		basesoc_sdram_sequencer_counter <= 1'd0;
	end else begin
		if ((basesoc_sdram_sequencer_counter != 1'd0)) begin
			basesoc_sdram_sequencer_counter <= (basesoc_sdram_sequencer_counter + 1'd1);
		end else begin
			if (basesoc_sdram_sequencer_start1) begin
				basesoc_sdram_sequencer_counter <= 1'd1;
			end
		end
	end
	if ((basesoc_sdram_zqcs_timer_wait & (~basesoc_sdram_zqcs_timer_done0))) begin
		basesoc_sdram_zqcs_timer_count1 <= (basesoc_sdram_zqcs_timer_count1 - 1'd1);
	end else begin
		basesoc_sdram_zqcs_timer_count1 <= 27'd99999999;
	end
	basesoc_sdram_zqcs_executer_done <= 1'd0;
	if ((basesoc_sdram_zqcs_executer_start & (basesoc_sdram_zqcs_executer_counter == 1'd0))) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 2'd3)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 5'd19)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_zqcs_executer_done <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 5'd19)) begin
		basesoc_sdram_zqcs_executer_counter <= 1'd0;
	end else begin
		if ((basesoc_sdram_zqcs_executer_counter != 1'd0)) begin
			basesoc_sdram_zqcs_executer_counter <= (basesoc_sdram_zqcs_executer_counter + 1'd1);
		end else begin
			if (basesoc_sdram_zqcs_executer_start) begin
				basesoc_sdram_zqcs_executer_counter <= 1'd1;
			end
		end
	end
	refresher_state <= refresher_next_state;
	if (basesoc_sdram_bankmachine0_row_close) begin
		basesoc_sdram_bankmachine0_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine0_row_open) begin
			basesoc_sdram_bankmachine0_row_opened <= 1'd1;
			basesoc_sdram_bankmachine0_row <= basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine0_cmd_buffer_source_valid) | basesoc_sdram_bankmachine0_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine0_cmd_buffer_source_valid <= basesoc_sdram_bankmachine0_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine0_cmd_buffer_source_first <= basesoc_sdram_bankmachine0_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine0_cmd_buffer_source_last <= basesoc_sdram_bankmachine0_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine0_twtpcon_valid) begin
		basesoc_sdram_bankmachine0_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_twtpcon_ready)) begin
			basesoc_sdram_bankmachine0_twtpcon_count <= (basesoc_sdram_bankmachine0_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine0_trccon_valid) begin
		basesoc_sdram_bankmachine0_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_trccon_ready)) begin
			basesoc_sdram_bankmachine0_trccon_count <= (basesoc_sdram_bankmachine0_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine0_trascon_valid) begin
		basesoc_sdram_bankmachine0_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_trascon_ready)) begin
			basesoc_sdram_bankmachine0_trascon_count <= (basesoc_sdram_bankmachine0_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine0_state <= bankmachine0_next_state;
	if (basesoc_sdram_bankmachine1_row_close) begin
		basesoc_sdram_bankmachine1_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine1_row_open) begin
			basesoc_sdram_bankmachine1_row_opened <= 1'd1;
			basesoc_sdram_bankmachine1_row <= basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine1_cmd_buffer_source_valid) | basesoc_sdram_bankmachine1_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine1_cmd_buffer_source_valid <= basesoc_sdram_bankmachine1_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine1_cmd_buffer_source_first <= basesoc_sdram_bankmachine1_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine1_cmd_buffer_source_last <= basesoc_sdram_bankmachine1_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine1_twtpcon_valid) begin
		basesoc_sdram_bankmachine1_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_twtpcon_ready)) begin
			basesoc_sdram_bankmachine1_twtpcon_count <= (basesoc_sdram_bankmachine1_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine1_trccon_valid) begin
		basesoc_sdram_bankmachine1_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_trccon_ready)) begin
			basesoc_sdram_bankmachine1_trccon_count <= (basesoc_sdram_bankmachine1_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine1_trascon_valid) begin
		basesoc_sdram_bankmachine1_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_trascon_ready)) begin
			basesoc_sdram_bankmachine1_trascon_count <= (basesoc_sdram_bankmachine1_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine1_state <= bankmachine1_next_state;
	if (basesoc_sdram_bankmachine2_row_close) begin
		basesoc_sdram_bankmachine2_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine2_row_open) begin
			basesoc_sdram_bankmachine2_row_opened <= 1'd1;
			basesoc_sdram_bankmachine2_row <= basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine2_cmd_buffer_source_valid) | basesoc_sdram_bankmachine2_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine2_cmd_buffer_source_valid <= basesoc_sdram_bankmachine2_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine2_cmd_buffer_source_first <= basesoc_sdram_bankmachine2_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine2_cmd_buffer_source_last <= basesoc_sdram_bankmachine2_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine2_twtpcon_valid) begin
		basesoc_sdram_bankmachine2_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_twtpcon_ready)) begin
			basesoc_sdram_bankmachine2_twtpcon_count <= (basesoc_sdram_bankmachine2_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine2_trccon_valid) begin
		basesoc_sdram_bankmachine2_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_trccon_ready)) begin
			basesoc_sdram_bankmachine2_trccon_count <= (basesoc_sdram_bankmachine2_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine2_trascon_valid) begin
		basesoc_sdram_bankmachine2_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_trascon_ready)) begin
			basesoc_sdram_bankmachine2_trascon_count <= (basesoc_sdram_bankmachine2_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine2_state <= bankmachine2_next_state;
	if (basesoc_sdram_bankmachine3_row_close) begin
		basesoc_sdram_bankmachine3_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine3_row_open) begin
			basesoc_sdram_bankmachine3_row_opened <= 1'd1;
			basesoc_sdram_bankmachine3_row <= basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine3_cmd_buffer_source_valid) | basesoc_sdram_bankmachine3_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine3_cmd_buffer_source_valid <= basesoc_sdram_bankmachine3_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine3_cmd_buffer_source_first <= basesoc_sdram_bankmachine3_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine3_cmd_buffer_source_last <= basesoc_sdram_bankmachine3_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine3_twtpcon_valid) begin
		basesoc_sdram_bankmachine3_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_twtpcon_ready)) begin
			basesoc_sdram_bankmachine3_twtpcon_count <= (basesoc_sdram_bankmachine3_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine3_trccon_valid) begin
		basesoc_sdram_bankmachine3_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_trccon_ready)) begin
			basesoc_sdram_bankmachine3_trccon_count <= (basesoc_sdram_bankmachine3_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine3_trascon_valid) begin
		basesoc_sdram_bankmachine3_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_trascon_ready)) begin
			basesoc_sdram_bankmachine3_trascon_count <= (basesoc_sdram_bankmachine3_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine3_state <= bankmachine3_next_state;
	if (basesoc_sdram_bankmachine4_row_close) begin
		basesoc_sdram_bankmachine4_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine4_row_open) begin
			basesoc_sdram_bankmachine4_row_opened <= 1'd1;
			basesoc_sdram_bankmachine4_row <= basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine4_cmd_buffer_source_valid) | basesoc_sdram_bankmachine4_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine4_cmd_buffer_source_valid <= basesoc_sdram_bankmachine4_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine4_cmd_buffer_source_first <= basesoc_sdram_bankmachine4_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine4_cmd_buffer_source_last <= basesoc_sdram_bankmachine4_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine4_twtpcon_valid) begin
		basesoc_sdram_bankmachine4_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_twtpcon_ready)) begin
			basesoc_sdram_bankmachine4_twtpcon_count <= (basesoc_sdram_bankmachine4_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine4_trccon_valid) begin
		basesoc_sdram_bankmachine4_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_trccon_ready)) begin
			basesoc_sdram_bankmachine4_trccon_count <= (basesoc_sdram_bankmachine4_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine4_trascon_valid) begin
		basesoc_sdram_bankmachine4_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_trascon_ready)) begin
			basesoc_sdram_bankmachine4_trascon_count <= (basesoc_sdram_bankmachine4_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine4_state <= bankmachine4_next_state;
	if (basesoc_sdram_bankmachine5_row_close) begin
		basesoc_sdram_bankmachine5_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine5_row_open) begin
			basesoc_sdram_bankmachine5_row_opened <= 1'd1;
			basesoc_sdram_bankmachine5_row <= basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine5_cmd_buffer_source_valid) | basesoc_sdram_bankmachine5_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine5_cmd_buffer_source_valid <= basesoc_sdram_bankmachine5_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine5_cmd_buffer_source_first <= basesoc_sdram_bankmachine5_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine5_cmd_buffer_source_last <= basesoc_sdram_bankmachine5_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine5_twtpcon_valid) begin
		basesoc_sdram_bankmachine5_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_twtpcon_ready)) begin
			basesoc_sdram_bankmachine5_twtpcon_count <= (basesoc_sdram_bankmachine5_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine5_trccon_valid) begin
		basesoc_sdram_bankmachine5_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_trccon_ready)) begin
			basesoc_sdram_bankmachine5_trccon_count <= (basesoc_sdram_bankmachine5_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine5_trascon_valid) begin
		basesoc_sdram_bankmachine5_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_trascon_ready)) begin
			basesoc_sdram_bankmachine5_trascon_count <= (basesoc_sdram_bankmachine5_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine5_state <= bankmachine5_next_state;
	if (basesoc_sdram_bankmachine6_row_close) begin
		basesoc_sdram_bankmachine6_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine6_row_open) begin
			basesoc_sdram_bankmachine6_row_opened <= 1'd1;
			basesoc_sdram_bankmachine6_row <= basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine6_cmd_buffer_source_valid) | basesoc_sdram_bankmachine6_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine6_cmd_buffer_source_valid <= basesoc_sdram_bankmachine6_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine6_cmd_buffer_source_first <= basesoc_sdram_bankmachine6_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine6_cmd_buffer_source_last <= basesoc_sdram_bankmachine6_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine6_twtpcon_valid) begin
		basesoc_sdram_bankmachine6_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_twtpcon_ready)) begin
			basesoc_sdram_bankmachine6_twtpcon_count <= (basesoc_sdram_bankmachine6_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine6_trccon_valid) begin
		basesoc_sdram_bankmachine6_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_trccon_ready)) begin
			basesoc_sdram_bankmachine6_trccon_count <= (basesoc_sdram_bankmachine6_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine6_trascon_valid) begin
		basesoc_sdram_bankmachine6_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_trascon_ready)) begin
			basesoc_sdram_bankmachine6_trascon_count <= (basesoc_sdram_bankmachine6_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine6_state <= bankmachine6_next_state;
	if (basesoc_sdram_bankmachine7_row_close) begin
		basesoc_sdram_bankmachine7_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine7_row_open) begin
			basesoc_sdram_bankmachine7_row_opened <= 1'd1;
			basesoc_sdram_bankmachine7_row <= basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:7];
		end
	end
	if (((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine7_cmd_buffer_source_valid) | basesoc_sdram_bankmachine7_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine7_cmd_buffer_source_valid <= basesoc_sdram_bankmachine7_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine7_cmd_buffer_source_first <= basesoc_sdram_bankmachine7_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine7_cmd_buffer_source_last <= basesoc_sdram_bankmachine7_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine7_twtpcon_valid) begin
		basesoc_sdram_bankmachine7_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_twtpcon_ready)) begin
			basesoc_sdram_bankmachine7_twtpcon_count <= (basesoc_sdram_bankmachine7_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine7_trccon_valid) begin
		basesoc_sdram_bankmachine7_trccon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_trccon_ready)) begin
			basesoc_sdram_bankmachine7_trccon_count <= (basesoc_sdram_bankmachine7_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine7_trascon_valid) begin
		basesoc_sdram_bankmachine7_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_trascon_ready)) begin
			basesoc_sdram_bankmachine7_trascon_count <= (basesoc_sdram_bankmachine7_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
			end
		end
	end
	bankmachine7_state <= bankmachine7_next_state;
	if ((~basesoc_sdram_en0)) begin
		basesoc_sdram_time0 <= 5'd31;
	end else begin
		if ((~basesoc_sdram_max_time0)) begin
			basesoc_sdram_time0 <= (basesoc_sdram_time0 - 1'd1);
		end
	end
	if ((~basesoc_sdram_en1)) begin
		basesoc_sdram_time1 <= 4'd15;
	end else begin
		if ((~basesoc_sdram_max_time1)) begin
			basesoc_sdram_time1 <= (basesoc_sdram_time1 - 1'd1);
		end
	end
	if (basesoc_sdram_choose_cmd_ce) begin
		case (basesoc_sdram_choose_cmd_grant)
			1'd0: begin
				if (basesoc_sdram_choose_cmd_request[1]) begin
					basesoc_sdram_choose_cmd_grant <= 1'd1;
				end else begin
					if (basesoc_sdram_choose_cmd_request[2]) begin
						basesoc_sdram_choose_cmd_grant <= 2'd2;
					end else begin
						if (basesoc_sdram_choose_cmd_request[3]) begin
							basesoc_sdram_choose_cmd_grant <= 2'd3;
						end else begin
							if (basesoc_sdram_choose_cmd_request[4]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd4;
							end else begin
								if (basesoc_sdram_choose_cmd_request[5]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd5;
								end else begin
									if (basesoc_sdram_choose_cmd_request[6]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd6;
									end else begin
										if (basesoc_sdram_choose_cmd_request[7]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (basesoc_sdram_choose_cmd_request[2]) begin
					basesoc_sdram_choose_cmd_grant <= 2'd2;
				end else begin
					if (basesoc_sdram_choose_cmd_request[3]) begin
						basesoc_sdram_choose_cmd_grant <= 2'd3;
					end else begin
						if (basesoc_sdram_choose_cmd_request[4]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd4;
						end else begin
							if (basesoc_sdram_choose_cmd_request[5]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd5;
							end else begin
								if (basesoc_sdram_choose_cmd_request[6]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd6;
								end else begin
									if (basesoc_sdram_choose_cmd_request[7]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd7;
									end else begin
										if (basesoc_sdram_choose_cmd_request[0]) begin
											basesoc_sdram_choose_cmd_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (basesoc_sdram_choose_cmd_request[3]) begin
					basesoc_sdram_choose_cmd_grant <= 2'd3;
				end else begin
					if (basesoc_sdram_choose_cmd_request[4]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd4;
					end else begin
						if (basesoc_sdram_choose_cmd_request[5]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd5;
						end else begin
							if (basesoc_sdram_choose_cmd_request[6]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd6;
							end else begin
								if (basesoc_sdram_choose_cmd_request[7]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd7;
								end else begin
									if (basesoc_sdram_choose_cmd_request[0]) begin
										basesoc_sdram_choose_cmd_grant <= 1'd0;
									end else begin
										if (basesoc_sdram_choose_cmd_request[1]) begin
											basesoc_sdram_choose_cmd_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (basesoc_sdram_choose_cmd_request[4]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd4;
				end else begin
					if (basesoc_sdram_choose_cmd_request[5]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd5;
					end else begin
						if (basesoc_sdram_choose_cmd_request[6]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd6;
						end else begin
							if (basesoc_sdram_choose_cmd_request[7]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd7;
							end else begin
								if (basesoc_sdram_choose_cmd_request[0]) begin
									basesoc_sdram_choose_cmd_grant <= 1'd0;
								end else begin
									if (basesoc_sdram_choose_cmd_request[1]) begin
										basesoc_sdram_choose_cmd_grant <= 1'd1;
									end else begin
										if (basesoc_sdram_choose_cmd_request[2]) begin
											basesoc_sdram_choose_cmd_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (basesoc_sdram_choose_cmd_request[5]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd5;
				end else begin
					if (basesoc_sdram_choose_cmd_request[6]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd6;
					end else begin
						if (basesoc_sdram_choose_cmd_request[7]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd7;
						end else begin
							if (basesoc_sdram_choose_cmd_request[0]) begin
								basesoc_sdram_choose_cmd_grant <= 1'd0;
							end else begin
								if (basesoc_sdram_choose_cmd_request[1]) begin
									basesoc_sdram_choose_cmd_grant <= 1'd1;
								end else begin
									if (basesoc_sdram_choose_cmd_request[2]) begin
										basesoc_sdram_choose_cmd_grant <= 2'd2;
									end else begin
										if (basesoc_sdram_choose_cmd_request[3]) begin
											basesoc_sdram_choose_cmd_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (basesoc_sdram_choose_cmd_request[6]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd6;
				end else begin
					if (basesoc_sdram_choose_cmd_request[7]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd7;
					end else begin
						if (basesoc_sdram_choose_cmd_request[0]) begin
							basesoc_sdram_choose_cmd_grant <= 1'd0;
						end else begin
							if (basesoc_sdram_choose_cmd_request[1]) begin
								basesoc_sdram_choose_cmd_grant <= 1'd1;
							end else begin
								if (basesoc_sdram_choose_cmd_request[2]) begin
									basesoc_sdram_choose_cmd_grant <= 2'd2;
								end else begin
									if (basesoc_sdram_choose_cmd_request[3]) begin
										basesoc_sdram_choose_cmd_grant <= 2'd3;
									end else begin
										if (basesoc_sdram_choose_cmd_request[4]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (basesoc_sdram_choose_cmd_request[7]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd7;
				end else begin
					if (basesoc_sdram_choose_cmd_request[0]) begin
						basesoc_sdram_choose_cmd_grant <= 1'd0;
					end else begin
						if (basesoc_sdram_choose_cmd_request[1]) begin
							basesoc_sdram_choose_cmd_grant <= 1'd1;
						end else begin
							if (basesoc_sdram_choose_cmd_request[2]) begin
								basesoc_sdram_choose_cmd_grant <= 2'd2;
							end else begin
								if (basesoc_sdram_choose_cmd_request[3]) begin
									basesoc_sdram_choose_cmd_grant <= 2'd3;
								end else begin
									if (basesoc_sdram_choose_cmd_request[4]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd4;
									end else begin
										if (basesoc_sdram_choose_cmd_request[5]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (basesoc_sdram_choose_cmd_request[0]) begin
					basesoc_sdram_choose_cmd_grant <= 1'd0;
				end else begin
					if (basesoc_sdram_choose_cmd_request[1]) begin
						basesoc_sdram_choose_cmd_grant <= 1'd1;
					end else begin
						if (basesoc_sdram_choose_cmd_request[2]) begin
							basesoc_sdram_choose_cmd_grant <= 2'd2;
						end else begin
							if (basesoc_sdram_choose_cmd_request[3]) begin
								basesoc_sdram_choose_cmd_grant <= 2'd3;
							end else begin
								if (basesoc_sdram_choose_cmd_request[4]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd4;
								end else begin
									if (basesoc_sdram_choose_cmd_request[5]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd5;
									end else begin
										if (basesoc_sdram_choose_cmd_request[6]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	if (basesoc_sdram_choose_req_ce) begin
		case (basesoc_sdram_choose_req_grant)
			1'd0: begin
				if (basesoc_sdram_choose_req_request[1]) begin
					basesoc_sdram_choose_req_grant <= 1'd1;
				end else begin
					if (basesoc_sdram_choose_req_request[2]) begin
						basesoc_sdram_choose_req_grant <= 2'd2;
					end else begin
						if (basesoc_sdram_choose_req_request[3]) begin
							basesoc_sdram_choose_req_grant <= 2'd3;
						end else begin
							if (basesoc_sdram_choose_req_request[4]) begin
								basesoc_sdram_choose_req_grant <= 3'd4;
							end else begin
								if (basesoc_sdram_choose_req_request[5]) begin
									basesoc_sdram_choose_req_grant <= 3'd5;
								end else begin
									if (basesoc_sdram_choose_req_request[6]) begin
										basesoc_sdram_choose_req_grant <= 3'd6;
									end else begin
										if (basesoc_sdram_choose_req_request[7]) begin
											basesoc_sdram_choose_req_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (basesoc_sdram_choose_req_request[2]) begin
					basesoc_sdram_choose_req_grant <= 2'd2;
				end else begin
					if (basesoc_sdram_choose_req_request[3]) begin
						basesoc_sdram_choose_req_grant <= 2'd3;
					end else begin
						if (basesoc_sdram_choose_req_request[4]) begin
							basesoc_sdram_choose_req_grant <= 3'd4;
						end else begin
							if (basesoc_sdram_choose_req_request[5]) begin
								basesoc_sdram_choose_req_grant <= 3'd5;
							end else begin
								if (basesoc_sdram_choose_req_request[6]) begin
									basesoc_sdram_choose_req_grant <= 3'd6;
								end else begin
									if (basesoc_sdram_choose_req_request[7]) begin
										basesoc_sdram_choose_req_grant <= 3'd7;
									end else begin
										if (basesoc_sdram_choose_req_request[0]) begin
											basesoc_sdram_choose_req_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (basesoc_sdram_choose_req_request[3]) begin
					basesoc_sdram_choose_req_grant <= 2'd3;
				end else begin
					if (basesoc_sdram_choose_req_request[4]) begin
						basesoc_sdram_choose_req_grant <= 3'd4;
					end else begin
						if (basesoc_sdram_choose_req_request[5]) begin
							basesoc_sdram_choose_req_grant <= 3'd5;
						end else begin
							if (basesoc_sdram_choose_req_request[6]) begin
								basesoc_sdram_choose_req_grant <= 3'd6;
							end else begin
								if (basesoc_sdram_choose_req_request[7]) begin
									basesoc_sdram_choose_req_grant <= 3'd7;
								end else begin
									if (basesoc_sdram_choose_req_request[0]) begin
										basesoc_sdram_choose_req_grant <= 1'd0;
									end else begin
										if (basesoc_sdram_choose_req_request[1]) begin
											basesoc_sdram_choose_req_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (basesoc_sdram_choose_req_request[4]) begin
					basesoc_sdram_choose_req_grant <= 3'd4;
				end else begin
					if (basesoc_sdram_choose_req_request[5]) begin
						basesoc_sdram_choose_req_grant <= 3'd5;
					end else begin
						if (basesoc_sdram_choose_req_request[6]) begin
							basesoc_sdram_choose_req_grant <= 3'd6;
						end else begin
							if (basesoc_sdram_choose_req_request[7]) begin
								basesoc_sdram_choose_req_grant <= 3'd7;
							end else begin
								if (basesoc_sdram_choose_req_request[0]) begin
									basesoc_sdram_choose_req_grant <= 1'd0;
								end else begin
									if (basesoc_sdram_choose_req_request[1]) begin
										basesoc_sdram_choose_req_grant <= 1'd1;
									end else begin
										if (basesoc_sdram_choose_req_request[2]) begin
											basesoc_sdram_choose_req_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (basesoc_sdram_choose_req_request[5]) begin
					basesoc_sdram_choose_req_grant <= 3'd5;
				end else begin
					if (basesoc_sdram_choose_req_request[6]) begin
						basesoc_sdram_choose_req_grant <= 3'd6;
					end else begin
						if (basesoc_sdram_choose_req_request[7]) begin
							basesoc_sdram_choose_req_grant <= 3'd7;
						end else begin
							if (basesoc_sdram_choose_req_request[0]) begin
								basesoc_sdram_choose_req_grant <= 1'd0;
							end else begin
								if (basesoc_sdram_choose_req_request[1]) begin
									basesoc_sdram_choose_req_grant <= 1'd1;
								end else begin
									if (basesoc_sdram_choose_req_request[2]) begin
										basesoc_sdram_choose_req_grant <= 2'd2;
									end else begin
										if (basesoc_sdram_choose_req_request[3]) begin
											basesoc_sdram_choose_req_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (basesoc_sdram_choose_req_request[6]) begin
					basesoc_sdram_choose_req_grant <= 3'd6;
				end else begin
					if (basesoc_sdram_choose_req_request[7]) begin
						basesoc_sdram_choose_req_grant <= 3'd7;
					end else begin
						if (basesoc_sdram_choose_req_request[0]) begin
							basesoc_sdram_choose_req_grant <= 1'd0;
						end else begin
							if (basesoc_sdram_choose_req_request[1]) begin
								basesoc_sdram_choose_req_grant <= 1'd1;
							end else begin
								if (basesoc_sdram_choose_req_request[2]) begin
									basesoc_sdram_choose_req_grant <= 2'd2;
								end else begin
									if (basesoc_sdram_choose_req_request[3]) begin
										basesoc_sdram_choose_req_grant <= 2'd3;
									end else begin
										if (basesoc_sdram_choose_req_request[4]) begin
											basesoc_sdram_choose_req_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (basesoc_sdram_choose_req_request[7]) begin
					basesoc_sdram_choose_req_grant <= 3'd7;
				end else begin
					if (basesoc_sdram_choose_req_request[0]) begin
						basesoc_sdram_choose_req_grant <= 1'd0;
					end else begin
						if (basesoc_sdram_choose_req_request[1]) begin
							basesoc_sdram_choose_req_grant <= 1'd1;
						end else begin
							if (basesoc_sdram_choose_req_request[2]) begin
								basesoc_sdram_choose_req_grant <= 2'd2;
							end else begin
								if (basesoc_sdram_choose_req_request[3]) begin
									basesoc_sdram_choose_req_grant <= 2'd3;
								end else begin
									if (basesoc_sdram_choose_req_request[4]) begin
										basesoc_sdram_choose_req_grant <= 3'd4;
									end else begin
										if (basesoc_sdram_choose_req_request[5]) begin
											basesoc_sdram_choose_req_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (basesoc_sdram_choose_req_request[0]) begin
					basesoc_sdram_choose_req_grant <= 1'd0;
				end else begin
					if (basesoc_sdram_choose_req_request[1]) begin
						basesoc_sdram_choose_req_grant <= 1'd1;
					end else begin
						if (basesoc_sdram_choose_req_request[2]) begin
							basesoc_sdram_choose_req_grant <= 2'd2;
						end else begin
							if (basesoc_sdram_choose_req_request[3]) begin
								basesoc_sdram_choose_req_grant <= 2'd3;
							end else begin
								if (basesoc_sdram_choose_req_request[4]) begin
									basesoc_sdram_choose_req_grant <= 3'd4;
								end else begin
									if (basesoc_sdram_choose_req_request[5]) begin
										basesoc_sdram_choose_req_grant <= 3'd5;
									end else begin
										if (basesoc_sdram_choose_req_request[6]) begin
											basesoc_sdram_choose_req_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	basesoc_sdram_dfi_p0_cs_n <= 1'd0;
	basesoc_sdram_dfi_p0_bank <= array_muxed0;
	basesoc_sdram_dfi_p0_address <= array_muxed1;
	basesoc_sdram_dfi_p0_cas_n <= (~array_muxed2);
	basesoc_sdram_dfi_p0_ras_n <= (~array_muxed3);
	basesoc_sdram_dfi_p0_we_n <= (~array_muxed4);
	basesoc_sdram_dfi_p0_rddata_en <= array_muxed5;
	basesoc_sdram_dfi_p0_wrdata_en <= array_muxed6;
	basesoc_sdram_dfi_p1_cs_n <= 1'd0;
	basesoc_sdram_dfi_p1_bank <= array_muxed7;
	basesoc_sdram_dfi_p1_address <= array_muxed8;
	basesoc_sdram_dfi_p1_cas_n <= (~array_muxed9);
	basesoc_sdram_dfi_p1_ras_n <= (~array_muxed10);
	basesoc_sdram_dfi_p1_we_n <= (~array_muxed11);
	basesoc_sdram_dfi_p1_rddata_en <= array_muxed12;
	basesoc_sdram_dfi_p1_wrdata_en <= array_muxed13;
	basesoc_sdram_dfi_p2_cs_n <= 1'd0;
	basesoc_sdram_dfi_p2_bank <= array_muxed14;
	basesoc_sdram_dfi_p2_address <= array_muxed15;
	basesoc_sdram_dfi_p2_cas_n <= (~array_muxed16);
	basesoc_sdram_dfi_p2_ras_n <= (~array_muxed17);
	basesoc_sdram_dfi_p2_we_n <= (~array_muxed18);
	basesoc_sdram_dfi_p2_rddata_en <= array_muxed19;
	basesoc_sdram_dfi_p2_wrdata_en <= array_muxed20;
	basesoc_sdram_dfi_p3_cs_n <= 1'd0;
	basesoc_sdram_dfi_p3_bank <= array_muxed21;
	basesoc_sdram_dfi_p3_address <= array_muxed22;
	basesoc_sdram_dfi_p3_cas_n <= (~array_muxed23);
	basesoc_sdram_dfi_p3_ras_n <= (~array_muxed24);
	basesoc_sdram_dfi_p3_we_n <= (~array_muxed25);
	basesoc_sdram_dfi_p3_rddata_en <= array_muxed26;
	basesoc_sdram_dfi_p3_wrdata_en <= array_muxed27;
	if (basesoc_sdram_trrdcon_valid) begin
		basesoc_sdram_trrdcon_count <= 1'd1;
		if (1'd0) begin
			basesoc_sdram_trrdcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_trrdcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_trrdcon_ready)) begin
			basesoc_sdram_trrdcon_count <= (basesoc_sdram_trrdcon_count - 1'd1);
			if ((basesoc_sdram_trrdcon_count == 1'd1)) begin
				basesoc_sdram_trrdcon_ready <= 1'd1;
			end
		end
	end
	basesoc_sdram_tfawcon_window <= {basesoc_sdram_tfawcon_window, basesoc_sdram_tfawcon_valid};
	if ((basesoc_sdram_tfawcon_count < 3'd4)) begin
		if ((basesoc_sdram_tfawcon_count == 2'd3)) begin
			basesoc_sdram_tfawcon_ready <= (~basesoc_sdram_tfawcon_valid);
		end else begin
			basesoc_sdram_tfawcon_ready <= 1'd1;
		end
	end
	if (basesoc_sdram_tccdcon_valid) begin
		basesoc_sdram_tccdcon_count <= 1'd0;
		if (1'd1) begin
			basesoc_sdram_tccdcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_tccdcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_tccdcon_ready)) begin
			basesoc_sdram_tccdcon_count <= (basesoc_sdram_tccdcon_count - 1'd1);
			if ((basesoc_sdram_tccdcon_count == 1'd1)) begin
				basesoc_sdram_tccdcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_twtrcon_valid) begin
		basesoc_sdram_twtrcon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_twtrcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_twtrcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_twtrcon_ready)) begin
			basesoc_sdram_twtrcon_count <= (basesoc_sdram_twtrcon_count - 1'd1);
			if ((basesoc_sdram_twtrcon_count == 1'd1)) begin
				basesoc_sdram_twtrcon_ready <= 1'd1;
			end
		end
	end
	multiplexer_state <= multiplexer_next_state;
	new_master_wdata_ready0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_wdata_ready));
	new_master_wdata_ready1 <= new_master_wdata_ready0;
	new_master_rdata_valid0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_rdata_valid));
	new_master_rdata_valid1 <= new_master_rdata_valid0;
	new_master_rdata_valid2 <= new_master_rdata_valid1;
	new_master_rdata_valid3 <= new_master_rdata_valid2;
	new_master_rdata_valid4 <= new_master_rdata_valid3;
	new_master_rdata_valid5 <= new_master_rdata_valid4;
	new_master_rdata_valid6 <= new_master_rdata_valid5;
	new_master_rdata_valid7 <= new_master_rdata_valid6;
	new_master_rdata_valid8 <= new_master_rdata_valid7;
	basesoc_adr_offset_r <= basesoc_wb_sdram_adr[1:0];
	fullmemorywe_state <= fullmemorywe_next_state;
	litedramwishbone2native_state <= litedramwishbone2native_next_state;
	if (basesoc_aborted_litedramwishbone2native_next_value_ce) begin
		basesoc_aborted <= basesoc_aborted_litedramwishbone2native_next_value;
	end
	if (ethphy_counter_ce) begin
		ethphy_counter <= (ethphy_counter + 1'd1);
	end
	basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary <= basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary;
	basesoc_ethmac_tx_cdc_cdc_graycounter0_q <= basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next;
	if (basesoc_ethmac_pulsesynchronizer0_o) begin
		basesoc_ethmac_preamble_errors_status <= (basesoc_ethmac_preamble_errors_status + 1'd1);
	end
	if (basesoc_ethmac_pulsesynchronizer1_o) begin
		basesoc_ethmac_crc_errors_status <= (basesoc_ethmac_crc_errors_status + 1'd1);
	end
	basesoc_ethmac_pulsesynchronizer0_toggle_o_r <= basesoc_ethmac_pulsesynchronizer0_toggle_o;
	basesoc_ethmac_pulsesynchronizer1_toggle_o_r <= basesoc_ethmac_pulsesynchronizer1_toggle_o;
	basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary <= basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary;
	basesoc_ethmac_rx_cdc_cdc_graycounter1_q <= basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next;
	if (((basesoc_ethmac_sram49_we & basesoc_ethmac_sram50_writable) & (~basesoc_ethmac_sram56_replace))) begin
		basesoc_ethmac_sram57_produce <= (basesoc_ethmac_sram57_produce + 1'd1);
	end
	if (basesoc_ethmac_sram63_do_read) begin
		basesoc_ethmac_sram58_consume <= (basesoc_ethmac_sram58_consume + 1'd1);
	end
	if (((basesoc_ethmac_sram49_we & basesoc_ethmac_sram50_writable) & (~basesoc_ethmac_sram56_replace))) begin
		if ((~basesoc_ethmac_sram63_do_read)) begin
			basesoc_ethmac_sram55_level <= (basesoc_ethmac_sram55_level + 1'd1);
		end
	end else begin
		if (basesoc_ethmac_sram63_do_read) begin
			basesoc_ethmac_sram55_level <= (basesoc_ethmac_sram55_level - 1'd1);
		end
	end
	liteethmacsramwriter_state <= liteethmacsramwriter_next_state;
	if (basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce) begin
		basesoc_ethmac_sram35_length <= basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value;
	end
	if (basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce) begin
		basesoc_ethmac_sram13_status <= basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value;
	end
	if (basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce) begin
		basesoc_ethmac_slot <= basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value;
	end
	if (basesoc_ethmac_sram108_clear) begin
		basesoc_ethmac_sram106_pending <= 1'd0;
	end
	if (basesoc_ethmac_sram107_trigger) begin
		basesoc_ethmac_sram106_pending <= 1'd1;
	end
	if (((basesoc_ethmac_sram135_we & basesoc_ethmac_sram136_writable) & (~basesoc_ethmac_sram142_replace))) begin
		basesoc_ethmac_sram143_produce <= (basesoc_ethmac_sram143_produce + 1'd1);
	end
	if (basesoc_ethmac_sram149_do_read) begin
		basesoc_ethmac_sram144_consume <= (basesoc_ethmac_sram144_consume + 1'd1);
	end
	if (((basesoc_ethmac_sram135_we & basesoc_ethmac_sram136_writable) & (~basesoc_ethmac_sram142_replace))) begin
		if ((~basesoc_ethmac_sram149_do_read)) begin
			basesoc_ethmac_sram141_level <= (basesoc_ethmac_sram141_level + 1'd1);
		end
	end else begin
		if (basesoc_ethmac_sram149_do_read) begin
			basesoc_ethmac_sram141_level <= (basesoc_ethmac_sram141_level - 1'd1);
		end
	end
	liteethmacsramreader_state <= liteethmacsramreader_next_state;
	if (basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce) begin
		basesoc_ethmac_sram122_length <= basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value;
	end
	basesoc_ethmac_interface0_ack <= 1'd0;
	if (((basesoc_ethmac_interface0_cyc & basesoc_ethmac_interface0_stb) & (~basesoc_ethmac_interface0_ack))) begin
		basesoc_ethmac_interface0_ack <= 1'd1;
	end
	basesoc_ethmac_interface1_ack <= 1'd0;
	if (((basesoc_ethmac_interface1_cyc & basesoc_ethmac_interface1_stb) & (~basesoc_ethmac_interface1_ack))) begin
		basesoc_ethmac_interface1_ack <= 1'd1;
	end
	basesoc_ethmac_interface2_ack <= 1'd0;
	if (((basesoc_ethmac_interface2_cyc & basesoc_ethmac_interface2_stb) & (~basesoc_ethmac_interface2_ack))) begin
		basesoc_ethmac_interface2_ack <= 1'd1;
	end
	basesoc_ethmac_interface3_ack <= 1'd0;
	if (((basesoc_ethmac_interface3_cyc & basesoc_ethmac_interface3_stb) & (~basesoc_ethmac_interface3_ack))) begin
		basesoc_ethmac_interface3_ack <= 1'd1;
	end
	basesoc_ethmac_slave_sel_r <= basesoc_ethmac_slave_sel;
	if (leds_done) begin
		leds_chaser <= {leds_chaser, (~leds_chaser[4])};
	end
	if (leds_re) begin
		leds_mode <= 1'd1;
	end
	if (leds_wait) begin
		if ((~leds_done)) begin
			leds_count <= (leds_count - 1'd1);
		end
	end else begin
		leds_count <= 24'd10000000;
	end
	if (sevenseg_done) begin
		if ((sevenseg_count0 == 2'd2)) begin
			sevenseg_count0 <= 1'd0;
			sevenseg_select <= 3'd4;
			sevenseg_xdigits <= sevenseg_storage;
		end else begin
			sevenseg_count0 <= (sevenseg_count0 + 1'd1);
			sevenseg_select <= (sevenseg_select >>> 1'd1);
			sevenseg_xdigits <= (sevenseg_xdigits >>> 3'd4);
		end
	end
	if (sevenseg_wait) begin
		if ((~sevenseg_done)) begin
			sevenseg_count1 <= (sevenseg_count1 - 1'd1);
		end
	end else begin
		sevenseg_count1 <= 18'd166666;
	end
	state <= next_state;
	if (basesoc_dat_w_next_value_ce0) begin
		basesoc_dat_w <= basesoc_dat_w_next_value0;
	end
	if (basesoc_adr_next_value_ce1) begin
		basesoc_adr <= basesoc_adr_next_value1;
	end
	if (basesoc_we_next_value_ce2) begin
		basesoc_we <= basesoc_we_next_value2;
	end
	slave_sel_r <= slave_sel;
	if (wait_1) begin
		if ((~done)) begin
			count <= (count - 1'd1);
		end
	end else begin
		count <= 20'd1000000;
	end
	csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank0_sel) begin
		case (csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_reset0_w;
			end
			1'd1: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_scratch0_w;
			end
			2'd2: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_bus_errors_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank0_reset0_re) begin
		basesoc_reset_storage[1:0] <= csr_bankarray_csrbank0_reset0_r;
	end
	basesoc_reset_re <= csr_bankarray_csrbank0_reset0_re;
	if (csr_bankarray_csrbank0_scratch0_re) begin
		basesoc_scratch_storage[31:0] <= csr_bankarray_csrbank0_scratch0_r;
	end
	basesoc_scratch_re <= csr_bankarray_csrbank0_scratch0_re;
	basesoc_bus_errors_re <= csr_bankarray_csrbank0_bus_errors_re;
	csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank1_sel) begin
		case (csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_rst0_w;
			end
			1'd1: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_half_sys8x_taps0_w;
			end
			2'd2: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_wlevel_en0_w;
			end
			2'd3: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wlevel_strobe_w;
			end
			3'd4: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_dly_sel0_w;
			end
			3'd5: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_rst_w;
			end
			3'd6: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_inc_w;
			end
			3'd7: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_bitslip_rst_w;
			end
			4'd8: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_bitslip_w;
			end
			4'd9: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wdly_dq_bitslip_rst_w;
			end
			4'd10: begin
				csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wdly_dq_bitslip_w;
			end
			4'd11: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_rdphase0_w;
			end
			4'd12: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_wrphase0_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank1_rst0_re) begin
		a7ddrphy_rst_storage <= csr_bankarray_csrbank1_rst0_r;
	end
	a7ddrphy_rst_re <= csr_bankarray_csrbank1_rst0_re;
	if (csr_bankarray_csrbank1_half_sys8x_taps0_re) begin
		a7ddrphy_half_sys8x_taps_storage[4:0] <= csr_bankarray_csrbank1_half_sys8x_taps0_r;
	end
	a7ddrphy_half_sys8x_taps_re <= csr_bankarray_csrbank1_half_sys8x_taps0_re;
	if (csr_bankarray_csrbank1_wlevel_en0_re) begin
		a7ddrphy_wlevel_en_storage <= csr_bankarray_csrbank1_wlevel_en0_r;
	end
	a7ddrphy_wlevel_en_re <= csr_bankarray_csrbank1_wlevel_en0_re;
	if (csr_bankarray_csrbank1_dly_sel0_re) begin
		a7ddrphy_dly_sel_storage[1:0] <= csr_bankarray_csrbank1_dly_sel0_r;
	end
	a7ddrphy_dly_sel_re <= csr_bankarray_csrbank1_dly_sel0_re;
	if (csr_bankarray_csrbank1_rdphase0_re) begin
		a7ddrphy_rdphase_storage[1:0] <= csr_bankarray_csrbank1_rdphase0_r;
	end
	a7ddrphy_rdphase_re <= csr_bankarray_csrbank1_rdphase0_re;
	if (csr_bankarray_csrbank1_wrphase0_re) begin
		a7ddrphy_wrphase_storage[1:0] <= csr_bankarray_csrbank1_wrphase0_r;
	end
	a7ddrphy_wrphase_re <= csr_bankarray_csrbank1_wrphase0_re;
	csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank2_sel) begin
		case (csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_slot_w;
			end
			1'd1: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_length_w;
			end
			2'd2: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_errors_w;
			end
			2'd3: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_status_w;
			end
			3'd4: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_pending_w;
			end
			3'd5: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_writer_ev_enable0_w;
			end
			3'd6: begin
				csr_bankarray_interface2_bank_bus_dat_r <= basesoc_ethmac_start_w;
			end
			3'd7: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ready_w;
			end
			4'd8: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_level_w;
			end
			4'd9: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_slot0_w;
			end
			4'd10: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_length0_w;
			end
			4'd11: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_status_w;
			end
			4'd12: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_pending_w;
			end
			4'd13: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_sram_reader_ev_enable0_w;
			end
			4'd14: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_preamble_crc_w;
			end
			4'd15: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rx_datapath_preamble_errors_w;
			end
			5'd16: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rx_datapath_crc_errors_w;
			end
		endcase
	end
	basesoc_ethmac_sram9_re <= csr_bankarray_csrbank2_sram_writer_slot_re;
	basesoc_ethmac_sram12_re <= csr_bankarray_csrbank2_sram_writer_length_re;
	basesoc_ethmac_sram15_re <= csr_bankarray_csrbank2_sram_writer_errors_re;
	basesoc_ethmac_sram24_re <= csr_bankarray_csrbank2_sram_writer_ev_status_re;
	if (csr_bankarray_csrbank2_sram_writer_ev_pending_re) begin
		basesoc_ethmac_sram29_r <= csr_bankarray_csrbank2_sram_writer_ev_pending_r;
	end
	basesoc_ethmac_sram28_re <= csr_bankarray_csrbank2_sram_writer_ev_pending_re;
	if (csr_bankarray_csrbank2_sram_writer_ev_enable0_re) begin
		basesoc_ethmac_sram31_storage <= csr_bankarray_csrbank2_sram_writer_ev_enable0_r;
	end
	basesoc_ethmac_sram32_re <= csr_bankarray_csrbank2_sram_writer_ev_enable0_re;
	basesoc_ethmac_sram96_re <= csr_bankarray_csrbank2_sram_reader_ready_re;
	basesoc_ethmac_sram99_re <= csr_bankarray_csrbank2_sram_reader_level_re;
	if (csr_bankarray_csrbank2_sram_reader_slot0_re) begin
		basesoc_ethmac_sram100_storage <= csr_bankarray_csrbank2_sram_reader_slot0_r;
	end
	basesoc_ethmac_sram101_re <= csr_bankarray_csrbank2_sram_reader_slot0_re;
	if (csr_bankarray_csrbank2_sram_reader_length0_re) begin
		basesoc_ethmac_sram102_storage[10:0] <= csr_bankarray_csrbank2_sram_reader_length0_r;
	end
	basesoc_ethmac_sram103_re <= csr_bankarray_csrbank2_sram_reader_length0_re;
	basesoc_ethmac_sram112_re <= csr_bankarray_csrbank2_sram_reader_ev_status_re;
	if (csr_bankarray_csrbank2_sram_reader_ev_pending_re) begin
		basesoc_ethmac_sram117_r <= csr_bankarray_csrbank2_sram_reader_ev_pending_r;
	end
	basesoc_ethmac_sram116_re <= csr_bankarray_csrbank2_sram_reader_ev_pending_re;
	if (csr_bankarray_csrbank2_sram_reader_ev_enable0_re) begin
		basesoc_ethmac_sram119_storage <= csr_bankarray_csrbank2_sram_reader_ev_enable0_r;
	end
	basesoc_ethmac_sram120_re <= csr_bankarray_csrbank2_sram_reader_ev_enable0_re;
	basesoc_ethmac_re <= csr_bankarray_csrbank2_preamble_crc_re;
	basesoc_ethmac_preamble_errors_re <= csr_bankarray_csrbank2_rx_datapath_preamble_errors_re;
	basesoc_ethmac_crc_errors_re <= csr_bankarray_csrbank2_rx_datapath_crc_errors_re;
	csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank3_sel) begin
		case (csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_crg_reset0_w;
			end
			1'd1: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_mdio_w0_w;
			end
			2'd2: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_mdio_r_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank3_crg_reset0_re) begin
		ethphy_reset_storage <= csr_bankarray_csrbank3_crg_reset0_r;
	end
	ethphy_reset_re <= csr_bankarray_csrbank3_crg_reset0_re;
	if (csr_bankarray_csrbank3_mdio_w0_re) begin
		ethphy__w_storage[2:0] <= csr_bankarray_csrbank3_mdio_w0_r;
	end
	ethphy__w_re <= csr_bankarray_csrbank3_mdio_w0_re;
	ethphy__r_re <= csr_bankarray_csrbank3_mdio_r_re;
	csr_bankarray_sel_r <= csr_bankarray_sel;
	csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank4_sel) begin
		case (csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_out0_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank4_out0_re) begin
		leds_storage[4:0] <= csr_bankarray_csrbank4_out0_r;
	end
	leds_re <= csr_bankarray_csrbank4_out0_re;
	csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank5_sel) begin
		case (csr_bankarray_interface5_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_control0_w;
			end
			1'd1: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi0_command0_w;
			end
			2'd2: begin
				csr_bankarray_interface5_bank_bus_dat_r <= basesoc_sdram_phaseinjector0_command_issue_w;
			end
			2'd3: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi0_address0_w;
			end
			3'd4: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi0_baddress0_w;
			end
			3'd5: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi0_wrdata0_w;
			end
			3'd6: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi0_rddata_w;
			end
			3'd7: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi1_command0_w;
			end
			4'd8: begin
				csr_bankarray_interface5_bank_bus_dat_r <= basesoc_sdram_phaseinjector1_command_issue_w;
			end
			4'd9: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi1_address0_w;
			end
			4'd10: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi1_baddress0_w;
			end
			4'd11: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi1_wrdata0_w;
			end
			4'd12: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi1_rddata_w;
			end
			4'd13: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi2_command0_w;
			end
			4'd14: begin
				csr_bankarray_interface5_bank_bus_dat_r <= basesoc_sdram_phaseinjector2_command_issue_w;
			end
			4'd15: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi2_address0_w;
			end
			5'd16: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi2_baddress0_w;
			end
			5'd17: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi2_wrdata0_w;
			end
			5'd18: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi2_rddata_w;
			end
			5'd19: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi3_command0_w;
			end
			5'd20: begin
				csr_bankarray_interface5_bank_bus_dat_r <= basesoc_sdram_phaseinjector3_command_issue_w;
			end
			5'd21: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi3_address0_w;
			end
			5'd22: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi3_baddress0_w;
			end
			5'd23: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi3_wrdata0_w;
			end
			5'd24: begin
				csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_dfii_pi3_rddata_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank5_dfii_control0_re) begin
		basesoc_sdram_storage[3:0] <= csr_bankarray_csrbank5_dfii_control0_r;
	end
	basesoc_sdram_re <= csr_bankarray_csrbank5_dfii_control0_re;
	if (csr_bankarray_csrbank5_dfii_pi0_command0_re) begin
		basesoc_sdram_phaseinjector0_command_storage[5:0] <= csr_bankarray_csrbank5_dfii_pi0_command0_r;
	end
	basesoc_sdram_phaseinjector0_command_re <= csr_bankarray_csrbank5_dfii_pi0_command0_re;
	if (csr_bankarray_csrbank5_dfii_pi0_address0_re) begin
		basesoc_sdram_phaseinjector0_address_storage[13:0] <= csr_bankarray_csrbank5_dfii_pi0_address0_r;
	end
	basesoc_sdram_phaseinjector0_address_re <= csr_bankarray_csrbank5_dfii_pi0_address0_re;
	if (csr_bankarray_csrbank5_dfii_pi0_baddress0_re) begin
		basesoc_sdram_phaseinjector0_baddress_storage[2:0] <= csr_bankarray_csrbank5_dfii_pi0_baddress0_r;
	end
	basesoc_sdram_phaseinjector0_baddress_re <= csr_bankarray_csrbank5_dfii_pi0_baddress0_re;
	if (csr_bankarray_csrbank5_dfii_pi0_wrdata0_re) begin
		basesoc_sdram_phaseinjector0_wrdata_storage[31:0] <= csr_bankarray_csrbank5_dfii_pi0_wrdata0_r;
	end
	basesoc_sdram_phaseinjector0_wrdata_re <= csr_bankarray_csrbank5_dfii_pi0_wrdata0_re;
	basesoc_sdram_phaseinjector0_rddata_re <= csr_bankarray_csrbank5_dfii_pi0_rddata_re;
	if (csr_bankarray_csrbank5_dfii_pi1_command0_re) begin
		basesoc_sdram_phaseinjector1_command_storage[5:0] <= csr_bankarray_csrbank5_dfii_pi1_command0_r;
	end
	basesoc_sdram_phaseinjector1_command_re <= csr_bankarray_csrbank5_dfii_pi1_command0_re;
	if (csr_bankarray_csrbank5_dfii_pi1_address0_re) begin
		basesoc_sdram_phaseinjector1_address_storage[13:0] <= csr_bankarray_csrbank5_dfii_pi1_address0_r;
	end
	basesoc_sdram_phaseinjector1_address_re <= csr_bankarray_csrbank5_dfii_pi1_address0_re;
	if (csr_bankarray_csrbank5_dfii_pi1_baddress0_re) begin
		basesoc_sdram_phaseinjector1_baddress_storage[2:0] <= csr_bankarray_csrbank5_dfii_pi1_baddress0_r;
	end
	basesoc_sdram_phaseinjector1_baddress_re <= csr_bankarray_csrbank5_dfii_pi1_baddress0_re;
	if (csr_bankarray_csrbank5_dfii_pi1_wrdata0_re) begin
		basesoc_sdram_phaseinjector1_wrdata_storage[31:0] <= csr_bankarray_csrbank5_dfii_pi1_wrdata0_r;
	end
	basesoc_sdram_phaseinjector1_wrdata_re <= csr_bankarray_csrbank5_dfii_pi1_wrdata0_re;
	basesoc_sdram_phaseinjector1_rddata_re <= csr_bankarray_csrbank5_dfii_pi1_rddata_re;
	if (csr_bankarray_csrbank5_dfii_pi2_command0_re) begin
		basesoc_sdram_phaseinjector2_command_storage[5:0] <= csr_bankarray_csrbank5_dfii_pi2_command0_r;
	end
	basesoc_sdram_phaseinjector2_command_re <= csr_bankarray_csrbank5_dfii_pi2_command0_re;
	if (csr_bankarray_csrbank5_dfii_pi2_address0_re) begin
		basesoc_sdram_phaseinjector2_address_storage[13:0] <= csr_bankarray_csrbank5_dfii_pi2_address0_r;
	end
	basesoc_sdram_phaseinjector2_address_re <= csr_bankarray_csrbank5_dfii_pi2_address0_re;
	if (csr_bankarray_csrbank5_dfii_pi2_baddress0_re) begin
		basesoc_sdram_phaseinjector2_baddress_storage[2:0] <= csr_bankarray_csrbank5_dfii_pi2_baddress0_r;
	end
	basesoc_sdram_phaseinjector2_baddress_re <= csr_bankarray_csrbank5_dfii_pi2_baddress0_re;
	if (csr_bankarray_csrbank5_dfii_pi2_wrdata0_re) begin
		basesoc_sdram_phaseinjector2_wrdata_storage[31:0] <= csr_bankarray_csrbank5_dfii_pi2_wrdata0_r;
	end
	basesoc_sdram_phaseinjector2_wrdata_re <= csr_bankarray_csrbank5_dfii_pi2_wrdata0_re;
	basesoc_sdram_phaseinjector2_rddata_re <= csr_bankarray_csrbank5_dfii_pi2_rddata_re;
	if (csr_bankarray_csrbank5_dfii_pi3_command0_re) begin
		basesoc_sdram_phaseinjector3_command_storage[5:0] <= csr_bankarray_csrbank5_dfii_pi3_command0_r;
	end
	basesoc_sdram_phaseinjector3_command_re <= csr_bankarray_csrbank5_dfii_pi3_command0_re;
	if (csr_bankarray_csrbank5_dfii_pi3_address0_re) begin
		basesoc_sdram_phaseinjector3_address_storage[13:0] <= csr_bankarray_csrbank5_dfii_pi3_address0_r;
	end
	basesoc_sdram_phaseinjector3_address_re <= csr_bankarray_csrbank5_dfii_pi3_address0_re;
	if (csr_bankarray_csrbank5_dfii_pi3_baddress0_re) begin
		basesoc_sdram_phaseinjector3_baddress_storage[2:0] <= csr_bankarray_csrbank5_dfii_pi3_baddress0_r;
	end
	basesoc_sdram_phaseinjector3_baddress_re <= csr_bankarray_csrbank5_dfii_pi3_baddress0_re;
	if (csr_bankarray_csrbank5_dfii_pi3_wrdata0_re) begin
		basesoc_sdram_phaseinjector3_wrdata_storage[31:0] <= csr_bankarray_csrbank5_dfii_pi3_wrdata0_r;
	end
	basesoc_sdram_phaseinjector3_wrdata_re <= csr_bankarray_csrbank5_dfii_pi3_wrdata0_re;
	basesoc_sdram_phaseinjector3_rddata_re <= csr_bankarray_csrbank5_dfii_pi3_rddata_re;
	csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank6_sel) begin
		case (csr_bankarray_interface6_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_out0_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank6_out0_re) begin
		sevenseg_storage[11:0] <= csr_bankarray_csrbank6_out0_r;
	end
	sevenseg_re <= csr_bankarray_csrbank6_out0_re;
	csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank7_sel) begin
		case (csr_bankarray_interface7_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_load0_w;
			end
			1'd1: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_reload0_w;
			end
			2'd2: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_en0_w;
			end
			2'd3: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_update_value0_w;
			end
			3'd4: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_value_w;
			end
			3'd5: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_ev_status_w;
			end
			3'd6: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_ev_pending_w;
			end
			3'd7: begin
				csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_ev_enable0_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank7_load0_re) begin
		basesoc_timer_load_storage[31:0] <= csr_bankarray_csrbank7_load0_r;
	end
	basesoc_timer_load_re <= csr_bankarray_csrbank7_load0_re;
	if (csr_bankarray_csrbank7_reload0_re) begin
		basesoc_timer_reload_storage[31:0] <= csr_bankarray_csrbank7_reload0_r;
	end
	basesoc_timer_reload_re <= csr_bankarray_csrbank7_reload0_re;
	if (csr_bankarray_csrbank7_en0_re) begin
		basesoc_timer_en_storage <= csr_bankarray_csrbank7_en0_r;
	end
	basesoc_timer_en_re <= csr_bankarray_csrbank7_en0_re;
	if (csr_bankarray_csrbank7_update_value0_re) begin
		basesoc_timer_update_value_storage <= csr_bankarray_csrbank7_update_value0_r;
	end
	basesoc_timer_update_value_re <= csr_bankarray_csrbank7_update_value0_re;
	basesoc_timer_value_re <= csr_bankarray_csrbank7_value_re;
	basesoc_timer_status_re <= csr_bankarray_csrbank7_ev_status_re;
	if (csr_bankarray_csrbank7_ev_pending_re) begin
		basesoc_timer_pending_r <= csr_bankarray_csrbank7_ev_pending_r;
	end
	basesoc_timer_pending_re <= csr_bankarray_csrbank7_ev_pending_re;
	if (csr_bankarray_csrbank7_ev_enable0_re) begin
		basesoc_timer_enable_storage <= csr_bankarray_csrbank7_ev_enable0_r;
	end
	basesoc_timer_enable_re <= csr_bankarray_csrbank7_ev_enable0_re;
	csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank8_sel) begin
		case (csr_bankarray_interface8_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface8_bank_bus_dat_r <= basesoc_uart_rxtx_w;
			end
			1'd1: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_txfull_w;
			end
			2'd2: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_rxempty_w;
			end
			2'd3: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_ev_status_w;
			end
			3'd4: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_ev_pending_w;
			end
			3'd5: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_ev_enable0_w;
			end
			3'd6: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_txempty_w;
			end
			3'd7: begin
				csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_rxfull_w;
			end
		endcase
	end
	basesoc_uart_txfull_re <= csr_bankarray_csrbank8_txfull_re;
	basesoc_uart_rxempty_re <= csr_bankarray_csrbank8_rxempty_re;
	basesoc_uart_status_re <= csr_bankarray_csrbank8_ev_status_re;
	if (csr_bankarray_csrbank8_ev_pending_re) begin
		basesoc_uart_pending_r[1:0] <= csr_bankarray_csrbank8_ev_pending_r;
	end
	basesoc_uart_pending_re <= csr_bankarray_csrbank8_ev_pending_re;
	if (csr_bankarray_csrbank8_ev_enable0_re) begin
		basesoc_uart_enable_storage[1:0] <= csr_bankarray_csrbank8_ev_enable0_r;
	end
	basesoc_uart_enable_re <= csr_bankarray_csrbank8_ev_enable0_re;
	basesoc_uart_txempty_re <= csr_bankarray_csrbank8_txempty_re;
	basesoc_uart_rxfull_re <= csr_bankarray_csrbank8_rxfull_re;
	if (sys_rst) begin
		basesoc_reset_storage <= 2'd0;
		basesoc_reset_re <= 1'd0;
		basesoc_scratch_storage <= 32'd305419896;
		basesoc_scratch_re <= 1'd0;
		basesoc_bus_errors_re <= 1'd0;
		basesoc_bus_errors <= 32'd0;
		basesoc_idbus_we <= 1'd0;
		basesoc_mbus_rdata1 <= 32'd0;
		basesoc_basesoc_ram_bus_ack <= 1'd0;
		basesoc_ram_bus_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd1;
		basesoc_tx_tick <= 1'd0;
		basesoc_rx_tick <= 1'd0;
		basesoc_rx_rx_d <= 1'd0;
		basesoc_uart_txfull_re <= 1'd0;
		basesoc_uart_rxempty_re <= 1'd0;
		basesoc_uart_tx_pending <= 1'd0;
		basesoc_uart_tx_trigger_d <= 1'd0;
		basesoc_uart_rx_pending <= 1'd0;
		basesoc_uart_rx_trigger_d <= 1'd0;
		basesoc_uart_status_re <= 1'd0;
		basesoc_uart_pending_re <= 1'd0;
		basesoc_uart_pending_r <= 2'd0;
		basesoc_uart_enable_storage <= 2'd0;
		basesoc_uart_enable_re <= 1'd0;
		basesoc_uart_txempty_re <= 1'd0;
		basesoc_uart_rxfull_re <= 1'd0;
		basesoc_uart_tx_fifo_readable <= 1'd0;
		basesoc_uart_tx_fifo_level0 <= 5'd0;
		basesoc_uart_tx_fifo_produce <= 4'd0;
		basesoc_uart_tx_fifo_consume <= 4'd0;
		basesoc_uart_rx_fifo_readable <= 1'd0;
		basesoc_uart_rx_fifo_level0 <= 5'd0;
		basesoc_uart_rx_fifo_produce <= 4'd0;
		basesoc_uart_rx_fifo_consume <= 4'd0;
		basesoc_timer_load_storage <= 32'd0;
		basesoc_timer_load_re <= 1'd0;
		basesoc_timer_reload_storage <= 32'd0;
		basesoc_timer_reload_re <= 1'd0;
		basesoc_timer_en_storage <= 1'd0;
		basesoc_timer_en_re <= 1'd0;
		basesoc_timer_update_value_storage <= 1'd0;
		basesoc_timer_update_value_re <= 1'd0;
		basesoc_timer_value_status <= 32'd0;
		basesoc_timer_value_re <= 1'd0;
		basesoc_timer_zero_pending <= 1'd0;
		basesoc_timer_zero_trigger_d <= 1'd0;
		basesoc_timer_status_re <= 1'd0;
		basesoc_timer_pending_re <= 1'd0;
		basesoc_timer_pending_r <= 1'd0;
		basesoc_timer_enable_storage <= 1'd0;
		basesoc_timer_enable_re <= 1'd0;
		basesoc_timer_value <= 32'd0;
		a7ddrphy_rst_storage <= 1'd0;
		a7ddrphy_rst_re <= 1'd0;
		a7ddrphy_half_sys8x_taps_storage <= 5'd8;
		a7ddrphy_half_sys8x_taps_re <= 1'd0;
		a7ddrphy_wlevel_en_storage <= 1'd0;
		a7ddrphy_wlevel_en_re <= 1'd0;
		a7ddrphy_dly_sel_storage <= 2'd0;
		a7ddrphy_dly_sel_re <= 1'd0;
		a7ddrphy_rdphase_storage <= 2'd2;
		a7ddrphy_rdphase_re <= 1'd0;
		a7ddrphy_wrphase_storage <= 2'd3;
		a7ddrphy_wrphase_re <= 1'd0;
		a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
		a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
		a7ddrphy_dqspattern_o1 <= 8'd0;
		a7ddrphy_bitslip0_value0 <= 3'd7;
		a7ddrphy_bitslip1_value0 <= 3'd7;
		a7ddrphy_bitslip0_value1 <= 3'd7;
		a7ddrphy_bitslip1_value1 <= 3'd7;
		a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
		a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
		a7ddrphy_bitslip0_value2 <= 3'd7;
		a7ddrphy_bitslip0_value3 <= 3'd7;
		a7ddrphy_bitslip1_value2 <= 3'd7;
		a7ddrphy_bitslip1_value3 <= 3'd7;
		a7ddrphy_bitslip2_value0 <= 3'd7;
		a7ddrphy_bitslip2_value1 <= 3'd7;
		a7ddrphy_bitslip3_value0 <= 3'd7;
		a7ddrphy_bitslip3_value1 <= 3'd7;
		a7ddrphy_bitslip4_value0 <= 3'd7;
		a7ddrphy_bitslip4_value1 <= 3'd7;
		a7ddrphy_bitslip5_value0 <= 3'd7;
		a7ddrphy_bitslip5_value1 <= 3'd7;
		a7ddrphy_bitslip6_value0 <= 3'd7;
		a7ddrphy_bitslip6_value1 <= 3'd7;
		a7ddrphy_bitslip7_value0 <= 3'd7;
		a7ddrphy_bitslip7_value1 <= 3'd7;
		a7ddrphy_bitslip8_value0 <= 3'd7;
		a7ddrphy_bitslip8_value1 <= 3'd7;
		a7ddrphy_bitslip9_value0 <= 3'd7;
		a7ddrphy_bitslip9_value1 <= 3'd7;
		a7ddrphy_bitslip10_value0 <= 3'd7;
		a7ddrphy_bitslip10_value1 <= 3'd7;
		a7ddrphy_bitslip11_value0 <= 3'd7;
		a7ddrphy_bitslip11_value1 <= 3'd7;
		a7ddrphy_bitslip12_value0 <= 3'd7;
		a7ddrphy_bitslip12_value1 <= 3'd7;
		a7ddrphy_bitslip13_value0 <= 3'd7;
		a7ddrphy_bitslip13_value1 <= 3'd7;
		a7ddrphy_bitslip14_value0 <= 3'd7;
		a7ddrphy_bitslip14_value1 <= 3'd7;
		a7ddrphy_bitslip15_value0 <= 3'd7;
		a7ddrphy_bitslip15_value1 <= 3'd7;
		a7ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
		basesoc_sdram_storage <= 4'd1;
		basesoc_sdram_re <= 1'd0;
		basesoc_sdram_phaseinjector0_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector0_command_re <= 1'd0;
		basesoc_sdram_phaseinjector0_address_re <= 1'd0;
		basesoc_sdram_phaseinjector0_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector0_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector0_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector0_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector1_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector1_command_re <= 1'd0;
		basesoc_sdram_phaseinjector1_address_re <= 1'd0;
		basesoc_sdram_phaseinjector1_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector1_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector1_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector1_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector2_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector2_command_re <= 1'd0;
		basesoc_sdram_phaseinjector2_address_re <= 1'd0;
		basesoc_sdram_phaseinjector2_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector2_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector2_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector2_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector3_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector3_command_re <= 1'd0;
		basesoc_sdram_phaseinjector3_address_re <= 1'd0;
		basesoc_sdram_phaseinjector3_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector3_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector3_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector3_rddata_re <= 1'd0;
		basesoc_sdram_dfi_p0_address <= 14'd0;
		basesoc_sdram_dfi_p0_bank <= 3'd0;
		basesoc_sdram_dfi_p0_cas_n <= 1'd1;
		basesoc_sdram_dfi_p0_cs_n <= 1'd1;
		basesoc_sdram_dfi_p0_ras_n <= 1'd1;
		basesoc_sdram_dfi_p0_we_n <= 1'd1;
		basesoc_sdram_dfi_p0_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p0_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p1_address <= 14'd0;
		basesoc_sdram_dfi_p1_bank <= 3'd0;
		basesoc_sdram_dfi_p1_cas_n <= 1'd1;
		basesoc_sdram_dfi_p1_cs_n <= 1'd1;
		basesoc_sdram_dfi_p1_ras_n <= 1'd1;
		basesoc_sdram_dfi_p1_we_n <= 1'd1;
		basesoc_sdram_dfi_p1_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p1_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p2_address <= 14'd0;
		basesoc_sdram_dfi_p2_bank <= 3'd0;
		basesoc_sdram_dfi_p2_cas_n <= 1'd1;
		basesoc_sdram_dfi_p2_cs_n <= 1'd1;
		basesoc_sdram_dfi_p2_ras_n <= 1'd1;
		basesoc_sdram_dfi_p2_we_n <= 1'd1;
		basesoc_sdram_dfi_p2_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p2_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p3_address <= 14'd0;
		basesoc_sdram_dfi_p3_bank <= 3'd0;
		basesoc_sdram_dfi_p3_cas_n <= 1'd1;
		basesoc_sdram_dfi_p3_cs_n <= 1'd1;
		basesoc_sdram_dfi_p3_ras_n <= 1'd1;
		basesoc_sdram_dfi_p3_we_n <= 1'd1;
		basesoc_sdram_dfi_p3_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p3_rddata_en <= 1'd0;
		basesoc_sdram_cmd_payload_a <= 14'd0;
		basesoc_sdram_cmd_payload_ba <= 3'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_timer_count1 <= 10'd781;
		basesoc_sdram_postponer_req_o <= 1'd0;
		basesoc_sdram_postponer_count <= 1'd0;
		basesoc_sdram_sequencer_done1 <= 1'd0;
		basesoc_sdram_sequencer_counter <= 6'd0;
		basesoc_sdram_sequencer_count <= 1'd0;
		basesoc_sdram_zqcs_timer_count1 <= 27'd99999999;
		basesoc_sdram_zqcs_executer_done <= 1'd0;
		basesoc_sdram_zqcs_executer_counter <= 5'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine0_row <= 14'd0;
		basesoc_sdram_bankmachine0_row_opened <= 1'd0;
		basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine1_row <= 14'd0;
		basesoc_sdram_bankmachine1_row_opened <= 1'd0;
		basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine2_row <= 14'd0;
		basesoc_sdram_bankmachine2_row_opened <= 1'd0;
		basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine3_row <= 14'd0;
		basesoc_sdram_bankmachine3_row_opened <= 1'd0;
		basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine4_row <= 14'd0;
		basesoc_sdram_bankmachine4_row_opened <= 1'd0;
		basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine5_row <= 14'd0;
		basesoc_sdram_bankmachine5_row_opened <= 1'd0;
		basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine6_row <= 14'd0;
		basesoc_sdram_bankmachine6_row_opened <= 1'd0;
		basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr <= 21'd0;
		basesoc_sdram_bankmachine7_row <= 14'd0;
		basesoc_sdram_bankmachine7_row_opened <= 1'd0;
		basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_trascon_count <= 3'd0;
		basesoc_sdram_choose_cmd_grant <= 3'd0;
		basesoc_sdram_choose_req_grant <= 3'd0;
		basesoc_sdram_trrdcon_ready <= 1'd0;
		basesoc_sdram_trrdcon_count <= 1'd0;
		basesoc_sdram_tfawcon_ready <= 1'd1;
		basesoc_sdram_tfawcon_window <= 5'd0;
		basesoc_sdram_tccdcon_ready <= 1'd0;
		basesoc_sdram_tccdcon_count <= 1'd0;
		basesoc_sdram_twtrcon_ready <= 1'd0;
		basesoc_sdram_twtrcon_count <= 3'd0;
		basesoc_sdram_time0 <= 5'd0;
		basesoc_sdram_time1 <= 4'd0;
		basesoc_aborted <= 1'd0;
		ethphy_reset_storage <= 1'd0;
		ethphy_reset_re <= 1'd0;
		ethphy_counter <= 9'd0;
		ethphy__w_storage <= 3'd0;
		ethphy__w_re <= 1'd0;
		ethphy__r_re <= 1'd0;
		basesoc_ethmac_re <= 1'd0;
		basesoc_ethmac_tx_cdc_cdc_graycounter0_q <= 6'd0;
		basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary <= 6'd0;
		basesoc_ethmac_preamble_errors_status <= 32'd0;
		basesoc_ethmac_preamble_errors_re <= 1'd0;
		basesoc_ethmac_crc_errors_status <= 32'd0;
		basesoc_ethmac_crc_errors_re <= 1'd0;
		basesoc_ethmac_rx_cdc_cdc_graycounter1_q <= 6'd0;
		basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary <= 6'd0;
		basesoc_ethmac_sram9_re <= 1'd0;
		basesoc_ethmac_sram12_re <= 1'd0;
		basesoc_ethmac_sram13_status <= 32'd0;
		basesoc_ethmac_sram15_re <= 1'd0;
		basesoc_ethmac_sram24_re <= 1'd0;
		basesoc_ethmac_sram28_re <= 1'd0;
		basesoc_ethmac_sram29_r <= 1'd0;
		basesoc_ethmac_sram31_storage <= 1'd0;
		basesoc_ethmac_sram32_re <= 1'd0;
		basesoc_ethmac_slot <= 1'd0;
		basesoc_ethmac_sram35_length <= 11'd0;
		basesoc_ethmac_sram55_level <= 2'd0;
		basesoc_ethmac_sram57_produce <= 1'd0;
		basesoc_ethmac_sram58_consume <= 1'd0;
		basesoc_ethmac_sram96_re <= 1'd0;
		basesoc_ethmac_sram99_re <= 1'd0;
		basesoc_ethmac_sram101_re <= 1'd0;
		basesoc_ethmac_sram103_re <= 1'd0;
		basesoc_ethmac_sram106_pending <= 1'd0;
		basesoc_ethmac_sram112_re <= 1'd0;
		basesoc_ethmac_sram116_re <= 1'd0;
		basesoc_ethmac_sram117_r <= 1'd0;
		basesoc_ethmac_sram119_storage <= 1'd0;
		basesoc_ethmac_sram120_re <= 1'd0;
		basesoc_ethmac_sram122_length <= 11'd0;
		basesoc_ethmac_sram141_level <= 2'd0;
		basesoc_ethmac_sram143_produce <= 1'd0;
		basesoc_ethmac_sram144_consume <= 1'd0;
		basesoc_ethmac_interface0_ack <= 1'd0;
		basesoc_ethmac_interface1_ack <= 1'd0;
		basesoc_ethmac_interface2_ack <= 1'd0;
		basesoc_ethmac_interface3_ack <= 1'd0;
		basesoc_ethmac_slave_sel_r <= 4'd0;
		leds_storage <= 5'd0;
		leds_re <= 1'd0;
		leds_chaser <= 5'd0;
		leds_mode <= 1'd0;
		leds_count <= 24'd10000000;
		sevenseg_storage <= 12'd0;
		sevenseg_re <= 1'd0;
		sevenseg_xdigits <= 12'd0;
		sevenseg_select <= 3'd0;
		sevenseg_count0 <= 2'd0;
		sevenseg_count1 <= 18'd166666;
		femtorv_state <= 1'd0;
		rs232phytx_state <= 1'd0;
		rs232phyrx_state <= 1'd0;
		refresher_state <= 2'd0;
		bankmachine0_state <= 4'd0;
		bankmachine1_state <= 4'd0;
		bankmachine2_state <= 4'd0;
		bankmachine3_state <= 4'd0;
		bankmachine4_state <= 4'd0;
		bankmachine5_state <= 4'd0;
		bankmachine6_state <= 4'd0;
		bankmachine7_state <= 4'd0;
		multiplexer_state <= 4'd0;
		new_master_wdata_ready0 <= 1'd0;
		new_master_wdata_ready1 <= 1'd0;
		new_master_rdata_valid0 <= 1'd0;
		new_master_rdata_valid1 <= 1'd0;
		new_master_rdata_valid2 <= 1'd0;
		new_master_rdata_valid3 <= 1'd0;
		new_master_rdata_valid4 <= 1'd0;
		new_master_rdata_valid5 <= 1'd0;
		new_master_rdata_valid6 <= 1'd0;
		new_master_rdata_valid7 <= 1'd0;
		new_master_rdata_valid8 <= 1'd0;
		fullmemorywe_state <= 2'd0;
		litedramwishbone2native_state <= 2'd0;
		liteethmacsramwriter_state <= 2'd0;
		liteethmacsramreader_state <= 2'd0;
		basesoc_we <= 1'd0;
		slave_sel_r <= 5'd0;
		count <= 20'd1000000;
		csr_bankarray_sel_r <= 1'd0;
		state <= 2'd0;
	end
	xilinxmultiregimpl0_regs0 <= serial_rx;
	xilinxmultiregimpl0_regs1 <= xilinxmultiregimpl0_regs0;
	xilinxmultiregimpl1_regs0 <= ethphy_data_r;
	xilinxmultiregimpl1_regs1 <= xilinxmultiregimpl1_regs0;
	xilinxmultiregimpl3_regs0 <= basesoc_ethmac_tx_cdc_cdc_graycounter1_q;
	xilinxmultiregimpl3_regs1 <= xilinxmultiregimpl3_regs0;
	xilinxmultiregimpl4_regs0 <= basesoc_ethmac_pulsesynchronizer0_toggle_i;
	xilinxmultiregimpl4_regs1 <= xilinxmultiregimpl4_regs0;
	xilinxmultiregimpl5_regs0 <= basesoc_ethmac_pulsesynchronizer1_toggle_i;
	xilinxmultiregimpl5_regs1 <= xilinxmultiregimpl5_regs0;
	xilinxmultiregimpl6_regs0 <= basesoc_ethmac_rx_cdc_cdc_graycounter0_q;
	xilinxmultiregimpl6_regs1 <= xilinxmultiregimpl6_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 8541-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] mem[0:8540];
initial begin
	$readmemh("mem.init", mem);
end
reg [31:0] mem_dat0;
always @(posedge sys_clk) begin
	mem_dat0 <= mem[basesoc_basesoc_adr];
end
assign basesoc_basesoc_dat_r = mem_dat0;


//------------------------------------------------------------------------------
// Memory mem_1: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_1[0:2047];
initial begin
	$readmemh("mem_1.init", mem_1);
end
reg [10:0] mem_1_adr0;
always @(posedge sys_clk) begin
	if (basesoc_ram_we[0])
		mem_1[basesoc_ram_adr][7:0] <= basesoc_ram_dat_w[7:0];
	if (basesoc_ram_we[1])
		mem_1[basesoc_ram_adr][15:8] <= basesoc_ram_dat_w[15:8];
	if (basesoc_ram_we[2])
		mem_1[basesoc_ram_adr][23:16] <= basesoc_ram_dat_w[23:16];
	if (basesoc_ram_we[3])
		mem_1[basesoc_ram_adr][31:24] <= basesoc_ram_dat_w[31:24];
	mem_1_adr0 <= basesoc_ram_adr;
end
assign basesoc_ram_dat_r = mem_1[mem_1_adr0];


//------------------------------------------------------------------------------
// Memory mem_2: 65-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem_2[0:64];
initial begin
	$readmemh("mem_2.init", mem_2);
end
reg [6:0] mem_2_adr0;
always @(posedge sys_clk) begin
	mem_2_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem_2[mem_2_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_wrport_we)
		storage[basesoc_uart_tx_fifo_wrport_adr] <= basesoc_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[basesoc_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[basesoc_uart_tx_fifo_rdport_adr];
end
assign basesoc_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign basesoc_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_wrport_we)
		storage_1[basesoc_uart_rx_fifo_wrport_adr] <= basesoc_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[basesoc_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[basesoc_uart_rx_fifo_rdport_adr];
end
assign basesoc_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign basesoc_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


BUFG BUFG(
	.I(crg_clkout0),
	.O(crg_clkout_buf0)
);

BUFG BUFG_1(
	.I(crg_clkout1),
	.O(crg_clkout_buf1)
);

BUFG BUFG_2(
	.I(crg_clkout2),
	.O(crg_clkout_buf2)
);

BUFG BUFG_3(
	.I(crg_clkout3),
	.O(crg_clkout_buf3)
);

BUFG BUFG_4(
	.I(crg_clkout4),
	.O(crg_clkout_buf4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(1'd0),
	.D2(1'd1),
	.D3(1'd0),
	.D4(1'd1),
	.D5(1'd0),
	.D6(1'd1),
	.D7(1'd0),
	.D8(1'd1),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(a7ddrphy_sd_clk_se_nodelay)
);

OBUFDS OBUFDS(
	.I(a7ddrphy_sd_clk_se_nodelay),
	.O(ddram_clk_p),
	.OB(ddram_clk_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_1 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_reset_n),
	.D2(a7ddrphy_dfi_p0_reset_n),
	.D3(a7ddrphy_dfi_p1_reset_n),
	.D4(a7ddrphy_dfi_p1_reset_n),
	.D5(a7ddrphy_dfi_p2_reset_n),
	.D6(a7ddrphy_dfi_p2_reset_n),
	.D7(a7ddrphy_dfi_p3_reset_n),
	.D8(a7ddrphy_dfi_p3_reset_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_reset_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[0]),
	.D2(a7ddrphy_dfi_p0_address[0]),
	.D3(a7ddrphy_dfi_p1_address[0]),
	.D4(a7ddrphy_dfi_p1_address[0]),
	.D5(a7ddrphy_dfi_p2_address[0]),
	.D6(a7ddrphy_dfi_p2_address[0]),
	.D7(a7ddrphy_dfi_p3_address[0]),
	.D8(a7ddrphy_dfi_p3_address[0]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_3 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[1]),
	.D2(a7ddrphy_dfi_p0_address[1]),
	.D3(a7ddrphy_dfi_p1_address[1]),
	.D4(a7ddrphy_dfi_p1_address[1]),
	.D5(a7ddrphy_dfi_p2_address[1]),
	.D6(a7ddrphy_dfi_p2_address[1]),
	.D7(a7ddrphy_dfi_p3_address[1]),
	.D8(a7ddrphy_dfi_p3_address[1]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_4 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[2]),
	.D2(a7ddrphy_dfi_p0_address[2]),
	.D3(a7ddrphy_dfi_p1_address[2]),
	.D4(a7ddrphy_dfi_p1_address[2]),
	.D5(a7ddrphy_dfi_p2_address[2]),
	.D6(a7ddrphy_dfi_p2_address[2]),
	.D7(a7ddrphy_dfi_p3_address[2]),
	.D8(a7ddrphy_dfi_p3_address[2]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_5 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[3]),
	.D2(a7ddrphy_dfi_p0_address[3]),
	.D3(a7ddrphy_dfi_p1_address[3]),
	.D4(a7ddrphy_dfi_p1_address[3]),
	.D5(a7ddrphy_dfi_p2_address[3]),
	.D6(a7ddrphy_dfi_p2_address[3]),
	.D7(a7ddrphy_dfi_p3_address[3]),
	.D8(a7ddrphy_dfi_p3_address[3]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[3])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_6 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[4]),
	.D2(a7ddrphy_dfi_p0_address[4]),
	.D3(a7ddrphy_dfi_p1_address[4]),
	.D4(a7ddrphy_dfi_p1_address[4]),
	.D5(a7ddrphy_dfi_p2_address[4]),
	.D6(a7ddrphy_dfi_p2_address[4]),
	.D7(a7ddrphy_dfi_p3_address[4]),
	.D8(a7ddrphy_dfi_p3_address[4]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[4])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_7 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[5]),
	.D2(a7ddrphy_dfi_p0_address[5]),
	.D3(a7ddrphy_dfi_p1_address[5]),
	.D4(a7ddrphy_dfi_p1_address[5]),
	.D5(a7ddrphy_dfi_p2_address[5]),
	.D6(a7ddrphy_dfi_p2_address[5]),
	.D7(a7ddrphy_dfi_p3_address[5]),
	.D8(a7ddrphy_dfi_p3_address[5]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[5])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_8 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[6]),
	.D2(a7ddrphy_dfi_p0_address[6]),
	.D3(a7ddrphy_dfi_p1_address[6]),
	.D4(a7ddrphy_dfi_p1_address[6]),
	.D5(a7ddrphy_dfi_p2_address[6]),
	.D6(a7ddrphy_dfi_p2_address[6]),
	.D7(a7ddrphy_dfi_p3_address[6]),
	.D8(a7ddrphy_dfi_p3_address[6]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[6])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_9 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[7]),
	.D2(a7ddrphy_dfi_p0_address[7]),
	.D3(a7ddrphy_dfi_p1_address[7]),
	.D4(a7ddrphy_dfi_p1_address[7]),
	.D5(a7ddrphy_dfi_p2_address[7]),
	.D6(a7ddrphy_dfi_p2_address[7]),
	.D7(a7ddrphy_dfi_p3_address[7]),
	.D8(a7ddrphy_dfi_p3_address[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[7])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_10 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[8]),
	.D2(a7ddrphy_dfi_p0_address[8]),
	.D3(a7ddrphy_dfi_p1_address[8]),
	.D4(a7ddrphy_dfi_p1_address[8]),
	.D5(a7ddrphy_dfi_p2_address[8]),
	.D6(a7ddrphy_dfi_p2_address[8]),
	.D7(a7ddrphy_dfi_p3_address[8]),
	.D8(a7ddrphy_dfi_p3_address[8]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[8])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_11 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[9]),
	.D2(a7ddrphy_dfi_p0_address[9]),
	.D3(a7ddrphy_dfi_p1_address[9]),
	.D4(a7ddrphy_dfi_p1_address[9]),
	.D5(a7ddrphy_dfi_p2_address[9]),
	.D6(a7ddrphy_dfi_p2_address[9]),
	.D7(a7ddrphy_dfi_p3_address[9]),
	.D8(a7ddrphy_dfi_p3_address[9]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[9])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_12 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[10]),
	.D2(a7ddrphy_dfi_p0_address[10]),
	.D3(a7ddrphy_dfi_p1_address[10]),
	.D4(a7ddrphy_dfi_p1_address[10]),
	.D5(a7ddrphy_dfi_p2_address[10]),
	.D6(a7ddrphy_dfi_p2_address[10]),
	.D7(a7ddrphy_dfi_p3_address[10]),
	.D8(a7ddrphy_dfi_p3_address[10]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[10])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_13 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[11]),
	.D2(a7ddrphy_dfi_p0_address[11]),
	.D3(a7ddrphy_dfi_p1_address[11]),
	.D4(a7ddrphy_dfi_p1_address[11]),
	.D5(a7ddrphy_dfi_p2_address[11]),
	.D6(a7ddrphy_dfi_p2_address[11]),
	.D7(a7ddrphy_dfi_p3_address[11]),
	.D8(a7ddrphy_dfi_p3_address[11]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[11])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_14 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[12]),
	.D2(a7ddrphy_dfi_p0_address[12]),
	.D3(a7ddrphy_dfi_p1_address[12]),
	.D4(a7ddrphy_dfi_p1_address[12]),
	.D5(a7ddrphy_dfi_p2_address[12]),
	.D6(a7ddrphy_dfi_p2_address[12]),
	.D7(a7ddrphy_dfi_p3_address[12]),
	.D8(a7ddrphy_dfi_p3_address[12]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[12])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_15 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[13]),
	.D2(a7ddrphy_dfi_p0_address[13]),
	.D3(a7ddrphy_dfi_p1_address[13]),
	.D4(a7ddrphy_dfi_p1_address[13]),
	.D5(a7ddrphy_dfi_p2_address[13]),
	.D6(a7ddrphy_dfi_p2_address[13]),
	.D7(a7ddrphy_dfi_p3_address[13]),
	.D8(a7ddrphy_dfi_p3_address[13]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[13])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_16 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[0]),
	.D2(a7ddrphy_dfi_p0_bank[0]),
	.D3(a7ddrphy_dfi_p1_bank[0]),
	.D4(a7ddrphy_dfi_p1_bank[0]),
	.D5(a7ddrphy_dfi_p2_bank[0]),
	.D6(a7ddrphy_dfi_p2_bank[0]),
	.D7(a7ddrphy_dfi_p3_bank[0]),
	.D8(a7ddrphy_dfi_p3_bank[0]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(a7ddrphy_pads_ba[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_17 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[1]),
	.D2(a7ddrphy_dfi_p0_bank[1]),
	.D3(a7ddrphy_dfi_p1_bank[1]),
	.D4(a7ddrphy_dfi_p1_bank[1]),
	.D5(a7ddrphy_dfi_p2_bank[1]),
	.D6(a7ddrphy_dfi_p2_bank[1]),
	.D7(a7ddrphy_dfi_p3_bank[1]),
	.D8(a7ddrphy_dfi_p3_bank[1]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(a7ddrphy_pads_ba[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_18 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[2]),
	.D2(a7ddrphy_dfi_p0_bank[2]),
	.D3(a7ddrphy_dfi_p1_bank[2]),
	.D4(a7ddrphy_dfi_p1_bank[2]),
	.D5(a7ddrphy_dfi_p2_bank[2]),
	.D6(a7ddrphy_dfi_p2_bank[2]),
	.D7(a7ddrphy_dfi_p3_bank[2]),
	.D8(a7ddrphy_dfi_p3_bank[2]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(a7ddrphy_pads_ba[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_19 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_ras_n),
	.D2(a7ddrphy_dfi_p0_ras_n),
	.D3(a7ddrphy_dfi_p1_ras_n),
	.D4(a7ddrphy_dfi_p1_ras_n),
	.D5(a7ddrphy_dfi_p2_ras_n),
	.D6(a7ddrphy_dfi_p2_ras_n),
	.D7(a7ddrphy_dfi_p3_ras_n),
	.D8(a7ddrphy_dfi_p3_ras_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_ras_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_20 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_cas_n),
	.D2(a7ddrphy_dfi_p0_cas_n),
	.D3(a7ddrphy_dfi_p1_cas_n),
	.D4(a7ddrphy_dfi_p1_cas_n),
	.D5(a7ddrphy_dfi_p2_cas_n),
	.D6(a7ddrphy_dfi_p2_cas_n),
	.D7(a7ddrphy_dfi_p3_cas_n),
	.D8(a7ddrphy_dfi_p3_cas_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_cas_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_21 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_we_n),
	.D2(a7ddrphy_dfi_p0_we_n),
	.D3(a7ddrphy_dfi_p1_we_n),
	.D4(a7ddrphy_dfi_p1_we_n),
	.D5(a7ddrphy_dfi_p2_we_n),
	.D6(a7ddrphy_dfi_p2_we_n),
	.D7(a7ddrphy_dfi_p3_we_n),
	.D8(a7ddrphy_dfi_p3_we_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_we_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_22 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_cke),
	.D2(a7ddrphy_dfi_p0_cke),
	.D3(a7ddrphy_dfi_p1_cke),
	.D4(a7ddrphy_dfi_p1_cke),
	.D5(a7ddrphy_dfi_p2_cke),
	.D6(a7ddrphy_dfi_p2_cke),
	.D7(a7ddrphy_dfi_p3_cke),
	.D8(a7ddrphy_dfi_p3_cke),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_cke)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_23 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_odt),
	.D2(a7ddrphy_dfi_p0_odt),
	.D3(a7ddrphy_dfi_p1_odt),
	.D4(a7ddrphy_dfi_p1_odt),
	.D5(a7ddrphy_dfi_p2_odt),
	.D6(a7ddrphy_dfi_p2_odt),
	.D7(a7ddrphy_dfi_p3_odt),
	.D8(a7ddrphy_dfi_p3_odt),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_odt)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_24 (
	.CLK(sys4x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip00[0]),
	.D2(a7ddrphy_bitslip00[1]),
	.D3(a7ddrphy_bitslip00[2]),
	.D4(a7ddrphy_bitslip00[3]),
	.D5(a7ddrphy_bitslip00[4]),
	.D6(a7ddrphy_bitslip00[5]),
	.D7(a7ddrphy_bitslip00[6]),
	.D8(a7ddrphy_bitslip00[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(a7ddrphy0),
	.OQ(a7ddrphy_dqs_o_no_delay0),
	.TQ(a7ddrphy_dqs_t0)
);

IOBUFDS IOBUFDS(
	.I(a7ddrphy_dqs_o_no_delay0),
	.T(a7ddrphy_dqs_t0),
	.IO(ddram_dqs_p[0]),
	.IOB(ddram_dqs_n[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_25 (
	.CLK(sys4x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip10[0]),
	.D2(a7ddrphy_bitslip10[1]),
	.D3(a7ddrphy_bitslip10[2]),
	.D4(a7ddrphy_bitslip10[3]),
	.D5(a7ddrphy_bitslip10[4]),
	.D6(a7ddrphy_bitslip10[5]),
	.D7(a7ddrphy_bitslip10[6]),
	.D8(a7ddrphy_bitslip10[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(a7ddrphy1),
	.OQ(a7ddrphy_dqs_o_no_delay1),
	.TQ(a7ddrphy_dqs_t1)
);

IOBUFDS IOBUFDS_1(
	.I(a7ddrphy_dqs_o_no_delay1),
	.T(a7ddrphy_dqs_t1),
	.IO(ddram_dqs_p[1]),
	.IOB(ddram_dqs_n[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_26 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip01[0]),
	.D2(a7ddrphy_bitslip01[1]),
	.D3(a7ddrphy_bitslip01[2]),
	.D4(a7ddrphy_bitslip01[3]),
	.D5(a7ddrphy_bitslip01[4]),
	.D6(a7ddrphy_bitslip01[5]),
	.D7(a7ddrphy_bitslip01[6]),
	.D8(a7ddrphy_bitslip01[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_dm[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_27 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip11[0]),
	.D2(a7ddrphy_bitslip11[1]),
	.D3(a7ddrphy_bitslip11[2]),
	.D4(a7ddrphy_bitslip11[3]),
	.D5(a7ddrphy_bitslip11[4]),
	.D6(a7ddrphy_bitslip11[5]),
	.D7(a7ddrphy_bitslip11[6]),
	.D8(a7ddrphy_bitslip11[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_dm[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_28 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip02[0]),
	.D2(a7ddrphy_bitslip02[1]),
	.D3(a7ddrphy_bitslip02[2]),
	.D4(a7ddrphy_bitslip02[3]),
	.D5(a7ddrphy_bitslip02[4]),
	.D6(a7ddrphy_bitslip02[5]),
	.D7(a7ddrphy_bitslip02[6]),
	.D8(a7ddrphy_bitslip02[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay0),
	.TQ(a7ddrphy_dq_t0)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed0),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip03[7]),
	.Q2(a7ddrphy_bitslip03[6]),
	.Q3(a7ddrphy_bitslip03[5]),
	.Q4(a7ddrphy_bitslip03[4]),
	.Q5(a7ddrphy_bitslip03[3]),
	.Q6(a7ddrphy_bitslip03[2]),
	.Q7(a7ddrphy_bitslip03[1]),
	.Q8(a7ddrphy_bitslip03[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay0),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed0)
);

IOBUF IOBUF(
	.I(a7ddrphy_dq_o_nodelay0),
	.T(a7ddrphy_dq_t0),
	.IO(ddram_dq[0]),
	.O(a7ddrphy_dq_i_nodelay0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_29 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip12[0]),
	.D2(a7ddrphy_bitslip12[1]),
	.D3(a7ddrphy_bitslip12[2]),
	.D4(a7ddrphy_bitslip12[3]),
	.D5(a7ddrphy_bitslip12[4]),
	.D6(a7ddrphy_bitslip12[5]),
	.D7(a7ddrphy_bitslip12[6]),
	.D8(a7ddrphy_bitslip12[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay1),
	.TQ(a7ddrphy_dq_t1)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_1 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip13[7]),
	.Q2(a7ddrphy_bitslip13[6]),
	.Q3(a7ddrphy_bitslip13[5]),
	.Q4(a7ddrphy_bitslip13[4]),
	.Q5(a7ddrphy_bitslip13[3]),
	.Q6(a7ddrphy_bitslip13[2]),
	.Q7(a7ddrphy_bitslip13[1]),
	.Q8(a7ddrphy_bitslip13[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_1 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay1),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed1)
);

IOBUF IOBUF_1(
	.I(a7ddrphy_dq_o_nodelay1),
	.T(a7ddrphy_dq_t1),
	.IO(ddram_dq[1]),
	.O(a7ddrphy_dq_i_nodelay1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_30 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip20[0]),
	.D2(a7ddrphy_bitslip20[1]),
	.D3(a7ddrphy_bitslip20[2]),
	.D4(a7ddrphy_bitslip20[3]),
	.D5(a7ddrphy_bitslip20[4]),
	.D6(a7ddrphy_bitslip20[5]),
	.D7(a7ddrphy_bitslip20[6]),
	.D8(a7ddrphy_bitslip20[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay2),
	.TQ(a7ddrphy_dq_t2)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed2),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip21[7]),
	.Q2(a7ddrphy_bitslip21[6]),
	.Q3(a7ddrphy_bitslip21[5]),
	.Q4(a7ddrphy_bitslip21[4]),
	.Q5(a7ddrphy_bitslip21[3]),
	.Q6(a7ddrphy_bitslip21[2]),
	.Q7(a7ddrphy_bitslip21[1]),
	.Q8(a7ddrphy_bitslip21[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_2 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay2),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed2)
);

IOBUF IOBUF_2(
	.I(a7ddrphy_dq_o_nodelay2),
	.T(a7ddrphy_dq_t2),
	.IO(ddram_dq[2]),
	.O(a7ddrphy_dq_i_nodelay2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_31 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip30[0]),
	.D2(a7ddrphy_bitslip30[1]),
	.D3(a7ddrphy_bitslip30[2]),
	.D4(a7ddrphy_bitslip30[3]),
	.D5(a7ddrphy_bitslip30[4]),
	.D6(a7ddrphy_bitslip30[5]),
	.D7(a7ddrphy_bitslip30[6]),
	.D8(a7ddrphy_bitslip30[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay3),
	.TQ(a7ddrphy_dq_t3)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_3 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed3),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip31[7]),
	.Q2(a7ddrphy_bitslip31[6]),
	.Q3(a7ddrphy_bitslip31[5]),
	.Q4(a7ddrphy_bitslip31[4]),
	.Q5(a7ddrphy_bitslip31[3]),
	.Q6(a7ddrphy_bitslip31[2]),
	.Q7(a7ddrphy_bitslip31[1]),
	.Q8(a7ddrphy_bitslip31[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_3 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay3),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed3)
);

IOBUF IOBUF_3(
	.I(a7ddrphy_dq_o_nodelay3),
	.T(a7ddrphy_dq_t3),
	.IO(ddram_dq[3]),
	.O(a7ddrphy_dq_i_nodelay3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_32 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip40[0]),
	.D2(a7ddrphy_bitslip40[1]),
	.D3(a7ddrphy_bitslip40[2]),
	.D4(a7ddrphy_bitslip40[3]),
	.D5(a7ddrphy_bitslip40[4]),
	.D6(a7ddrphy_bitslip40[5]),
	.D7(a7ddrphy_bitslip40[6]),
	.D8(a7ddrphy_bitslip40[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay4),
	.TQ(a7ddrphy_dq_t4)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_4 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed4),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip41[7]),
	.Q2(a7ddrphy_bitslip41[6]),
	.Q3(a7ddrphy_bitslip41[5]),
	.Q4(a7ddrphy_bitslip41[4]),
	.Q5(a7ddrphy_bitslip41[3]),
	.Q6(a7ddrphy_bitslip41[2]),
	.Q7(a7ddrphy_bitslip41[1]),
	.Q8(a7ddrphy_bitslip41[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_4 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay4),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed4)
);

IOBUF IOBUF_4(
	.I(a7ddrphy_dq_o_nodelay4),
	.T(a7ddrphy_dq_t4),
	.IO(ddram_dq[4]),
	.O(a7ddrphy_dq_i_nodelay4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_33 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip50[0]),
	.D2(a7ddrphy_bitslip50[1]),
	.D3(a7ddrphy_bitslip50[2]),
	.D4(a7ddrphy_bitslip50[3]),
	.D5(a7ddrphy_bitslip50[4]),
	.D6(a7ddrphy_bitslip50[5]),
	.D7(a7ddrphy_bitslip50[6]),
	.D8(a7ddrphy_bitslip50[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay5),
	.TQ(a7ddrphy_dq_t5)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_5 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed5),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip51[7]),
	.Q2(a7ddrphy_bitslip51[6]),
	.Q3(a7ddrphy_bitslip51[5]),
	.Q4(a7ddrphy_bitslip51[4]),
	.Q5(a7ddrphy_bitslip51[3]),
	.Q6(a7ddrphy_bitslip51[2]),
	.Q7(a7ddrphy_bitslip51[1]),
	.Q8(a7ddrphy_bitslip51[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_5 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay5),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed5)
);

IOBUF IOBUF_5(
	.I(a7ddrphy_dq_o_nodelay5),
	.T(a7ddrphy_dq_t5),
	.IO(ddram_dq[5]),
	.O(a7ddrphy_dq_i_nodelay5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_34 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip60[0]),
	.D2(a7ddrphy_bitslip60[1]),
	.D3(a7ddrphy_bitslip60[2]),
	.D4(a7ddrphy_bitslip60[3]),
	.D5(a7ddrphy_bitslip60[4]),
	.D6(a7ddrphy_bitslip60[5]),
	.D7(a7ddrphy_bitslip60[6]),
	.D8(a7ddrphy_bitslip60[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay6),
	.TQ(a7ddrphy_dq_t6)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_6 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed6),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip61[7]),
	.Q2(a7ddrphy_bitslip61[6]),
	.Q3(a7ddrphy_bitslip61[5]),
	.Q4(a7ddrphy_bitslip61[4]),
	.Q5(a7ddrphy_bitslip61[3]),
	.Q6(a7ddrphy_bitslip61[2]),
	.Q7(a7ddrphy_bitslip61[1]),
	.Q8(a7ddrphy_bitslip61[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_6 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay6),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed6)
);

IOBUF IOBUF_6(
	.I(a7ddrphy_dq_o_nodelay6),
	.T(a7ddrphy_dq_t6),
	.IO(ddram_dq[6]),
	.O(a7ddrphy_dq_i_nodelay6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_35 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip70[0]),
	.D2(a7ddrphy_bitslip70[1]),
	.D3(a7ddrphy_bitslip70[2]),
	.D4(a7ddrphy_bitslip70[3]),
	.D5(a7ddrphy_bitslip70[4]),
	.D6(a7ddrphy_bitslip70[5]),
	.D7(a7ddrphy_bitslip70[6]),
	.D8(a7ddrphy_bitslip70[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay7),
	.TQ(a7ddrphy_dq_t7)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_7 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed7),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip71[7]),
	.Q2(a7ddrphy_bitslip71[6]),
	.Q3(a7ddrphy_bitslip71[5]),
	.Q4(a7ddrphy_bitslip71[4]),
	.Q5(a7ddrphy_bitslip71[3]),
	.Q6(a7ddrphy_bitslip71[2]),
	.Q7(a7ddrphy_bitslip71[1]),
	.Q8(a7ddrphy_bitslip71[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_7 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay7),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed7)
);

IOBUF IOBUF_7(
	.I(a7ddrphy_dq_o_nodelay7),
	.T(a7ddrphy_dq_t7),
	.IO(ddram_dq[7]),
	.O(a7ddrphy_dq_i_nodelay7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_36 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip80[0]),
	.D2(a7ddrphy_bitslip80[1]),
	.D3(a7ddrphy_bitslip80[2]),
	.D4(a7ddrphy_bitslip80[3]),
	.D5(a7ddrphy_bitslip80[4]),
	.D6(a7ddrphy_bitslip80[5]),
	.D7(a7ddrphy_bitslip80[6]),
	.D8(a7ddrphy_bitslip80[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay8),
	.TQ(a7ddrphy_dq_t8)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_8 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed8),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip81[7]),
	.Q2(a7ddrphy_bitslip81[6]),
	.Q3(a7ddrphy_bitslip81[5]),
	.Q4(a7ddrphy_bitslip81[4]),
	.Q5(a7ddrphy_bitslip81[3]),
	.Q6(a7ddrphy_bitslip81[2]),
	.Q7(a7ddrphy_bitslip81[1]),
	.Q8(a7ddrphy_bitslip81[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_8 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay8),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed8)
);

IOBUF IOBUF_8(
	.I(a7ddrphy_dq_o_nodelay8),
	.T(a7ddrphy_dq_t8),
	.IO(ddram_dq[8]),
	.O(a7ddrphy_dq_i_nodelay8)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_37 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip90[0]),
	.D2(a7ddrphy_bitslip90[1]),
	.D3(a7ddrphy_bitslip90[2]),
	.D4(a7ddrphy_bitslip90[3]),
	.D5(a7ddrphy_bitslip90[4]),
	.D6(a7ddrphy_bitslip90[5]),
	.D7(a7ddrphy_bitslip90[6]),
	.D8(a7ddrphy_bitslip90[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay9),
	.TQ(a7ddrphy_dq_t9)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_9 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed9),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip91[7]),
	.Q2(a7ddrphy_bitslip91[6]),
	.Q3(a7ddrphy_bitslip91[5]),
	.Q4(a7ddrphy_bitslip91[4]),
	.Q5(a7ddrphy_bitslip91[3]),
	.Q6(a7ddrphy_bitslip91[2]),
	.Q7(a7ddrphy_bitslip91[1]),
	.Q8(a7ddrphy_bitslip91[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_9 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay9),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed9)
);

IOBUF IOBUF_9(
	.I(a7ddrphy_dq_o_nodelay9),
	.T(a7ddrphy_dq_t9),
	.IO(ddram_dq[9]),
	.O(a7ddrphy_dq_i_nodelay9)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_38 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip100[0]),
	.D2(a7ddrphy_bitslip100[1]),
	.D3(a7ddrphy_bitslip100[2]),
	.D4(a7ddrphy_bitslip100[3]),
	.D5(a7ddrphy_bitslip100[4]),
	.D6(a7ddrphy_bitslip100[5]),
	.D7(a7ddrphy_bitslip100[6]),
	.D8(a7ddrphy_bitslip100[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay10),
	.TQ(a7ddrphy_dq_t10)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_10 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed10),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip101[7]),
	.Q2(a7ddrphy_bitslip101[6]),
	.Q3(a7ddrphy_bitslip101[5]),
	.Q4(a7ddrphy_bitslip101[4]),
	.Q5(a7ddrphy_bitslip101[3]),
	.Q6(a7ddrphy_bitslip101[2]),
	.Q7(a7ddrphy_bitslip101[1]),
	.Q8(a7ddrphy_bitslip101[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_10 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay10),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed10)
);

IOBUF IOBUF_10(
	.I(a7ddrphy_dq_o_nodelay10),
	.T(a7ddrphy_dq_t10),
	.IO(ddram_dq[10]),
	.O(a7ddrphy_dq_i_nodelay10)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_39 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip110[0]),
	.D2(a7ddrphy_bitslip110[1]),
	.D3(a7ddrphy_bitslip110[2]),
	.D4(a7ddrphy_bitslip110[3]),
	.D5(a7ddrphy_bitslip110[4]),
	.D6(a7ddrphy_bitslip110[5]),
	.D7(a7ddrphy_bitslip110[6]),
	.D8(a7ddrphy_bitslip110[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay11),
	.TQ(a7ddrphy_dq_t11)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_11 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed11),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip111[7]),
	.Q2(a7ddrphy_bitslip111[6]),
	.Q3(a7ddrphy_bitslip111[5]),
	.Q4(a7ddrphy_bitslip111[4]),
	.Q5(a7ddrphy_bitslip111[3]),
	.Q6(a7ddrphy_bitslip111[2]),
	.Q7(a7ddrphy_bitslip111[1]),
	.Q8(a7ddrphy_bitslip111[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_11 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay11),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed11)
);

IOBUF IOBUF_11(
	.I(a7ddrphy_dq_o_nodelay11),
	.T(a7ddrphy_dq_t11),
	.IO(ddram_dq[11]),
	.O(a7ddrphy_dq_i_nodelay11)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_40 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip120[0]),
	.D2(a7ddrphy_bitslip120[1]),
	.D3(a7ddrphy_bitslip120[2]),
	.D4(a7ddrphy_bitslip120[3]),
	.D5(a7ddrphy_bitslip120[4]),
	.D6(a7ddrphy_bitslip120[5]),
	.D7(a7ddrphy_bitslip120[6]),
	.D8(a7ddrphy_bitslip120[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay12),
	.TQ(a7ddrphy_dq_t12)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_12 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed12),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip121[7]),
	.Q2(a7ddrphy_bitslip121[6]),
	.Q3(a7ddrphy_bitslip121[5]),
	.Q4(a7ddrphy_bitslip121[4]),
	.Q5(a7ddrphy_bitslip121[3]),
	.Q6(a7ddrphy_bitslip121[2]),
	.Q7(a7ddrphy_bitslip121[1]),
	.Q8(a7ddrphy_bitslip121[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_12 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay12),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed12)
);

IOBUF IOBUF_12(
	.I(a7ddrphy_dq_o_nodelay12),
	.T(a7ddrphy_dq_t12),
	.IO(ddram_dq[12]),
	.O(a7ddrphy_dq_i_nodelay12)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_41 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip130[0]),
	.D2(a7ddrphy_bitslip130[1]),
	.D3(a7ddrphy_bitslip130[2]),
	.D4(a7ddrphy_bitslip130[3]),
	.D5(a7ddrphy_bitslip130[4]),
	.D6(a7ddrphy_bitslip130[5]),
	.D7(a7ddrphy_bitslip130[6]),
	.D8(a7ddrphy_bitslip130[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay13),
	.TQ(a7ddrphy_dq_t13)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_13 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed13),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip131[7]),
	.Q2(a7ddrphy_bitslip131[6]),
	.Q3(a7ddrphy_bitslip131[5]),
	.Q4(a7ddrphy_bitslip131[4]),
	.Q5(a7ddrphy_bitslip131[3]),
	.Q6(a7ddrphy_bitslip131[2]),
	.Q7(a7ddrphy_bitslip131[1]),
	.Q8(a7ddrphy_bitslip131[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_13 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay13),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed13)
);

IOBUF IOBUF_13(
	.I(a7ddrphy_dq_o_nodelay13),
	.T(a7ddrphy_dq_t13),
	.IO(ddram_dq[13]),
	.O(a7ddrphy_dq_i_nodelay13)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_42 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip140[0]),
	.D2(a7ddrphy_bitslip140[1]),
	.D3(a7ddrphy_bitslip140[2]),
	.D4(a7ddrphy_bitslip140[3]),
	.D5(a7ddrphy_bitslip140[4]),
	.D6(a7ddrphy_bitslip140[5]),
	.D7(a7ddrphy_bitslip140[6]),
	.D8(a7ddrphy_bitslip140[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay14),
	.TQ(a7ddrphy_dq_t14)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_14 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed14),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip141[7]),
	.Q2(a7ddrphy_bitslip141[6]),
	.Q3(a7ddrphy_bitslip141[5]),
	.Q4(a7ddrphy_bitslip141[4]),
	.Q5(a7ddrphy_bitslip141[3]),
	.Q6(a7ddrphy_bitslip141[2]),
	.Q7(a7ddrphy_bitslip141[1]),
	.Q8(a7ddrphy_bitslip141[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_14 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay14),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed14)
);

IOBUF IOBUF_14(
	.I(a7ddrphy_dq_o_nodelay14),
	.T(a7ddrphy_dq_t14),
	.IO(ddram_dq[14]),
	.O(a7ddrphy_dq_i_nodelay14)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_43 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip150[0]),
	.D2(a7ddrphy_bitslip150[1]),
	.D3(a7ddrphy_bitslip150[2]),
	.D4(a7ddrphy_bitslip150[3]),
	.D5(a7ddrphy_bitslip150[4]),
	.D6(a7ddrphy_bitslip150[5]),
	.D7(a7ddrphy_bitslip150[6]),
	.D8(a7ddrphy_bitslip150[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay15),
	.TQ(a7ddrphy_dq_t15)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_15 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed15),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip151[7]),
	.Q2(a7ddrphy_bitslip151[6]),
	.Q3(a7ddrphy_bitslip151[5]),
	.Q4(a7ddrphy_bitslip151[4]),
	.Q5(a7ddrphy_bitslip151[3]),
	.Q6(a7ddrphy_bitslip151[2]),
	.Q7(a7ddrphy_bitslip151[1]),
	.Q8(a7ddrphy_bitslip151[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_15 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay15),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed15)
);

IOBUF IOBUF_15(
	.I(a7ddrphy_dq_o_nodelay15),
	.T(a7ddrphy_dq_t15),
	.IO(ddram_dq[15]),
	.O(a7ddrphy_dq_i_nodelay15)
);

//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_2[0:7];
reg [23:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we)
		storage_2[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
	storage_2_dat0 <= storage_2[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r = storage_2_dat0;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r = storage_2[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_3[0:7];
reg [23:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we)
		storage_3[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
	storage_3_dat0 <= storage_3[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r = storage_3_dat0;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r = storage_3[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_4[0:7];
reg [23:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we)
		storage_4[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
	storage_4_dat0 <= storage_4[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r = storage_4_dat0;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r = storage_4[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_5[0:7];
reg [23:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we)
		storage_5[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
	storage_5_dat0 <= storage_5[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r = storage_5_dat0;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r = storage_5[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_6[0:7];
reg [23:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we)
		storage_6[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
	storage_6_dat0 <= storage_6[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r = storage_6_dat0;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r = storage_6[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_7[0:7];
reg [23:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we)
		storage_7[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
	storage_7_dat0 <= storage_7[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r = storage_7_dat0;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r = storage_7[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_8[0:7];
reg [23:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we)
		storage_8[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
	storage_8_dat0 <= storage_8[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r = storage_8_dat0;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r = storage_8[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_9[0:7];
reg [23:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we)
		storage_9[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
	storage_9_dat0 <= storage_9[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r = storage_9_dat0;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r = storage_9[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory tag_mem: 512-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 24 
reg [23:0] tag_mem[0:511];
reg [8:0] tag_mem_adr0;
always @(posedge sys_clk) begin
	if (basesoc_tag_port_we)
		tag_mem[basesoc_tag_port_adr] <= basesoc_tag_port_dat_w;
	tag_mem_adr0 <= basesoc_tag_port_adr;
end
assign basesoc_tag_port_dat_r = tag_mem[tag_mem_adr0];


assign eth_mdio = ethphy_data_oe ? ethphy_data_w : 1'bz;
assign ethphy_data_r = eth_mdio;

//------------------------------------------------------------------------------
// Memory storage_10: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_10[0:31];
reg [41:0] storage_10_dat0;
reg [41:0] storage_10_dat1;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_tx_cdc_cdc_wrport_we)
		storage_10[basesoc_ethmac_tx_cdc_cdc_wrport_adr] <= basesoc_ethmac_tx_cdc_cdc_wrport_dat_w;
	storage_10_dat0 <= storage_10[basesoc_ethmac_tx_cdc_cdc_wrport_adr];
end
always @(posedge eth_tx_clk) begin
	storage_10_dat1 <= storage_10[basesoc_ethmac_tx_cdc_cdc_rdport_adr];
end
assign basesoc_ethmac_tx_cdc_cdc_wrport_dat_r = storage_10_dat0;
assign basesoc_ethmac_tx_cdc_cdc_rdport_dat_r = storage_10_dat1;


//------------------------------------------------------------------------------
// Memory storage_11: 5-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 12 
// Port 1 | Read: Async | Write: ---- | 
reg [11:0] storage_11[0:4];
reg [11:0] storage_11_dat0;
always @(posedge eth_rx_clk) begin
	if (basesoc_ethmac_rx_crc_syncfifo_wrport_we)
		storage_11[basesoc_ethmac_rx_crc_syncfifo_wrport_adr] <= basesoc_ethmac_rx_crc_syncfifo_wrport_dat_w;
	storage_11_dat0 <= storage_11[basesoc_ethmac_rx_crc_syncfifo_wrport_adr];
end
always @(posedge eth_rx_clk) begin
end
assign basesoc_ethmac_rx_crc_syncfifo_wrport_dat_r = storage_11_dat0;
assign basesoc_ethmac_rx_crc_syncfifo_rdport_dat_r = storage_11[basesoc_ethmac_rx_crc_syncfifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_12: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_12[0:31];
reg [41:0] storage_12_dat0;
reg [41:0] storage_12_dat1;
always @(posedge eth_rx_clk) begin
	if (basesoc_ethmac_rx_cdc_cdc_wrport_we)
		storage_12[basesoc_ethmac_rx_cdc_cdc_wrport_adr] <= basesoc_ethmac_rx_cdc_cdc_wrport_dat_w;
	storage_12_dat0 <= storage_12[basesoc_ethmac_rx_cdc_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_12_dat1 <= storage_12[basesoc_ethmac_rx_cdc_cdc_rdport_adr];
end
assign basesoc_ethmac_rx_cdc_cdc_wrport_dat_r = storage_12_dat0;
assign basesoc_ethmac_rx_cdc_cdc_rdport_dat_r = storage_12_dat1;


//------------------------------------------------------------------------------
// Memory storage_13: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_13[0:1];
reg [13:0] storage_13_dat0;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram61_we)
		storage_13[basesoc_ethmac_sram59_adr] <= basesoc_ethmac_sram62_dat_w;
	storage_13_dat0 <= storage_13[basesoc_ethmac_sram59_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_ethmac_sram60_dat_r = storage_13_dat0;
assign basesoc_ethmac_sram65_dat_r = storage_13[basesoc_ethmac_sram64_adr];


//------------------------------------------------------------------------------
// Memory mem_3: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_3[0:382];
reg [8:0] mem_3_adr0;
reg [31:0] mem_3_dat1;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram77_we)
		mem_3[basesoc_ethmac_sram75_adr] <= basesoc_ethmac_sram78_dat_w;
	mem_3_adr0 <= basesoc_ethmac_sram75_adr;
end
always @(posedge sys_clk) begin
	mem_3_dat1 <= mem_3[basesoc_ethmac_sram2_adr];
end
assign basesoc_ethmac_sram76_dat_r = mem_3[mem_3_adr0];
assign basesoc_ethmac_sram2_dat_r = mem_3_dat1;


//------------------------------------------------------------------------------
// Memory mem_4: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_4[0:382];
reg [8:0] mem_4_adr0;
reg [31:0] mem_4_dat1;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram81_we)
		mem_4[basesoc_ethmac_sram79_adr] <= basesoc_ethmac_sram82_dat_w;
	mem_4_adr0 <= basesoc_ethmac_sram79_adr;
end
always @(posedge sys_clk) begin
	mem_4_dat1 <= mem_4[basesoc_ethmac_sram3_adr];
end
assign basesoc_ethmac_sram80_dat_r = mem_4[mem_4_adr0];
assign basesoc_ethmac_sram3_dat_r = mem_4_dat1;


//------------------------------------------------------------------------------
// Memory storage_14: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_14[0:1];
reg [13:0] storage_14_dat0;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram147_we)
		storage_14[basesoc_ethmac_sram145_adr] <= basesoc_ethmac_sram148_dat_w;
	storage_14_dat0 <= storage_14[basesoc_ethmac_sram145_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_ethmac_sram146_dat_r = storage_14_dat0;
assign basesoc_ethmac_sram151_dat_r = storage_14[basesoc_ethmac_sram150_adr];


//------------------------------------------------------------------------------
// Memory mem_5: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_5[0:382];
reg [8:0] mem_5_adr0;
reg [8:0] mem_5_adr1;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram163_re)
		mem_5_adr0 <= basesoc_ethmac_sram161_adr;
end
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram4_we[0])
		mem_5[basesoc_ethmac_sram4_adr][7:0] <= basesoc_ethmac_sram4_dat_w[7:0];
	if (basesoc_ethmac_sram4_we[1])
		mem_5[basesoc_ethmac_sram4_adr][15:8] <= basesoc_ethmac_sram4_dat_w[15:8];
	if (basesoc_ethmac_sram4_we[2])
		mem_5[basesoc_ethmac_sram4_adr][23:16] <= basesoc_ethmac_sram4_dat_w[23:16];
	if (basesoc_ethmac_sram4_we[3])
		mem_5[basesoc_ethmac_sram4_adr][31:24] <= basesoc_ethmac_sram4_dat_w[31:24];
	mem_5_adr1 <= basesoc_ethmac_sram4_adr;
end
assign basesoc_ethmac_sram162_dat_r = mem_5[mem_5_adr0];
assign basesoc_ethmac_sram4_dat_r = mem_5[mem_5_adr1];


//------------------------------------------------------------------------------
// Memory mem_6: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_6[0:382];
reg [8:0] mem_6_adr0;
reg [8:0] mem_6_adr1;
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram166_re)
		mem_6_adr0 <= basesoc_ethmac_sram164_adr;
end
always @(posedge sys_clk) begin
	if (basesoc_ethmac_sram5_we[0])
		mem_6[basesoc_ethmac_sram5_adr][7:0] <= basesoc_ethmac_sram5_dat_w[7:0];
	if (basesoc_ethmac_sram5_we[1])
		mem_6[basesoc_ethmac_sram5_adr][15:8] <= basesoc_ethmac_sram5_dat_w[15:8];
	if (basesoc_ethmac_sram5_we[2])
		mem_6[basesoc_ethmac_sram5_adr][23:16] <= basesoc_ethmac_sram5_dat_w[23:16];
	if (basesoc_ethmac_sram5_we[3])
		mem_6[basesoc_ethmac_sram5_adr][31:24] <= basesoc_ethmac_sram5_dat_w[31:24];
	mem_6_adr1 <= basesoc_ethmac_sram5_adr;
end
assign basesoc_ethmac_sram165_dat_r = mem_6[mem_6_adr0];
assign basesoc_ethmac_sram5_dat_r = mem_6[mem_6_adr1];


FemtoRV32 #(
	.ADDR_WIDTH(6'd32),
	.RESET_ADDR(32'd0)
) FemtoRV32 (
	.clk(sys_clk),
	.mem_rbusy(basesoc_mbus_rbusy),
	.mem_rdata(basesoc_mbus_rdata0),
	.mem_wbusy(basesoc_mbus_wbusy),
	.reset((~(sys_rst | basesoc_reset))),
	.mem_addr(basesoc_mbus_addr),
	.mem_rstrb(basesoc_mbus_rstrb),
	.mem_wdata(basesoc_mbus_wdata),
	.mem_wmask(basesoc_mbus_wmask)
);

FDCE FDCE(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(crg_reset),
	.Q(reset0)
);

FDCE FDCE_1(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset0),
	.Q(reset1)
);

FDCE FDCE_2(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset1),
	.Q(reset2)
);

FDCE FDCE_3(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset2),
	.Q(reset3)
);

FDCE FDCE_4(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset3),
	.Q(reset4)
);

FDCE FDCE_5(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset4),
	.Q(reset5)
);

FDCE FDCE_6(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset5),
	.Q(reset6)
);

FDCE FDCE_7(
	.C(crg_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(reset6),
	.Q(reset7)
);

PLLE2_ADV #(
	.CLKFBOUT_MULT(6'd32),
	.CLKIN1_PERIOD(20.0),
	.CLKOUT0_DIVIDE(5'd16),
	.CLKOUT0_PHASE(1'd0),
	.CLKOUT1_DIVIDE(3'd4),
	.CLKOUT1_PHASE(1'd0),
	.CLKOUT2_DIVIDE(3'd4),
	.CLKOUT2_PHASE(7'd90),
	.CLKOUT3_DIVIDE(4'd8),
	.CLKOUT3_PHASE(1'd0),
	.CLKOUT4_DIVIDE(7'd64),
	.CLKOUT4_PHASE(1'd0),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01),
	.STARTUP_WAIT("FALSE")
) PLLE2_ADV (
	.CLKFBIN(pll_fb),
	.CLKIN1(crg_clkin),
	.PWRDWN(crg_power_down),
	.RST(reset7),
	.CLKFBOUT(pll_fb),
	.CLKOUT0(crg_clkout0),
	.CLKOUT1(crg_clkout1),
	.CLKOUT2(crg_clkout2),
	.CLKOUT3(crg_clkout3),
	.CLKOUT4(crg_clkout4),
	.LOCKED(crg_locked)
);

//------------------------------------------------------------------------------
// Memory data_mem_grain0: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain0[0:511];
reg [8:0] data_mem_grain0_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[0])
		data_mem_grain0[basesoc_data_port_adr] <= basesoc_data_port_dat_w[7:0];
	data_mem_grain0_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[7:0] = data_mem_grain0[data_mem_grain0_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain1: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain1[0:511];
reg [8:0] data_mem_grain1_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[1])
		data_mem_grain1[basesoc_data_port_adr] <= basesoc_data_port_dat_w[15:8];
	data_mem_grain1_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[15:8] = data_mem_grain1[data_mem_grain1_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain2: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain2[0:511];
reg [8:0] data_mem_grain2_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[2])
		data_mem_grain2[basesoc_data_port_adr] <= basesoc_data_port_dat_w[23:16];
	data_mem_grain2_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[23:16] = data_mem_grain2[data_mem_grain2_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain3: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain3[0:511];
reg [8:0] data_mem_grain3_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[3])
		data_mem_grain3[basesoc_data_port_adr] <= basesoc_data_port_dat_w[31:24];
	data_mem_grain3_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[31:24] = data_mem_grain3[data_mem_grain3_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain4: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain4[0:511];
reg [8:0] data_mem_grain4_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[4])
		data_mem_grain4[basesoc_data_port_adr] <= basesoc_data_port_dat_w[39:32];
	data_mem_grain4_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[39:32] = data_mem_grain4[data_mem_grain4_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain5: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain5[0:511];
reg [8:0] data_mem_grain5_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[5])
		data_mem_grain5[basesoc_data_port_adr] <= basesoc_data_port_dat_w[47:40];
	data_mem_grain5_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[47:40] = data_mem_grain5[data_mem_grain5_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain6: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain6[0:511];
reg [8:0] data_mem_grain6_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[6])
		data_mem_grain6[basesoc_data_port_adr] <= basesoc_data_port_dat_w[55:48];
	data_mem_grain6_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[55:48] = data_mem_grain6[data_mem_grain6_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain7: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain7[0:511];
reg [8:0] data_mem_grain7_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[7])
		data_mem_grain7[basesoc_data_port_adr] <= basesoc_data_port_dat_w[63:56];
	data_mem_grain7_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[63:56] = data_mem_grain7[data_mem_grain7_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain8: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain8[0:511];
reg [8:0] data_mem_grain8_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[8])
		data_mem_grain8[basesoc_data_port_adr] <= basesoc_data_port_dat_w[71:64];
	data_mem_grain8_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[71:64] = data_mem_grain8[data_mem_grain8_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain9: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain9[0:511];
reg [8:0] data_mem_grain9_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[9])
		data_mem_grain9[basesoc_data_port_adr] <= basesoc_data_port_dat_w[79:72];
	data_mem_grain9_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[79:72] = data_mem_grain9[data_mem_grain9_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain10: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain10[0:511];
reg [8:0] data_mem_grain10_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[10])
		data_mem_grain10[basesoc_data_port_adr] <= basesoc_data_port_dat_w[87:80];
	data_mem_grain10_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[87:80] = data_mem_grain10[data_mem_grain10_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain11: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain11[0:511];
reg [8:0] data_mem_grain11_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[11])
		data_mem_grain11[basesoc_data_port_adr] <= basesoc_data_port_dat_w[95:88];
	data_mem_grain11_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[95:88] = data_mem_grain11[data_mem_grain11_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain12: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain12[0:511];
reg [8:0] data_mem_grain12_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[12])
		data_mem_grain12[basesoc_data_port_adr] <= basesoc_data_port_dat_w[103:96];
	data_mem_grain12_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[103:96] = data_mem_grain12[data_mem_grain12_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain13: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain13[0:511];
reg [8:0] data_mem_grain13_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[13])
		data_mem_grain13[basesoc_data_port_adr] <= basesoc_data_port_dat_w[111:104];
	data_mem_grain13_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[111:104] = data_mem_grain13[data_mem_grain13_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain14: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain14[0:511];
reg [8:0] data_mem_grain14_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[14])
		data_mem_grain14[basesoc_data_port_adr] <= basesoc_data_port_dat_w[119:112];
	data_mem_grain14_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[119:112] = data_mem_grain14[data_mem_grain14_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain15: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain15[0:511];
reg [8:0] data_mem_grain15_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[15])
		data_mem_grain15[basesoc_data_port_adr] <= basesoc_data_port_dat_w[127:120];
	data_mem_grain15_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[127:120] = data_mem_grain15[data_mem_grain15_adr0];


FDPE #(
	.INIT(1'd1)
) FDPE (
	.C(sys_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl0),
	.Q(xilinxasyncresetsynchronizerimpl0_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl0),
	.Q(sys_rst)
);

FDPE #(
	.INIT(1'd1)
) FDPE_2 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl1),
	.Q(xilinxasyncresetsynchronizerimpl1_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_3 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl1),
	.Q(xilinxasyncresetsynchronizerimpl1_expr)
);

FDPE #(
	.INIT(1'd1)
) FDPE_4 (
	.C(sys4x_dqs_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl2),
	.Q(xilinxasyncresetsynchronizerimpl2_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_5 (
	.C(sys4x_dqs_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl2),
	.Q(xilinxasyncresetsynchronizerimpl2_expr)
);

FDPE #(
	.INIT(1'd1)
) FDPE_6 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl3),
	.Q(xilinxasyncresetsynchronizerimpl3_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_7 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl3),
	.Q(idelay_rst)
);

FDPE #(
	.INIT(1'd1)
) FDPE_8 (
	.C(eth_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl4),
	.Q(xilinxasyncresetsynchronizerimpl4_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_9 (
	.C(eth_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl4_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl4),
	.Q(eth_rst)
);

FDPE #(
	.INIT(1'd1)
) FDPE_10 (
	.C(eth_tx_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(ethphy_reset0),
	.Q(xilinxasyncresetsynchronizerimpl5_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_11 (
	.C(eth_tx_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl5_rst_meta),
	.PRE(ethphy_reset0),
	.Q(eth_tx_rst)
);

FDPE #(
	.INIT(1'd1)
) FDPE_12 (
	.C(eth_rx_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(ethphy_reset0),
	.Q(xilinxasyncresetsynchronizerimpl6_rst_meta)
);

FDPE #(
	.INIT(1'd1)
) FDPE_13 (
	.C(eth_rx_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl6_rst_meta),
	.PRE(ethphy_reset0),
	.Q(eth_rx_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-03-29 08:46:23.
//------------------------------------------------------------------------------
